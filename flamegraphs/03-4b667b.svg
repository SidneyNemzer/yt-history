<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="982" onload="init(evt)" viewBox="0 0 1200 982" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="982" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="965.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="965.00"> </text><svg id="frames" x="10" width="1180" total_samples="8365"><g><title>[[stack]] (1 samples, 0.01%)</title><rect x="0.0000%" y="901" width="0.0120%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="911.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="0.0000%" y="885" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0000%" y="869" width="0.0120%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.04%)</title><rect x="0.1195%" y="821" width="0.0359%" height="15" fill="rgb(248,212,6)" fg:x="10" fg:w="3"/><text x="0.3695%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (3 samples, 0.04%)</title><rect x="0.1195%" y="805" width="0.0359%" height="15" fill="rgb(208,68,35)" fg:x="10" fg:w="3"/><text x="0.3695%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (10 samples, 0.12%)</title><rect x="0.0478%" y="853" width="0.1195%" height="15" fill="rgb(232,128,0)" fg:x="4" fg:w="10"/><text x="0.2978%" y="863.50"></text></g><g><title>[ld-linux-x86-64.so.2] (6 samples, 0.07%)</title><rect x="0.0956%" y="837" width="0.0717%" height="15" fill="rgb(207,160,47)" fg:x="8" fg:w="6"/><text x="0.3456%" y="847.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="0.1554%" y="821" width="0.0120%" height="15" fill="rgb(228,23,34)" fg:x="13" fg:w="1"/><text x="0.4054%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1554%" y="805" width="0.0120%" height="15" fill="rgb(218,30,26)" fg:x="13" fg:w="1"/><text x="0.4054%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1554%" y="789" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="13" fg:w="1"/><text x="0.4054%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.1554%" y="773" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="13" fg:w="1"/><text x="0.4054%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="757" width="0.0120%" height="15" fill="rgb(240,193,28)" fg:x="13" fg:w="1"/><text x="0.4054%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="741" width="0.0120%" height="15" fill="rgb(216,20,37)" fg:x="13" fg:w="1"/><text x="0.4054%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="725" width="0.0120%" height="15" fill="rgb(206,188,39)" fg:x="13" fg:w="1"/><text x="0.4054%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="709" width="0.0120%" height="15" fill="rgb(217,207,13)" fg:x="13" fg:w="1"/><text x="0.4054%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="693" width="0.0120%" height="15" fill="rgb(231,73,38)" fg:x="13" fg:w="1"/><text x="0.4054%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="677" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="13" fg:w="1"/><text x="0.4054%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1554%" y="661" width="0.0120%" height="15" fill="rgb(210,31,41)" fg:x="13" fg:w="1"/><text x="0.4054%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (14 samples, 0.17%)</title><rect x="0.0239%" y="869" width="0.1674%" height="15" fill="rgb(221,200,47)" fg:x="2" fg:w="14"/><text x="0.2739%" y="879.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1674%" y="853" width="0.0239%" height="15" fill="rgb(226,26,5)" fg:x="14" fg:w="2"/><text x="0.4174%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1674%" y="837" width="0.0239%" height="15" fill="rgb(249,33,26)" fg:x="14" fg:w="2"/><text x="0.4174%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1674%" y="821" width="0.0239%" height="15" fill="rgb(235,183,28)" fg:x="14" fg:w="2"/><text x="0.4174%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1674%" y="805" width="0.0239%" height="15" fill="rgb(221,5,38)" fg:x="14" fg:w="2"/><text x="0.4174%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.1674%" y="789" width="0.0239%" height="15" fill="rgb(247,18,42)" fg:x="14" fg:w="2"/><text x="0.4174%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (18 samples, 0.22%)</title><rect x="0.0120%" y="885" width="0.2152%" height="15" fill="rgb(241,131,45)" fg:x="1" fg:w="18"/><text x="0.2620%" y="895.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="0.1913%" y="869" width="0.0359%" height="15" fill="rgb(249,31,29)" fg:x="16" fg:w="3"/><text x="0.4413%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="853" width="0.0120%" height="15" fill="rgb(225,111,53)" fg:x="18" fg:w="1"/><text x="0.4652%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="837" width="0.0120%" height="15" fill="rgb(238,160,17)" fg:x="18" fg:w="1"/><text x="0.4652%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="821" width="0.0120%" height="15" fill="rgb(214,148,48)" fg:x="18" fg:w="1"/><text x="0.4652%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="805" width="0.0120%" height="15" fill="rgb(232,36,49)" fg:x="18" fg:w="1"/><text x="0.4652%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="789" width="0.0120%" height="15" fill="rgb(209,103,24)" fg:x="18" fg:w="1"/><text x="0.4652%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="773" width="0.0120%" height="15" fill="rgb(229,88,8)" fg:x="18" fg:w="1"/><text x="0.4652%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2152%" y="757" width="0.0120%" height="15" fill="rgb(213,181,19)" fg:x="18" fg:w="1"/><text x="0.4652%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (20 samples, 0.24%)</title><rect x="0.0120%" y="901" width="0.2391%" height="15" fill="rgb(254,191,54)" fg:x="1" fg:w="20"/><text x="0.2620%" y="911.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2271%" y="885" width="0.0239%" height="15" fill="rgb(241,83,37)" fg:x="19" fg:w="2"/><text x="0.4771%" y="895.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2391%" y="869" width="0.0120%" height="15" fill="rgb(233,36,39)" fg:x="20" fg:w="1"/><text x="0.4891%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2391%" y="853" width="0.0120%" height="15" fill="rgb(226,3,54)" fg:x="20" fg:w="1"/><text x="0.4891%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2391%" y="837" width="0.0120%" height="15" fill="rgb(245,192,40)" fg:x="20" fg:w="1"/><text x="0.4891%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2391%" y="821" width="0.0120%" height="15" fill="rgb(238,167,29)" fg:x="20" fg:w="1"/><text x="0.4891%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2510%" y="901" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="21" fg:w="1"/><text x="0.5010%" y="911.50"></text></g><g><title>_fini (1 samples, 0.01%)</title><rect x="0.2510%" y="885" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="21" fg:w="1"/><text x="0.5010%" y="895.50"></text></g><g><title>read (1 samples, 0.01%)</title><rect x="0.2510%" y="869" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="21" fg:w="1"/><text x="0.5010%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2510%" y="853" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="21" fg:w="1"/><text x="0.5010%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2510%" y="837" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="21" fg:w="1"/><text x="0.5010%" y="847.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="0.2630%" y="629" width="0.0359%" height="15" fill="rgb(222,207,29)" fg:x="22" fg:w="3"/><text x="0.5130%" y="639.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.2630%" y="613" width="0.0359%" height="15" fill="rgb(206,96,30)" fg:x="22" fg:w="3"/><text x="0.5130%" y="623.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.2630%" y="597" width="0.0359%" height="15" fill="rgb(218,138,4)" fg:x="22" fg:w="3"/><text x="0.5130%" y="607.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="0.2750%" y="581" width="0.0239%" height="15" fill="rgb(250,191,14)" fg:x="23" fg:w="2"/><text x="0.5250%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Models&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="629" width="0.0239%" height="15" fill="rgb(239,60,40)" fg:x="25" fg:w="2"/><text x="0.5489%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="613" width="0.0239%" height="15" fill="rgb(206,27,48)" fg:x="25" fg:w="2"/><text x="0.5489%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.2989%" y="597" width="0.0239%" height="15" fill="rgb(225,35,8)" fg:x="25" fg:w="2"/><text x="0.5489%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;yt_history::model::Video&gt;]&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="581" width="0.0239%" height="15" fill="rgb(250,213,24)" fg:x="25" fg:w="2"/><text x="0.5489%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="565" width="0.0239%" height="15" fill="rgb(247,123,22)" fg:x="25" fg:w="2"/><text x="0.5489%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.2989%" y="549" width="0.0239%" height="15" fill="rgb(231,138,38)" fg:x="25" fg:w="2"/><text x="0.5489%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Video&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="533" width="0.0239%" height="15" fill="rgb(231,145,46)" fg:x="25" fg:w="2"/><text x="0.5489%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="517" width="0.0239%" height="15" fill="rgb(251,118,11)" fg:x="25" fg:w="2"/><text x="0.5489%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="501" width="0.0239%" height="15" fill="rgb(217,147,25)" fg:x="25" fg:w="2"/><text x="0.5489%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="0.2989%" y="485" width="0.0239%" height="15" fill="rgb(247,81,37)" fg:x="25" fg:w="2"/><text x="0.5489%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.2989%" y="469" width="0.0239%" height="15" fill="rgb(209,12,38)" fg:x="25" fg:w="2"/><text x="0.5489%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="0.2989%" y="453" width="0.0239%" height="15" fill="rgb(227,1,9)" fg:x="25" fg:w="2"/><text x="0.5489%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="0.2989%" y="437" width="0.0239%" height="15" fill="rgb(248,47,43)" fg:x="25" fg:w="2"/><text x="0.5489%" y="447.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="0.2989%" y="421" width="0.0239%" height="15" fill="rgb(221,10,30)" fg:x="25" fg:w="2"/><text x="0.5489%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="0.4065%" y="501" width="0.0717%" height="15" fill="rgb(210,229,1)" fg:x="34" fg:w="6"/><text x="0.6565%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="0.4065%" y="485" width="0.0717%" height="15" fill="rgb(222,148,37)" fg:x="34" fg:w="6"/><text x="0.6565%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="0.4065%" y="469" width="0.0717%" height="15" fill="rgb(234,67,33)" fg:x="34" fg:w="6"/><text x="0.6565%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="0.4065%" y="453" width="0.0717%" height="15" fill="rgb(247,98,35)" fg:x="34" fg:w="6"/><text x="0.6565%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="0.4065%" y="437" width="0.0717%" height="15" fill="rgb(247,138,52)" fg:x="34" fg:w="6"/><text x="0.6565%" y="447.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="0.4065%" y="421" width="0.0717%" height="15" fill="rgb(213,79,30)" fg:x="34" fg:w="6"/><text x="0.6565%" y="431.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="0.4184%" y="405" width="0.0598%" height="15" fill="rgb(246,177,23)" fg:x="35" fg:w="5"/><text x="0.6684%" y="415.50"></text></g><g><title>&lt;yt_history::DataRow as core::clone::Clone&gt;::clone (14 samples, 0.17%)</title><rect x="0.3347%" y="597" width="0.1674%" height="15" fill="rgb(230,62,27)" fg:x="28" fg:w="14"/><text x="0.5847%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (13 samples, 0.16%)</title><rect x="0.3467%" y="581" width="0.1554%" height="15" fill="rgb(216,154,8)" fg:x="29" fg:w="13"/><text x="0.5967%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.10%)</title><rect x="0.4065%" y="565" width="0.0956%" height="15" fill="rgb(244,35,45)" fg:x="34" fg:w="8"/><text x="0.6565%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.10%)</title><rect x="0.4065%" y="549" width="0.0956%" height="15" fill="rgb(251,115,12)" fg:x="34" fg:w="8"/><text x="0.6565%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.10%)</title><rect x="0.4065%" y="533" width="0.0956%" height="15" fill="rgb(240,54,50)" fg:x="34" fg:w="8"/><text x="0.6565%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.10%)</title><rect x="0.4065%" y="517" width="0.0956%" height="15" fill="rgb(233,84,52)" fg:x="34" fg:w="8"/><text x="0.6565%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="0.4782%" y="501" width="0.0239%" height="15" fill="rgb(207,117,47)" fg:x="40" fg:w="2"/><text x="0.7282%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="0.4782%" y="485" width="0.0239%" height="15" fill="rgb(249,43,39)" fg:x="40" fg:w="2"/><text x="0.7282%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="0.4782%" y="469" width="0.0239%" height="15" fill="rgb(209,38,44)" fg:x="40" fg:w="2"/><text x="0.7282%" y="479.50"></text></g><g><title>alloc::string::String::with_capacity (3 samples, 0.04%)</title><rect x="0.5260%" y="533" width="0.0359%" height="15" fill="rgb(236,212,23)" fg:x="44" fg:w="3"/><text x="0.7760%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (3 samples, 0.04%)</title><rect x="0.5260%" y="517" width="0.0359%" height="15" fill="rgb(242,79,21)" fg:x="44" fg:w="3"/><text x="0.7760%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="0.5260%" y="501" width="0.0359%" height="15" fill="rgb(211,96,35)" fg:x="44" fg:w="3"/><text x="0.7760%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (3 samples, 0.04%)</title><rect x="0.5260%" y="485" width="0.0359%" height="15" fill="rgb(253,215,40)" fg:x="44" fg:w="3"/><text x="0.7760%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (3 samples, 0.04%)</title><rect x="0.5260%" y="469" width="0.0359%" height="15" fill="rgb(211,81,21)" fg:x="44" fg:w="3"/><text x="0.7760%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="0.5260%" y="453" width="0.0359%" height="15" fill="rgb(208,190,38)" fg:x="44" fg:w="3"/><text x="0.7760%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="0.5260%" y="437" width="0.0359%" height="15" fill="rgb(235,213,38)" fg:x="44" fg:w="3"/><text x="0.7760%" y="447.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="0.5260%" y="421" width="0.0359%" height="15" fill="rgb(237,122,38)" fg:x="44" fg:w="3"/><text x="0.7760%" y="431.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="0.5260%" y="405" width="0.0359%" height="15" fill="rgb(244,218,35)" fg:x="44" fg:w="3"/><text x="0.7760%" y="415.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.02%)</title><rect x="0.5619%" y="533" width="0.0239%" height="15" fill="rgb(240,68,47)" fg:x="47" fg:w="2"/><text x="0.8119%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="0.5738%" y="517" width="0.0120%" height="15" fill="rgb(210,16,53)" fg:x="48" fg:w="1"/><text x="0.8238%" y="527.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="0.5738%" y="501" width="0.0120%" height="15" fill="rgb(235,124,12)" fg:x="48" fg:w="1"/><text x="0.8238%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="0.5738%" y="485" width="0.0120%" height="15" fill="rgb(224,169,11)" fg:x="48" fg:w="1"/><text x="0.8238%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="0.5738%" y="469" width="0.0120%" height="15" fill="rgb(250,166,2)" fg:x="48" fg:w="1"/><text x="0.8238%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.5738%" y="453" width="0.0120%" height="15" fill="rgb(242,216,29)" fg:x="48" fg:w="1"/><text x="0.8238%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (5 samples, 0.06%)</title><rect x="0.5977%" y="501" width="0.0598%" height="15" fill="rgb(230,116,27)" fg:x="50" fg:w="5"/><text x="0.8477%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.6455%" y="485" width="0.0120%" height="15" fill="rgb(228,99,48)" fg:x="54" fg:w="1"/><text x="0.8955%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="0.6455%" y="469" width="0.0120%" height="15" fill="rgb(253,11,6)" fg:x="54" fg:w="1"/><text x="0.8955%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="0.6455%" y="453" width="0.0120%" height="15" fill="rgb(247,143,39)" fg:x="54" fg:w="1"/><text x="0.8955%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="0.6455%" y="437" width="0.0120%" height="15" fill="rgb(236,97,10)" fg:x="54" fg:w="1"/><text x="0.8955%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="0.6455%" y="421" width="0.0120%" height="15" fill="rgb(233,208,19)" fg:x="54" fg:w="1"/><text x="0.8955%" y="431.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (1 samples, 0.01%)</title><rect x="0.7531%" y="453" width="0.0120%" height="15" fill="rgb(216,164,2)" fg:x="63" fg:w="1"/><text x="1.0031%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="0.7770%" y="421" width="0.0120%" height="15" fill="rgb(220,129,5)" fg:x="65" fg:w="1"/><text x="1.0270%" y="431.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="0.8010%" y="405" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="67" fg:w="1"/><text x="1.0510%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="0.8129%" y="405" width="0.0359%" height="15" fill="rgb(242,107,0)" fg:x="68" fg:w="3"/><text x="1.0629%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="0.8249%" y="389" width="0.0239%" height="15" fill="rgb(251,28,31)" fg:x="69" fg:w="2"/><text x="1.0749%" y="399.50"></text></g><g><title>&lt;core::char::EscapeDebug as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="1.2911%" y="389" width="0.0717%" height="15" fill="rgb(233,223,10)" fg:x="108" fg:w="6"/><text x="1.5411%" y="399.50"></text></g><g><title>&lt;core::char::EscapeDefault as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="1.2911%" y="373" width="0.0717%" height="15" fill="rgb(215,21,27)" fg:x="108" fg:w="6"/><text x="1.5411%" y="383.50"></text></g><g><title>&lt;core::char::EscapeUnicode as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="1.3270%" y="357" width="0.0359%" height="15" fill="rgb(232,23,21)" fg:x="111" fg:w="3"/><text x="1.5770%" y="367.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::from_digit (1 samples, 0.01%)</title><rect x="1.3509%" y="341" width="0.0120%" height="15" fill="rgb(244,5,23)" fg:x="113" fg:w="1"/><text x="1.6009%" y="351.50"></text></g><g><title>core::char::convert::from_digit (1 samples, 0.01%)</title><rect x="1.3509%" y="325" width="0.0120%" height="15" fill="rgb(226,81,46)" fg:x="113" fg:w="1"/><text x="1.6009%" y="335.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.13%)</title><rect x="1.4943%" y="341" width="0.1315%" height="15" fill="rgb(247,70,30)" fg:x="125" fg:w="11"/><text x="1.7443%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.11%)</title><rect x="1.5182%" y="325" width="0.1076%" height="15" fill="rgb(212,68,19)" fg:x="127" fg:w="9"/><text x="1.7682%" y="335.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.11%)</title><rect x="1.5182%" y="309" width="0.1076%" height="15" fill="rgb(240,187,13)" fg:x="127" fg:w="9"/><text x="1.7682%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.11%)</title><rect x="1.5182%" y="293" width="0.1076%" height="15" fill="rgb(223,113,26)" fg:x="127" fg:w="9"/><text x="1.7682%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.11%)</title><rect x="1.5182%" y="277" width="0.1076%" height="15" fill="rgb(206,192,2)" fg:x="127" fg:w="9"/><text x="1.7682%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.11%)</title><rect x="1.5182%" y="261" width="0.1076%" height="15" fill="rgb(241,108,4)" fg:x="127" fg:w="9"/><text x="1.7682%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (8 samples, 0.10%)</title><rect x="1.5302%" y="245" width="0.0956%" height="15" fill="rgb(247,173,49)" fg:x="128" fg:w="8"/><text x="1.7802%" y="255.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="1.5302%" y="229" width="0.0956%" height="15" fill="rgb(224,114,35)" fg:x="128" fg:w="8"/><text x="1.7802%" y="239.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="1.6258%" y="325" width="0.0120%" height="15" fill="rgb(245,159,27)" fg:x="136" fg:w="1"/><text x="1.8758%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="1.6856%" y="293" width="0.0120%" height="15" fill="rgb(245,172,44)" fg:x="141" fg:w="1"/><text x="1.9356%" y="303.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="1.6856%" y="277" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="141" fg:w="1"/><text x="1.9356%" y="287.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (24 samples, 0.29%)</title><rect x="1.4226%" y="357" width="0.2869%" height="15" fill="rgb(205,117,38)" fg:x="119" fg:w="24"/><text x="1.6726%" y="367.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="1.6258%" y="341" width="0.0837%" height="15" fill="rgb(237,72,25)" fg:x="136" fg:w="7"/><text x="1.8758%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (6 samples, 0.07%)</title><rect x="1.6378%" y="325" width="0.0717%" height="15" fill="rgb(244,70,9)" fg:x="137" fg:w="6"/><text x="1.8878%" y="335.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.02%)</title><rect x="1.6856%" y="309" width="0.0239%" height="15" fill="rgb(217,125,39)" fg:x="141" fg:w="2"/><text x="1.9356%" y="319.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.01%)</title><rect x="1.6975%" y="293" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="142" fg:w="1"/><text x="1.9475%" y="303.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="1.6975%" y="277" width="0.0120%" height="15" fill="rgb(251,123,47)" fg:x="142" fg:w="1"/><text x="1.9475%" y="287.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (30 samples, 0.36%)</title><rect x="1.3628%" y="389" width="0.3586%" height="15" fill="rgb(221,13,13)" fg:x="114" fg:w="30"/><text x="1.6128%" y="399.50"></text></g><g><title>core::fmt::Write::write_char (28 samples, 0.33%)</title><rect x="1.3867%" y="373" width="0.3347%" height="15" fill="rgb(238,131,9)" fg:x="116" fg:w="28"/><text x="1.6367%" y="383.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.01%)</title><rect x="1.7095%" y="357" width="0.0120%" height="15" fill="rgb(211,50,8)" fg:x="143" fg:w="1"/><text x="1.9595%" y="367.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.01%)</title><rect x="1.7095%" y="341" width="0.0120%" height="15" fill="rgb(245,182,24)" fg:x="143" fg:w="1"/><text x="1.9595%" y="351.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="1.7095%" y="325" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="143" fg:w="1"/><text x="1.9595%" y="335.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="1.7215%" y="357" width="0.0120%" height="15" fill="rgb(246,228,12)" fg:x="144" fg:w="1"/><text x="1.9715%" y="367.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="1.7215%" y="389" width="0.1913%" height="15" fill="rgb(213,55,15)" fg:x="144" fg:w="16"/><text x="1.9715%" y="399.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.19%)</title><rect x="1.7215%" y="373" width="0.1913%" height="15" fill="rgb(209,9,3)" fg:x="144" fg:w="16"/><text x="1.9715%" y="383.50"></text></g><g><title>core::str::validations::next_code_point (15 samples, 0.18%)</title><rect x="1.7334%" y="357" width="0.1793%" height="15" fill="rgb(230,59,30)" fg:x="145" fg:w="15"/><text x="1.9834%" y="367.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="1.8530%" y="341" width="0.0598%" height="15" fill="rgb(209,121,21)" fg:x="155" fg:w="5"/><text x="2.1030%" y="351.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (7 samples, 0.08%)</title><rect x="2.6061%" y="325" width="0.0837%" height="15" fill="rgb(220,109,13)" fg:x="218" fg:w="7"/><text x="2.8561%" y="335.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (7 samples, 0.08%)</title><rect x="2.6061%" y="309" width="0.0837%" height="15" fill="rgb(232,18,1)" fg:x="218" fg:w="7"/><text x="2.8561%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (7 samples, 0.08%)</title><rect x="2.6061%" y="293" width="0.0837%" height="15" fill="rgb(215,41,42)" fg:x="218" fg:w="7"/><text x="2.8561%" y="303.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.01%)</title><rect x="2.6898%" y="325" width="0.0120%" height="15" fill="rgb(224,123,36)" fg:x="225" fg:w="1"/><text x="2.9398%" y="335.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="293" width="0.0120%" height="15" fill="rgb(240,125,3)" fg:x="346" fg:w="1"/><text x="4.3863%" y="303.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="277" width="0.0120%" height="15" fill="rgb(205,98,50)" fg:x="346" fg:w="1"/><text x="4.3863%" y="287.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="261" width="0.0120%" height="15" fill="rgb(205,185,37)" fg:x="346" fg:w="1"/><text x="4.3863%" y="271.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="245" width="0.0120%" height="15" fill="rgb(238,207,15)" fg:x="346" fg:w="1"/><text x="4.3863%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="229" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="346" fg:w="1"/><text x="4.3863%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="213" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="346" fg:w="1"/><text x="4.3863%" y="223.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="4.1363%" y="197" width="0.0120%" height="15" fill="rgb(207,46,11)" fg:x="346" fg:w="1"/><text x="4.3863%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (86 samples, 1.03%)</title><rect x="4.1482%" y="277" width="1.0281%" height="15" fill="rgb(241,35,35)" fg:x="347" fg:w="86"/><text x="4.3982%" y="287.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (222 samples, 2.65%)</title><rect x="2.7017%" y="325" width="2.6539%" height="15" fill="rgb(243,32,47)" fg:x="226" fg:w="222"/><text x="2.9517%" y="335.50">co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (222 samples, 2.65%)</title><rect x="2.7017%" y="309" width="2.6539%" height="15" fill="rgb(247,202,23)" fg:x="226" fg:w="222"/><text x="2.9517%" y="319.50">co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (101 samples, 1.21%)</title><rect x="4.1482%" y="293" width="1.2074%" height="15" fill="rgb(219,102,11)" fg:x="347" fg:w="101"/><text x="4.3982%" y="303.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (15 samples, 0.18%)</title><rect x="5.1763%" y="277" width="0.1793%" height="15" fill="rgb(243,110,44)" fg:x="433" fg:w="15"/><text x="5.4263%" y="287.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (15 samples, 0.18%)</title><rect x="5.1763%" y="261" width="0.1793%" height="15" fill="rgb(222,74,54)" fg:x="433" fg:w="15"/><text x="5.4263%" y="271.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (15 samples, 0.18%)</title><rect x="5.1763%" y="245" width="0.1793%" height="15" fill="rgb(216,99,12)" fg:x="433" fg:w="15"/><text x="5.4263%" y="255.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (274 samples, 3.28%)</title><rect x="2.1996%" y="373" width="3.2756%" height="15" fill="rgb(226,22,26)" fg:x="184" fg:w="274"/><text x="2.4496%" y="383.50">cor..</text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (274 samples, 3.28%)</title><rect x="2.1996%" y="357" width="3.2756%" height="15" fill="rgb(217,163,10)" fg:x="184" fg:w="274"/><text x="2.4496%" y="367.50">cor..</text></g><g><title>core::unicode::unicode_data::skip_search (258 samples, 3.08%)</title><rect x="2.3909%" y="341" width="3.0843%" height="15" fill="rgb(213,25,53)" fg:x="200" fg:w="258"/><text x="2.6409%" y="351.50">cor..</text></g><g><title>core::unicode::unicode_data::decode_length (10 samples, 0.12%)</title><rect x="5.3556%" y="325" width="0.1195%" height="15" fill="rgb(252,105,26)" fg:x="448" fg:w="10"/><text x="5.6056%" y="335.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (353 samples, 4.22%)</title><rect x="1.9127%" y="389" width="4.2200%" height="15" fill="rgb(220,39,43)" fg:x="160" fg:w="353"/><text x="2.1627%" y="399.50">core:..</text></g><g><title>core::unicode::printable::is_printable (55 samples, 0.66%)</title><rect x="5.4752%" y="373" width="0.6575%" height="15" fill="rgb(229,68,48)" fg:x="458" fg:w="55"/><text x="5.7252%" y="383.50"></text></g><g><title>core::unicode::printable::check (4 samples, 0.05%)</title><rect x="6.0849%" y="357" width="0.0478%" height="15" fill="rgb(252,8,32)" fg:x="509" fg:w="4"/><text x="6.3349%" y="367.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="6.1207%" y="341" width="0.0120%" height="15" fill="rgb(223,20,43)" fg:x="512" fg:w="1"/><text x="6.3707%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="6.1207%" y="325" width="0.0120%" height="15" fill="rgb(229,81,49)" fg:x="512" fg:w="1"/><text x="6.3707%" y="335.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.01%)</title><rect x="6.1327%" y="389" width="0.0120%" height="15" fill="rgb(236,28,36)" fg:x="513" fg:w="1"/><text x="6.3827%" y="399.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="6.1327%" y="373" width="0.0120%" height="15" fill="rgb(249,185,26)" fg:x="513" fg:w="1"/><text x="6.3827%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="6.3479%" y="197" width="0.0120%" height="15" fill="rgb(249,174,33)" fg:x="531" fg:w="1"/><text x="6.5979%" y="207.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="6.3718%" y="133" width="0.0120%" height="15" fill="rgb(233,201,37)" fg:x="533" fg:w="1"/><text x="6.6218%" y="143.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="6.3718%" y="117" width="0.0120%" height="15" fill="rgb(221,78,26)" fg:x="533" fg:w="1"/><text x="6.6218%" y="127.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="6.4555%" y="101" width="0.0359%" height="15" fill="rgb(250,127,30)" fg:x="540" fg:w="3"/><text x="6.7055%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.13%)</title><rect x="6.3718%" y="181" width="0.1315%" height="15" fill="rgb(230,49,44)" fg:x="533" fg:w="11"/><text x="6.6218%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.13%)</title><rect x="6.3718%" y="165" width="0.1315%" height="15" fill="rgb(229,67,23)" fg:x="533" fg:w="11"/><text x="6.6218%" y="175.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.13%)</title><rect x="6.3718%" y="149" width="0.1315%" height="15" fill="rgb(249,83,47)" fg:x="533" fg:w="11"/><text x="6.6218%" y="159.50"></text></g><g><title>realloc (10 samples, 0.12%)</title><rect x="6.3837%" y="133" width="0.1195%" height="15" fill="rgb(215,43,3)" fg:x="534" fg:w="10"/><text x="6.6337%" y="143.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="6.4316%" y="117" width="0.0717%" height="15" fill="rgb(238,154,13)" fg:x="538" fg:w="6"/><text x="6.6816%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.4913%" y="101" width="0.0120%" height="15" fill="rgb(219,56,2)" fg:x="543" fg:w="1"/><text x="6.7413%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.4913%" y="85" width="0.0120%" height="15" fill="rgb(233,0,4)" fg:x="543" fg:w="1"/><text x="6.7413%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.4913%" y="69" width="0.0120%" height="15" fill="rgb(235,30,7)" fg:x="543" fg:w="1"/><text x="6.7413%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.4913%" y="53" width="0.0120%" height="15" fill="rgb(250,79,13)" fg:x="543" fg:w="1"/><text x="6.7413%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.4913%" y="37" width="0.0120%" height="15" fill="rgb(211,146,34)" fg:x="543" fg:w="1"/><text x="6.7413%" y="47.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.16%)</title><rect x="6.3598%" y="197" width="0.1554%" height="15" fill="rgb(228,22,38)" fg:x="532" fg:w="13"/><text x="6.6098%" y="207.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="6.5033%" y="181" width="0.0120%" height="15" fill="rgb(235,168,5)" fg:x="544" fg:w="1"/><text x="6.7533%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.19%)</title><rect x="6.3359%" y="261" width="0.1913%" height="15" fill="rgb(221,155,16)" fg:x="530" fg:w="16"/><text x="6.5859%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.19%)</title><rect x="6.3359%" y="245" width="0.1913%" height="15" fill="rgb(215,215,53)" fg:x="530" fg:w="16"/><text x="6.5859%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.19%)</title><rect x="6.3359%" y="229" width="0.1913%" height="15" fill="rgb(223,4,10)" fg:x="530" fg:w="16"/><text x="6.5859%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.19%)</title><rect x="6.3359%" y="213" width="0.1913%" height="15" fill="rgb(234,103,6)" fg:x="530" fg:w="16"/><text x="6.5859%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="6.5152%" y="197" width="0.0120%" height="15" fill="rgb(227,97,0)" fg:x="545" fg:w="1"/><text x="6.7652%" y="207.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="6.5152%" y="181" width="0.0120%" height="15" fill="rgb(234,150,53)" fg:x="545" fg:w="1"/><text x="6.7652%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (25 samples, 0.30%)</title><rect x="6.2762%" y="357" width="0.2989%" height="15" fill="rgb(228,201,54)" fg:x="525" fg:w="25"/><text x="6.5262%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (20 samples, 0.24%)</title><rect x="6.3359%" y="341" width="0.2391%" height="15" fill="rgb(222,22,37)" fg:x="530" fg:w="20"/><text x="6.5859%" y="351.50"></text></g><g><title>alloc::string::String::push_str (20 samples, 0.24%)</title><rect x="6.3359%" y="325" width="0.2391%" height="15" fill="rgb(237,53,32)" fg:x="530" fg:w="20"/><text x="6.5859%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (20 samples, 0.24%)</title><rect x="6.3359%" y="309" width="0.2391%" height="15" fill="rgb(233,25,53)" fg:x="530" fg:w="20"/><text x="6.5859%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (20 samples, 0.24%)</title><rect x="6.3359%" y="293" width="0.2391%" height="15" fill="rgb(210,40,34)" fg:x="530" fg:w="20"/><text x="6.5859%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.24%)</title><rect x="6.3359%" y="277" width="0.2391%" height="15" fill="rgb(241,220,44)" fg:x="530" fg:w="20"/><text x="6.5859%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="6.5272%" y="261" width="0.0478%" height="15" fill="rgb(235,28,35)" fg:x="546" fg:w="4"/><text x="6.7772%" y="271.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="6.5272%" y="245" width="0.0478%" height="15" fill="rgb(210,56,17)" fg:x="546" fg:w="4"/><text x="6.7772%" y="255.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="6.5750%" y="341" width="0.0120%" height="15" fill="rgb(224,130,29)" fg:x="550" fg:w="1"/><text x="6.8250%" y="351.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="6.5989%" y="325" width="0.0120%" height="15" fill="rgb(235,212,8)" fg:x="552" fg:w="1"/><text x="6.8489%" y="335.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="6.6826%" y="277" width="0.0120%" height="15" fill="rgb(223,33,50)" fg:x="559" fg:w="1"/><text x="6.9326%" y="287.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.6826%" y="261" width="0.0120%" height="15" fill="rgb(219,149,13)" fg:x="559" fg:w="1"/><text x="6.9326%" y="271.50"></text></g><g><title>core::slice::memchr::memchr_aligned (9 samples, 0.11%)</title><rect x="6.6109%" y="293" width="0.1076%" height="15" fill="rgb(250,156,29)" fg:x="553" fg:w="9"/><text x="6.8609%" y="303.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.02%)</title><rect x="6.6946%" y="277" width="0.0239%" height="15" fill="rgb(216,193,19)" fg:x="560" fg:w="2"/><text x="6.9446%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (51 samples, 0.61%)</title><rect x="6.1447%" y="389" width="0.6097%" height="15" fill="rgb(216,135,14)" fg:x="514" fg:w="51"/><text x="6.3947%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (50 samples, 0.60%)</title><rect x="6.1566%" y="373" width="0.5977%" height="15" fill="rgb(241,47,5)" fg:x="515" fg:w="50"/><text x="6.4066%" y="383.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="6.5750%" y="357" width="0.1793%" height="15" fill="rgb(233,42,35)" fg:x="550" fg:w="15"/><text x="6.8250%" y="367.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (14 samples, 0.17%)</title><rect x="6.5870%" y="341" width="0.1674%" height="15" fill="rgb(231,13,6)" fg:x="551" fg:w="14"/><text x="6.8370%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (12 samples, 0.14%)</title><rect x="6.6109%" y="325" width="0.1435%" height="15" fill="rgb(207,181,40)" fg:x="553" fg:w="12"/><text x="6.8609%" y="335.50"></text></g><g><title>core::slice::memchr::memchr (12 samples, 0.14%)</title><rect x="6.6109%" y="309" width="0.1435%" height="15" fill="rgb(254,173,49)" fg:x="553" fg:w="12"/><text x="6.8609%" y="319.50"></text></g><g><title>core::slice::memchr::memchr_naive (3 samples, 0.04%)</title><rect x="6.7185%" y="293" width="0.0359%" height="15" fill="rgb(221,1,38)" fg:x="562" fg:w="3"/><text x="6.9685%" y="303.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (495 samples, 5.92%)</title><rect x="0.8488%" y="405" width="5.9175%" height="15" fill="rgb(206,124,46)" fg:x="71" fg:w="495"/><text x="1.0988%" y="415.50">&lt;str as ..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.01%)</title><rect x="6.7543%" y="389" width="0.0120%" height="15" fill="rgb(249,21,11)" fg:x="565" fg:w="1"/><text x="7.0043%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.7543%" y="373" width="0.0120%" height="15" fill="rgb(222,201,40)" fg:x="565" fg:w="1"/><text x="7.0043%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.01%)</title><rect x="6.7543%" y="357" width="0.0120%" height="15" fill="rgb(235,61,29)" fg:x="565" fg:w="1"/><text x="7.0043%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="6.7902%" y="389" width="0.0478%" height="15" fill="rgb(219,207,3)" fg:x="568" fg:w="4"/><text x="7.0402%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="6.7902%" y="373" width="0.0478%" height="15" fill="rgb(222,56,46)" fg:x="568" fg:w="4"/><text x="7.0402%" y="383.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.05%)</title><rect x="6.7902%" y="357" width="0.0478%" height="15" fill="rgb(239,76,54)" fg:x="568" fg:w="4"/><text x="7.0402%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.05%)</title><rect x="6.7902%" y="341" width="0.0478%" height="15" fill="rgb(231,124,27)" fg:x="568" fg:w="4"/><text x="7.0402%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="6.7902%" y="325" width="0.0478%" height="15" fill="rgb(249,195,6)" fg:x="568" fg:w="4"/><text x="7.0402%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.05%)</title><rect x="6.7902%" y="309" width="0.0478%" height="15" fill="rgb(237,174,47)" fg:x="568" fg:w="4"/><text x="7.0402%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="6.7902%" y="293" width="0.0478%" height="15" fill="rgb(206,201,31)" fg:x="568" fg:w="4"/><text x="7.0402%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="6.7902%" y="277" width="0.0478%" height="15" fill="rgb(231,57,52)" fg:x="568" fg:w="4"/><text x="7.0402%" y="287.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="7.0532%" y="213" width="0.0120%" height="15" fill="rgb(248,177,22)" fg:x="590" fg:w="1"/><text x="7.3032%" y="223.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="7.0652%" y="149" width="0.0120%" height="15" fill="rgb(215,211,37)" fg:x="591" fg:w="1"/><text x="7.3152%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.17%)</title><rect x="7.0652%" y="213" width="0.1674%" height="15" fill="rgb(241,128,51)" fg:x="591" fg:w="14"/><text x="7.3152%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.17%)</title><rect x="7.0652%" y="197" width="0.1674%" height="15" fill="rgb(227,165,31)" fg:x="591" fg:w="14"/><text x="7.3152%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.17%)</title><rect x="7.0652%" y="181" width="0.1674%" height="15" fill="rgb(228,167,24)" fg:x="591" fg:w="14"/><text x="7.3152%" y="191.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.17%)</title><rect x="7.0652%" y="165" width="0.1674%" height="15" fill="rgb(228,143,12)" fg:x="591" fg:w="14"/><text x="7.3152%" y="175.50"></text></g><g><title>realloc (13 samples, 0.16%)</title><rect x="7.0771%" y="149" width="0.1554%" height="15" fill="rgb(249,149,8)" fg:x="592" fg:w="13"/><text x="7.3271%" y="159.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="7.1010%" y="133" width="0.1315%" height="15" fill="rgb(243,35,44)" fg:x="594" fg:w="11"/><text x="7.3510%" y="143.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="7.1488%" y="117" width="0.0837%" height="15" fill="rgb(246,89,9)" fg:x="598" fg:w="7"/><text x="7.3988%" y="127.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="7.2325%" y="213" width="0.0120%" height="15" fill="rgb(233,213,13)" fg:x="605" fg:w="1"/><text x="7.4825%" y="223.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="7.2325%" y="197" width="0.0120%" height="15" fill="rgb(233,141,41)" fg:x="605" fg:w="1"/><text x="7.4825%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.22%)</title><rect x="7.0412%" y="277" width="0.2152%" height="15" fill="rgb(239,167,4)" fg:x="589" fg:w="18"/><text x="7.2912%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.20%)</title><rect x="7.0532%" y="261" width="0.2032%" height="15" fill="rgb(209,217,16)" fg:x="590" fg:w="17"/><text x="7.3032%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.20%)</title><rect x="7.0532%" y="245" width="0.2032%" height="15" fill="rgb(219,88,35)" fg:x="590" fg:w="17"/><text x="7.3032%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.20%)</title><rect x="7.0532%" y="229" width="0.2032%" height="15" fill="rgb(220,193,23)" fg:x="590" fg:w="17"/><text x="7.3032%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="7.2445%" y="213" width="0.0120%" height="15" fill="rgb(230,90,52)" fg:x="606" fg:w="1"/><text x="7.4945%" y="223.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="7.2445%" y="197" width="0.0120%" height="15" fill="rgb(252,106,19)" fg:x="606" fg:w="1"/><text x="7.4945%" y="207.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (14 samples, 0.17%)</title><rect x="7.2564%" y="277" width="0.1674%" height="15" fill="rgb(206,74,20)" fg:x="607" fg:w="14"/><text x="7.5064%" y="287.50"></text></g><g><title>[libc.so.6] (14 samples, 0.17%)</title><rect x="7.2564%" y="261" width="0.1674%" height="15" fill="rgb(230,138,44)" fg:x="607" fg:w="14"/><text x="7.5064%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (41 samples, 0.49%)</title><rect x="6.9456%" y="373" width="0.4901%" height="15" fill="rgb(235,182,43)" fg:x="581" fg:w="41"/><text x="7.1956%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (35 samples, 0.42%)</title><rect x="7.0173%" y="357" width="0.4184%" height="15" fill="rgb(242,16,51)" fg:x="587" fg:w="35"/><text x="7.2673%" y="367.50"></text></g><g><title>alloc::string::String::push_str (35 samples, 0.42%)</title><rect x="7.0173%" y="341" width="0.4184%" height="15" fill="rgb(248,9,4)" fg:x="587" fg:w="35"/><text x="7.2673%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (35 samples, 0.42%)</title><rect x="7.0173%" y="325" width="0.4184%" height="15" fill="rgb(210,31,22)" fg:x="587" fg:w="35"/><text x="7.2673%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.42%)</title><rect x="7.0173%" y="309" width="0.4184%" height="15" fill="rgb(239,54,39)" fg:x="587" fg:w="35"/><text x="7.2673%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (35 samples, 0.42%)</title><rect x="7.0173%" y="293" width="0.4184%" height="15" fill="rgb(230,99,41)" fg:x="587" fg:w="35"/><text x="7.2673%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="7.4238%" y="277" width="0.0120%" height="15" fill="rgb(253,106,12)" fg:x="621" fg:w="1"/><text x="7.6738%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="7.4238%" y="261" width="0.0120%" height="15" fill="rgb(213,46,41)" fg:x="621" fg:w="1"/><text x="7.6738%" y="271.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="7.4357%" y="357" width="0.0239%" height="15" fill="rgb(215,133,35)" fg:x="622" fg:w="2"/><text x="7.6857%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (65 samples, 0.78%)</title><rect x="6.7663%" y="405" width="0.7770%" height="15" fill="rgb(213,28,5)" fg:x="566" fg:w="65"/><text x="7.0163%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (59 samples, 0.71%)</title><rect x="6.8380%" y="389" width="0.7053%" height="15" fill="rgb(215,77,49)" fg:x="572" fg:w="59"/><text x="7.0880%" y="399.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.11%)</title><rect x="7.4357%" y="373" width="0.1076%" height="15" fill="rgb(248,100,22)" fg:x="622" fg:w="9"/><text x="7.6857%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (7 samples, 0.08%)</title><rect x="7.4597%" y="357" width="0.0837%" height="15" fill="rgb(208,67,9)" fg:x="624" fg:w="7"/><text x="7.7097%" y="367.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (4 samples, 0.05%)</title><rect x="7.4955%" y="341" width="0.0478%" height="15" fill="rgb(219,133,21)" fg:x="627" fg:w="4"/><text x="7.7455%" y="351.50"></text></g><g><title>core::slice::memchr::memchr (2 samples, 0.02%)</title><rect x="7.5194%" y="325" width="0.0239%" height="15" fill="rgb(246,46,29)" fg:x="629" fg:w="2"/><text x="7.7694%" y="335.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.02%)</title><rect x="7.5194%" y="309" width="0.0239%" height="15" fill="rgb(246,185,52)" fg:x="629" fg:w="2"/><text x="7.7694%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="7.6031%" y="373" width="0.0239%" height="15" fill="rgb(252,136,11)" fg:x="636" fg:w="2"/><text x="7.8531%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="7.6031%" y="357" width="0.0239%" height="15" fill="rgb(219,138,53)" fg:x="636" fg:w="2"/><text x="7.8531%" y="367.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="7.6031%" y="341" width="0.0239%" height="15" fill="rgb(211,51,23)" fg:x="636" fg:w="2"/><text x="7.8531%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="7.6031%" y="325" width="0.0239%" height="15" fill="rgb(247,221,28)" fg:x="636" fg:w="2"/><text x="7.8531%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="7.6031%" y="309" width="0.0239%" height="15" fill="rgb(251,222,45)" fg:x="636" fg:w="2"/><text x="7.8531%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="7.6031%" y="293" width="0.0239%" height="15" fill="rgb(217,162,53)" fg:x="636" fg:w="2"/><text x="7.8531%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="7.6031%" y="277" width="0.0239%" height="15" fill="rgb(229,93,14)" fg:x="636" fg:w="2"/><text x="7.8531%" y="287.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="7.6031%" y="261" width="0.0239%" height="15" fill="rgb(209,67,49)" fg:x="636" fg:w="2"/><text x="7.8531%" y="271.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="7.6270%" y="373" width="0.0120%" height="15" fill="rgb(213,87,29)" fg:x="638" fg:w="1"/><text x="7.8770%" y="383.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (1 samples, 0.01%)</title><rect x="7.6270%" y="357" width="0.0120%" height="15" fill="rgb(205,151,52)" fg:x="638" fg:w="1"/><text x="7.8770%" y="367.50"></text></g><g><title>core::fmt::Write::write_char (10 samples, 0.12%)</title><rect x="7.5433%" y="405" width="0.1195%" height="15" fill="rgb(253,215,39)" fg:x="631" fg:w="10"/><text x="7.7933%" y="415.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (9 samples, 0.11%)</title><rect x="7.5553%" y="389" width="0.1076%" height="15" fill="rgb(221,220,41)" fg:x="632" fg:w="9"/><text x="7.8053%" y="399.50"></text></g><g><title>core::str::&lt;impl str&gt;::ends_with (2 samples, 0.02%)</title><rect x="7.6390%" y="373" width="0.0239%" height="15" fill="rgb(218,133,21)" fg:x="639" fg:w="2"/><text x="7.8890%" y="383.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (2 samples, 0.02%)</title><rect x="7.6390%" y="357" width="0.0239%" height="15" fill="rgb(221,193,43)" fg:x="639" fg:w="2"/><text x="7.8890%" y="367.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (2 samples, 0.02%)</title><rect x="7.6390%" y="341" width="0.0239%" height="15" fill="rgb(240,128,52)" fg:x="639" fg:w="2"/><text x="7.8890%" y="351.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (2 samples, 0.02%)</title><rect x="7.6390%" y="325" width="0.0239%" height="15" fill="rgb(253,114,12)" fg:x="639" fg:w="2"/><text x="7.8890%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="7.6509%" y="309" width="0.0120%" height="15" fill="rgb(215,223,47)" fg:x="640" fg:w="1"/><text x="7.9009%" y="319.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="7.6509%" y="293" width="0.0120%" height="15" fill="rgb(248,225,23)" fg:x="640" fg:w="1"/><text x="7.9009%" y="303.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="7.6509%" y="277" width="0.0120%" height="15" fill="rgb(250,108,0)" fg:x="640" fg:w="1"/><text x="7.9009%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (579 samples, 6.92%)</title><rect x="0.7651%" y="453" width="6.9217%" height="15" fill="rgb(228,208,7)" fg:x="64" fg:w="579"/><text x="1.0151%" y="463.50">core::fmt..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (578 samples, 6.91%)</title><rect x="0.7770%" y="437" width="6.9097%" height="15" fill="rgb(244,45,10)" fg:x="65" fg:w="578"/><text x="1.0270%" y="447.50">core::res..</text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (577 samples, 6.90%)</title><rect x="0.7890%" y="421" width="6.8978%" height="15" fill="rgb(207,125,25)" fg:x="66" fg:w="577"/><text x="1.0390%" y="431.50">core::fmt..</text></g><g><title>core::fmt::builders::PadAdapter::wrap (2 samples, 0.02%)</title><rect x="7.6629%" y="405" width="0.0239%" height="15" fill="rgb(210,195,18)" fg:x="641" fg:w="2"/><text x="7.9129%" y="415.50"></text></g><g><title>core::fmt::Formatter::wrap_buf (2 samples, 0.02%)</title><rect x="7.6629%" y="389" width="0.0239%" height="15" fill="rgb(249,80,12)" fg:x="641" fg:w="2"/><text x="7.9129%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (2 samples, 0.02%)</title><rect x="7.6868%" y="453" width="0.0239%" height="15" fill="rgb(221,65,9)" fg:x="643" fg:w="2"/><text x="7.9368%" y="463.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="7.6868%" y="437" width="0.0239%" height="15" fill="rgb(235,49,36)" fg:x="643" fg:w="2"/><text x="7.9368%" y="447.50"></text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (2 samples, 0.02%)</title><rect x="7.6868%" y="421" width="0.0239%" height="15" fill="rgb(225,32,20)" fg:x="643" fg:w="2"/><text x="7.9368%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="7.6868%" y="405" width="0.0239%" height="15" fill="rgb(215,141,46)" fg:x="643" fg:w="2"/><text x="7.9368%" y="415.50"></text></g><g><title>alloc::fmt::format (606 samples, 7.24%)</title><rect x="0.5021%" y="597" width="7.2445%" height="15" fill="rgb(250,160,47)" fg:x="42" fg:w="606"/><text x="0.7521%" y="607.50">alloc::fmt..</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (606 samples, 7.24%)</title><rect x="0.5021%" y="581" width="7.2445%" height="15" fill="rgb(216,222,40)" fg:x="42" fg:w="606"/><text x="0.7521%" y="591.50">core::opti..</text></g><g><title>alloc::fmt::format::{{closure}} (606 samples, 7.24%)</title><rect x="0.5021%" y="565" width="7.2445%" height="15" fill="rgb(234,217,39)" fg:x="42" fg:w="606"/><text x="0.7521%" y="575.50">alloc::fmt..</text></g><g><title>alloc::fmt::format::format_inner (606 samples, 7.24%)</title><rect x="0.5021%" y="549" width="7.2445%" height="15" fill="rgb(207,178,40)" fg:x="42" fg:w="606"/><text x="0.7521%" y="559.50">alloc::fmt..</text></g><g><title>core::fmt::Write::write_fmt (599 samples, 7.16%)</title><rect x="0.5858%" y="533" width="7.1608%" height="15" fill="rgb(221,136,13)" fg:x="49" fg:w="599"/><text x="0.8358%" y="543.50">core::fmt:..</text></g><g><title>core::fmt::write (599 samples, 7.16%)</title><rect x="0.5858%" y="517" width="7.1608%" height="15" fill="rgb(249,199,10)" fg:x="49" fg:w="599"/><text x="0.8358%" y="527.50">core::fmt:..</text></g><g><title>core::fmt::run (593 samples, 7.09%)</title><rect x="0.6575%" y="501" width="7.0891%" height="15" fill="rgb(249,222,13)" fg:x="55" fg:w="593"/><text x="0.9075%" y="511.50">core::fmt:..</text></g><g><title>&lt;yt_history::DataRow as core::fmt::Debug&gt;::fmt (591 samples, 7.07%)</title><rect x="0.6814%" y="485" width="7.0652%" height="15" fill="rgb(244,185,38)" fg:x="57" fg:w="591"/><text x="0.9314%" y="495.50">&lt;yt_histo..</text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (589 samples, 7.04%)</title><rect x="0.7053%" y="469" width="7.0412%" height="15" fill="rgb(236,202,9)" fg:x="59" fg:w="589"/><text x="0.9553%" y="479.50">core::fmt..</text></g><g><title>core::fmt::builders::debug_struct_new (3 samples, 0.04%)</title><rect x="7.7107%" y="453" width="0.0359%" height="15" fill="rgb(250,229,37)" fg:x="645" fg:w="3"/><text x="7.9607%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.04%)</title><rect x="7.7107%" y="437" width="0.0359%" height="15" fill="rgb(206,174,23)" fg:x="645" fg:w="3"/><text x="7.9607%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="7.7107%" y="421" width="0.0359%" height="15" fill="rgb(211,33,43)" fg:x="645" fg:w="3"/><text x="7.9607%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="7.7107%" y="405" width="0.0359%" height="15" fill="rgb(245,58,50)" fg:x="645" fg:w="3"/><text x="7.9607%" y="415.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.04%)</title><rect x="7.7107%" y="389" width="0.0359%" height="15" fill="rgb(244,68,36)" fg:x="645" fg:w="3"/><text x="7.9607%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="7.7107%" y="373" width="0.0359%" height="15" fill="rgb(232,229,15)" fg:x="645" fg:w="3"/><text x="7.9607%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="7.7107%" y="357" width="0.0359%" height="15" fill="rgb(254,30,23)" fg:x="645" fg:w="3"/><text x="7.9607%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="7.7107%" y="341" width="0.0359%" height="15" fill="rgb(235,160,14)" fg:x="645" fg:w="3"/><text x="7.9607%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="7.7227%" y="325" width="0.0239%" height="15" fill="rgb(212,155,44)" fg:x="646" fg:w="2"/><text x="7.9727%" y="335.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="7.7227%" y="309" width="0.0239%" height="15" fill="rgb(226,2,50)" fg:x="646" fg:w="2"/><text x="7.9727%" y="319.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="8.7268%" y="533" width="0.0239%" height="15" fill="rgb(234,177,6)" fg:x="730" fg:w="2"/><text x="8.9768%" y="543.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="8.7268%" y="517" width="0.0239%" height="15" fill="rgb(217,24,9)" fg:x="730" fg:w="2"/><text x="8.9768%" y="527.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.7507%" y="437" width="0.0120%" height="15" fill="rgb(220,13,46)" fg:x="732" fg:w="1"/><text x="9.0007%" y="447.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (30 samples, 0.36%)</title><rect x="8.4280%" y="549" width="0.3586%" height="15" fill="rgb(239,221,27)" fg:x="705" fg:w="30"/><text x="8.6780%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (3 samples, 0.04%)</title><rect x="8.7507%" y="533" width="0.0359%" height="15" fill="rgb(222,198,25)" fg:x="732" fg:w="3"/><text x="9.0007%" y="543.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.04%)</title><rect x="8.7507%" y="517" width="0.0359%" height="15" fill="rgb(211,99,13)" fg:x="732" fg:w="3"/><text x="9.0007%" y="527.50"></text></g><g><title>core::str::pattern::Searcher::next_match (3 samples, 0.04%)</title><rect x="8.7507%" y="501" width="0.0359%" height="15" fill="rgb(232,111,31)" fg:x="732" fg:w="3"/><text x="9.0007%" y="511.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (3 samples, 0.04%)</title><rect x="8.7507%" y="485" width="0.0359%" height="15" fill="rgb(245,82,37)" fg:x="732" fg:w="3"/><text x="9.0007%" y="495.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="8.7507%" y="469" width="0.0359%" height="15" fill="rgb(227,149,46)" fg:x="732" fg:w="3"/><text x="9.0007%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="8.7507%" y="453" width="0.0359%" height="15" fill="rgb(218,36,50)" fg:x="732" fg:w="3"/><text x="9.0007%" y="463.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="8.7627%" y="437" width="0.0239%" height="15" fill="rgb(226,80,48)" fg:x="733" fg:w="2"/><text x="9.0127%" y="447.50"></text></g><g><title>chrono::format::parse::parse (1 samples, 0.01%)</title><rect x="8.7866%" y="549" width="0.0120%" height="15" fill="rgb(238,224,15)" fg:x="735" fg:w="1"/><text x="9.0366%" y="559.50"></text></g><g><title>chrono::format::parsed::Parsed::set_day (1 samples, 0.01%)</title><rect x="8.7986%" y="549" width="0.0120%" height="15" fill="rgb(241,136,10)" fg:x="736" fg:w="1"/><text x="9.0486%" y="559.50"></text></g><g><title>&lt;i64 as num_traits::cast::ToPrimitive&gt;::to_u32 (1 samples, 0.01%)</title><rect x="8.7986%" y="533" width="0.0120%" height="15" fill="rgb(208,32,45)" fg:x="736" fg:w="1"/><text x="9.0486%" y="543.50"></text></g><g><title>chrono::format::parsed::Parsed::set_minute (1 samples, 0.01%)</title><rect x="8.8105%" y="549" width="0.0120%" height="15" fill="rgb(207,135,9)" fg:x="737" fg:w="1"/><text x="9.0605%" y="559.50"></text></g><g><title>&lt;i64 as num_traits::cast::ToPrimitive&gt;::to_u32 (1 samples, 0.01%)</title><rect x="8.8105%" y="533" width="0.0120%" height="15" fill="rgb(206,86,44)" fg:x="737" fg:w="1"/><text x="9.0605%" y="543.50"></text></g><g><title>chrono::format::parsed::Parsed::set_year (1 samples, 0.01%)</title><rect x="8.8225%" y="549" width="0.0120%" height="15" fill="rgb(245,177,15)" fg:x="738" fg:w="1"/><text x="9.0725%" y="559.50"></text></g><g><title>&lt;i64 as num_traits::cast::ToPrimitive&gt;::to_i32 (1 samples, 0.01%)</title><rect x="8.8225%" y="533" width="0.0120%" height="15" fill="rgb(206,64,50)" fg:x="738" fg:w="1"/><text x="9.0725%" y="543.50"></text></g><g><title>core::num::&lt;impl i64&gt;::checked_mul (1 samples, 0.01%)</title><rect x="8.8344%" y="533" width="0.0120%" height="15" fill="rgb(234,36,40)" fg:x="739" fg:w="1"/><text x="9.0844%" y="543.50"></text></g><g><title>core::num::&lt;impl i64&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="8.8344%" y="517" width="0.0120%" height="15" fill="rgb(213,64,8)" fg:x="739" fg:w="1"/><text x="9.0844%" y="527.50"></text></g><g><title>chrono::format::scan::number (2 samples, 0.02%)</title><rect x="8.8344%" y="549" width="0.0239%" height="15" fill="rgb(210,75,36)" fg:x="739" fg:w="2"/><text x="9.0844%" y="559.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.01%)</title><rect x="8.8464%" y="533" width="0.0120%" height="15" fill="rgb(229,88,21)" fg:x="740" fg:w="1"/><text x="9.0964%" y="543.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.01%)</title><rect x="8.8464%" y="517" width="0.0120%" height="15" fill="rgb(252,204,47)" fg:x="740" fg:w="1"/><text x="9.0964%" y="527.50"></text></g><g><title>chrono::format::scan::short_month0 (3 samples, 0.04%)</title><rect x="8.8583%" y="549" width="0.0359%" height="15" fill="rgb(208,77,27)" fg:x="741" fg:w="3"/><text x="9.1083%" y="559.50"></text></g><g><title>chrono::format::scan::timezone_name_skip (2 samples, 0.02%)</title><rect x="8.8942%" y="549" width="0.0239%" height="15" fill="rgb(221,76,26)" fg:x="744" fg:w="2"/><text x="9.1442%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_left_matches (2 samples, 0.02%)</title><rect x="8.8942%" y="533" width="0.0239%" height="15" fill="rgb(225,139,18)" fg:x="744" fg:w="2"/><text x="9.1442%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.01%)</title><rect x="8.9181%" y="549" width="0.0120%" height="15" fill="rgb(230,137,11)" fg:x="746" fg:w="1"/><text x="9.1681%" y="559.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.01%)</title><rect x="8.9181%" y="533" width="0.0120%" height="15" fill="rgb(212,28,1)" fg:x="746" fg:w="1"/><text x="9.1681%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 0.01%)</title><rect x="8.9181%" y="517" width="0.0120%" height="15" fill="rgb(248,164,17)" fg:x="746" fg:w="1"/><text x="9.1681%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="8.9181%" y="501" width="0.0120%" height="15" fill="rgb(222,171,42)" fg:x="746" fg:w="1"/><text x="9.1681%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="8.9181%" y="485" width="0.0120%" height="15" fill="rgb(243,84,45)" fg:x="746" fg:w="1"/><text x="9.1681%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="8.9181%" y="469" width="0.0120%" height="15" fill="rgb(252,49,23)" fg:x="746" fg:w="1"/><text x="9.1681%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="8.9181%" y="453" width="0.0120%" height="15" fill="rgb(215,19,7)" fg:x="746" fg:w="1"/><text x="9.1681%" y="463.50"></text></g><g><title>chrono::format::parse::parse (99 samples, 1.18%)</title><rect x="7.7585%" y="581" width="1.1835%" height="15" fill="rgb(238,81,41)" fg:x="649" fg:w="99"/><text x="8.0085%" y="591.50"></text></g><g><title>chrono::format::parse::parse_internal (98 samples, 1.17%)</title><rect x="7.7705%" y="565" width="1.1715%" height="15" fill="rgb(210,199,37)" fg:x="650" fg:w="98"/><text x="8.0205%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_left (1 samples, 0.01%)</title><rect x="8.9301%" y="549" width="0.0120%" height="15" fill="rgb(244,192,49)" fg:x="747" fg:w="1"/><text x="9.1801%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start (1 samples, 0.01%)</title><rect x="8.9301%" y="533" width="0.0120%" height="15" fill="rgb(226,211,11)" fg:x="747" fg:w="1"/><text x="9.1801%" y="543.50"></text></g><g><title>chrono::format::parsed::Parsed::new (4 samples, 0.05%)</title><rect x="8.9420%" y="581" width="0.0478%" height="15" fill="rgb(236,162,54)" fg:x="748" fg:w="4"/><text x="9.1920%" y="591.50"></text></g><g><title>&lt;chrono::format::parsed::Parsed as core::default::Default&gt;::default (4 samples, 0.05%)</title><rect x="8.9420%" y="565" width="0.0478%" height="15" fill="rgb(220,229,9)" fg:x="748" fg:w="4"/><text x="9.1920%" y="575.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date::{{closure}} (4 samples, 0.05%)</title><rect x="9.0735%" y="517" width="0.0478%" height="15" fill="rgb(250,87,22)" fg:x="759" fg:w="4"/><text x="9.3235%" y="527.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date::{{closure}} (6 samples, 0.07%)</title><rect x="9.0616%" y="533" width="0.0717%" height="15" fill="rgb(239,43,17)" fg:x="758" fg:w="6"/><text x="9.3116%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.01%)</title><rect x="9.1213%" y="517" width="0.0120%" height="15" fill="rgb(231,177,25)" fg:x="763" fg:w="1"/><text x="9.3713%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_mdf (1 samples, 0.01%)</title><rect x="9.1333%" y="517" width="0.0120%" height="15" fill="rgb(219,179,1)" fg:x="764" fg:w="1"/><text x="9.3833%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (1 samples, 0.01%)</title><rect x="9.1333%" y="501" width="0.0120%" height="15" fill="rgb(238,219,53)" fg:x="764" fg:w="1"/><text x="9.3833%" y="511.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.01%)</title><rect x="9.1333%" y="485" width="0.0120%" height="15" fill="rgb(232,167,36)" fg:x="764" fg:w="1"/><text x="9.3833%" y="495.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (1 samples, 0.01%)</title><rect x="9.1333%" y="469" width="0.0120%" height="15" fill="rgb(244,19,51)" fg:x="764" fg:w="1"/><text x="9.3833%" y="479.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_datetime_with_offset (12 samples, 0.14%)</title><rect x="9.0137%" y="565" width="0.1435%" height="15" fill="rgb(224,6,22)" fg:x="754" fg:w="12"/><text x="9.2637%" y="575.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (11 samples, 0.13%)</title><rect x="9.0257%" y="549" width="0.1315%" height="15" fill="rgb(224,145,5)" fg:x="755" fg:w="11"/><text x="9.2757%" y="559.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd_opt (2 samples, 0.02%)</title><rect x="9.1333%" y="533" width="0.0239%" height="15" fill="rgb(234,130,49)" fg:x="764" fg:w="2"/><text x="9.3833%" y="543.50"></text></g><g><title>chrono::naive::internals::Mdf::new (1 samples, 0.01%)</title><rect x="9.1452%" y="517" width="0.0120%" height="15" fill="rgb(254,6,2)" fg:x="765" fg:w="1"/><text x="9.3952%" y="527.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (2 samples, 0.02%)</title><rect x="9.1811%" y="453" width="0.0239%" height="15" fill="rgb(208,96,46)" fg:x="768" fg:w="2"/><text x="9.4311%" y="463.50"></text></g><g><title>num_integer::div_mod_floor (2 samples, 0.02%)</title><rect x="9.1811%" y="437" width="0.0239%" height="15" fill="rgb(239,3,39)" fg:x="768" fg:w="2"/><text x="9.4311%" y="447.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (2 samples, 0.02%)</title><rect x="9.1811%" y="421" width="0.0239%" height="15" fill="rgb(233,210,1)" fg:x="768" fg:w="2"/><text x="9.4311%" y="431.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (1 samples, 0.01%)</title><rect x="9.1931%" y="405" width="0.0120%" height="15" fill="rgb(244,137,37)" fg:x="769" fg:w="1"/><text x="9.4431%" y="415.50"></text></g><g><title>chrono::format::parsed::Parsed::to_datetime_with_timezone (23 samples, 0.27%)</title><rect x="8.9898%" y="581" width="0.2750%" height="15" fill="rgb(240,136,2)" fg:x="752" fg:w="23"/><text x="9.2398%" y="591.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (9 samples, 0.11%)</title><rect x="9.1572%" y="565" width="0.1076%" height="15" fill="rgb(239,18,37)" fg:x="766" fg:w="9"/><text x="9.4072%" y="575.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::map (9 samples, 0.11%)</title><rect x="9.1572%" y="549" width="0.1076%" height="15" fill="rgb(218,185,22)" fg:x="766" fg:w="9"/><text x="9.4072%" y="559.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime::{{closure}} (9 samples, 0.11%)</title><rect x="9.1572%" y="533" width="0.1076%" height="15" fill="rgb(225,218,4)" fg:x="766" fg:w="9"/><text x="9.4072%" y="543.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (9 samples, 0.11%)</title><rect x="9.1572%" y="517" width="0.1076%" height="15" fill="rgb(230,182,32)" fg:x="766" fg:w="9"/><text x="9.4072%" y="527.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (9 samples, 0.11%)</title><rect x="9.1572%" y="501" width="0.1076%" height="15" fill="rgb(242,56,43)" fg:x="766" fg:w="9"/><text x="9.4072%" y="511.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (9 samples, 0.11%)</title><rect x="9.1572%" y="485" width="0.1076%" height="15" fill="rgb(233,99,24)" fg:x="766" fg:w="9"/><text x="9.4072%" y="495.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (9 samples, 0.11%)</title><rect x="9.1572%" y="469" width="0.1076%" height="15" fill="rgb(234,209,42)" fg:x="766" fg:w="9"/><text x="9.4072%" y="479.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (5 samples, 0.06%)</title><rect x="9.2050%" y="453" width="0.0598%" height="15" fill="rgb(227,7,12)" fg:x="770" fg:w="5"/><text x="9.4550%" y="463.50"></text></g><g><title>time::duration::Duration::num_seconds (3 samples, 0.04%)</title><rect x="9.2289%" y="437" width="0.0359%" height="15" fill="rgb(245,203,43)" fg:x="772" fg:w="3"/><text x="9.4789%" y="447.50"></text></g><g><title>chrono::offset::TimeZone::datetime_from_str (128 samples, 1.53%)</title><rect x="7.7466%" y="597" width="1.5302%" height="15" fill="rgb(238,205,33)" fg:x="648" fg:w="128"/><text x="7.9966%" y="607.50"></text></g><g><title>chrono::format::strftime::StrftimeItems::new (1 samples, 0.01%)</title><rect x="9.2648%" y="581" width="0.0120%" height="15" fill="rgb(231,56,7)" fg:x="775" fg:w="1"/><text x="9.5148%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (24 samples, 0.29%)</title><rect x="9.2767%" y="533" width="0.2869%" height="15" fill="rgb(244,186,29)" fg:x="776" fg:w="24"/><text x="9.5267%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (24 samples, 0.29%)</title><rect x="9.2767%" y="517" width="0.2869%" height="15" fill="rgb(234,111,31)" fg:x="776" fg:w="24"/><text x="9.5267%" y="527.50"></text></g><g><title>cfree (24 samples, 0.29%)</title><rect x="9.2767%" y="501" width="0.2869%" height="15" fill="rgb(241,149,10)" fg:x="776" fg:w="24"/><text x="9.5267%" y="511.50"></text></g><g><title>[libc.so.6] (19 samples, 0.23%)</title><rect x="9.3365%" y="485" width="0.2271%" height="15" fill="rgb(249,206,44)" fg:x="781" fg:w="19"/><text x="9.5865%" y="495.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="9.4561%" y="469" width="0.1076%" height="15" fill="rgb(251,153,30)" fg:x="791" fg:w="9"/><text x="9.7061%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="9.5517%" y="453" width="0.0120%" height="15" fill="rgb(239,152,38)" fg:x="799" fg:w="1"/><text x="9.8017%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (25 samples, 0.30%)</title><rect x="9.2767%" y="597" width="0.2989%" height="15" fill="rgb(249,139,47)" fg:x="776" fg:w="25"/><text x="9.5267%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (25 samples, 0.30%)</title><rect x="9.2767%" y="581" width="0.2989%" height="15" fill="rgb(244,64,35)" fg:x="776" fg:w="25"/><text x="9.5267%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (25 samples, 0.30%)</title><rect x="9.2767%" y="565" width="0.2989%" height="15" fill="rgb(216,46,15)" fg:x="776" fg:w="25"/><text x="9.5267%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.30%)</title><rect x="9.2767%" y="549" width="0.2989%" height="15" fill="rgb(250,74,19)" fg:x="776" fg:w="25"/><text x="9.5267%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="9.5637%" y="533" width="0.0120%" height="15" fill="rgb(249,42,33)" fg:x="800" fg:w="1"/><text x="9.8137%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::DataRow&gt; (12 samples, 0.14%)</title><rect x="9.5756%" y="597" width="0.1435%" height="15" fill="rgb(242,149,17)" fg:x="801" fg:w="12"/><text x="9.8256%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.14%)</title><rect x="9.5756%" y="581" width="0.1435%" height="15" fill="rgb(244,29,21)" fg:x="801" fg:w="12"/><text x="9.8256%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.14%)</title><rect x="9.5756%" y="565" width="0.1435%" height="15" fill="rgb(220,130,37)" fg:x="801" fg:w="12"/><text x="9.8256%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.14%)</title><rect x="9.5756%" y="549" width="0.1435%" height="15" fill="rgb(211,67,2)" fg:x="801" fg:w="12"/><text x="9.8256%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="9.5756%" y="533" width="0.1435%" height="15" fill="rgb(235,68,52)" fg:x="801" fg:w="12"/><text x="9.8256%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.14%)</title><rect x="9.5756%" y="517" width="0.1435%" height="15" fill="rgb(246,142,3)" fg:x="801" fg:w="12"/><text x="9.8256%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.14%)</title><rect x="9.5756%" y="501" width="0.1435%" height="15" fill="rgb(241,25,7)" fg:x="801" fg:w="12"/><text x="9.8256%" y="511.50"></text></g><g><title>cfree (12 samples, 0.14%)</title><rect x="9.5756%" y="485" width="0.1435%" height="15" fill="rgb(242,119,39)" fg:x="801" fg:w="12"/><text x="9.8256%" y="495.50"></text></g><g><title>[libc.so.6] (11 samples, 0.13%)</title><rect x="9.5876%" y="469" width="0.1315%" height="15" fill="rgb(241,98,45)" fg:x="802" fg:w="11"/><text x="9.8376%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="9.7310%" y="485" width="0.0239%" height="15" fill="rgb(254,28,30)" fg:x="814" fg:w="2"/><text x="9.9810%" y="495.50"></text></g><g><title>core::str::validations::next_code_point (2 samples, 0.02%)</title><rect x="9.7310%" y="469" width="0.0239%" height="15" fill="rgb(241,142,54)" fg:x="814" fg:w="2"/><text x="9.9810%" y="479.50"></text></g><g><title>__rust_realloc (3 samples, 0.04%)</title><rect x="9.8147%" y="309" width="0.0359%" height="15" fill="rgb(222,85,15)" fg:x="821" fg:w="3"/><text x="10.0647%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.10%)</title><rect x="9.8147%" y="357" width="0.0956%" height="15" fill="rgb(210,85,47)" fg:x="821" fg:w="8"/><text x="10.0647%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.10%)</title><rect x="9.8147%" y="341" width="0.0956%" height="15" fill="rgb(224,206,25)" fg:x="821" fg:w="8"/><text x="10.0647%" y="351.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.10%)</title><rect x="9.8147%" y="325" width="0.0956%" height="15" fill="rgb(243,201,19)" fg:x="821" fg:w="8"/><text x="10.0647%" y="335.50"></text></g><g><title>realloc (5 samples, 0.06%)</title><rect x="9.8506%" y="309" width="0.0598%" height="15" fill="rgb(236,59,4)" fg:x="824" fg:w="5"/><text x="10.1006%" y="319.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="9.8625%" y="293" width="0.0478%" height="15" fill="rgb(254,179,45)" fg:x="825" fg:w="4"/><text x="10.1125%" y="303.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="9.8625%" y="277" width="0.0478%" height="15" fill="rgb(226,14,10)" fg:x="825" fg:w="4"/><text x="10.1125%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (12 samples, 0.14%)</title><rect x="9.8027%" y="405" width="0.1435%" height="15" fill="rgb(244,27,41)" fg:x="820" fg:w="12"/><text x="10.0527%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.14%)</title><rect x="9.8027%" y="389" width="0.1435%" height="15" fill="rgb(235,35,32)" fg:x="820" fg:w="12"/><text x="10.0527%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.13%)</title><rect x="9.8147%" y="373" width="0.1315%" height="15" fill="rgb(218,68,31)" fg:x="821" fg:w="11"/><text x="10.0647%" y="383.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="9.9103%" y="357" width="0.0359%" height="15" fill="rgb(207,120,37)" fg:x="829" fg:w="3"/><text x="10.1603%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="9.9342%" y="341" width="0.0120%" height="15" fill="rgb(227,98,0)" fg:x="831" fg:w="1"/><text x="10.1842%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="9.9462%" y="405" width="0.0120%" height="15" fill="rgb(207,7,3)" fg:x="832" fg:w="1"/><text x="10.1962%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::ptr (1 samples, 0.01%)</title><rect x="9.9462%" y="389" width="0.0120%" height="15" fill="rgb(206,98,19)" fg:x="832" fg:w="1"/><text x="10.1962%" y="399.50"></text></g><g><title>yt_history::filter_ascii (21 samples, 0.25%)</title><rect x="9.7191%" y="597" width="0.2510%" height="15" fill="rgb(217,5,26)" fg:x="813" fg:w="21"/><text x="9.9691%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (21 samples, 0.25%)</title><rect x="9.7191%" y="581" width="0.2510%" height="15" fill="rgb(235,190,38)" fg:x="813" fg:w="21"/><text x="9.9691%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (21 samples, 0.25%)</title><rect x="9.7191%" y="565" width="0.2510%" height="15" fill="rgb(247,86,24)" fg:x="813" fg:w="21"/><text x="9.9691%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (20 samples, 0.24%)</title><rect x="9.7310%" y="549" width="0.2391%" height="15" fill="rgb(205,101,16)" fg:x="814" fg:w="20"/><text x="9.9810%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (20 samples, 0.24%)</title><rect x="9.7310%" y="533" width="0.2391%" height="15" fill="rgb(246,168,33)" fg:x="814" fg:w="20"/><text x="9.9810%" y="543.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (20 samples, 0.24%)</title><rect x="9.7310%" y="517" width="0.2391%" height="15" fill="rgb(231,114,1)" fg:x="814" fg:w="20"/><text x="9.9810%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (20 samples, 0.24%)</title><rect x="9.7310%" y="501" width="0.2391%" height="15" fill="rgb(207,184,53)" fg:x="814" fg:w="20"/><text x="9.9810%" y="511.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (18 samples, 0.22%)</title><rect x="9.7549%" y="485" width="0.2152%" height="15" fill="rgb(224,95,51)" fg:x="816" fg:w="18"/><text x="10.0049%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (18 samples, 0.22%)</title><rect x="9.7549%" y="469" width="0.2152%" height="15" fill="rgb(212,188,45)" fg:x="816" fg:w="18"/><text x="10.0049%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (18 samples, 0.22%)</title><rect x="9.7549%" y="453" width="0.2152%" height="15" fill="rgb(223,154,38)" fg:x="816" fg:w="18"/><text x="10.0049%" y="463.50"></text></g><g><title>alloc::string::String::push (18 samples, 0.22%)</title><rect x="9.7549%" y="437" width="0.2152%" height="15" fill="rgb(251,22,52)" fg:x="816" fg:w="18"/><text x="10.0049%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.22%)</title><rect x="9.7549%" y="421" width="0.2152%" height="15" fill="rgb(229,209,22)" fg:x="816" fg:w="18"/><text x="10.0049%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="9.9582%" y="405" width="0.0120%" height="15" fill="rgb(234,138,34)" fg:x="833" fg:w="1"/><text x="10.2082%" y="415.50"></text></g><g><title>yt_history::model::Models::count_videos (1 samples, 0.01%)</title><rect x="9.9701%" y="597" width="0.0120%" height="15" fill="rgb(212,95,11)" fg:x="834" fg:w="1"/><text x="10.2201%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="9.9701%" y="581" width="0.0120%" height="15" fill="rgb(240,179,47)" fg:x="834" fg:w="1"/><text x="10.2201%" y="591.50"></text></g><g><title>yt_history::model::Models::count_videos::{{closure}} (1 samples, 0.01%)</title><rect x="9.9701%" y="565" width="0.0120%" height="15" fill="rgb(240,163,11)" fg:x="834" fg:w="1"/><text x="10.2201%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="9.9701%" y="549" width="0.0120%" height="15" fill="rgb(236,37,12)" fg:x="834" fg:w="1"/><text x="10.2201%" y="559.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.01%)</title><rect x="9.9701%" y="533" width="0.0120%" height="15" fill="rgb(232,164,16)" fg:x="834" fg:w="1"/><text x="10.2201%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="10.1016%" y="549" width="0.0359%" height="15" fill="rgb(244,205,15)" fg:x="845" fg:w="3"/><text x="10.3516%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (7 samples, 0.08%)</title><rect x="10.2929%" y="533" width="0.0837%" height="15" fill="rgb(223,117,47)" fg:x="861" fg:w="7"/><text x="10.5429%" y="543.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (7 samples, 0.08%)</title><rect x="10.2929%" y="517" width="0.0837%" height="15" fill="rgb(244,107,35)" fg:x="861" fg:w="7"/><text x="10.5429%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="10.7591%" y="517" width="0.0120%" height="15" fill="rgb(205,140,8)" fg:x="900" fg:w="1"/><text x="11.0091%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (283 samples, 3.38%)</title><rect x="10.7711%" y="517" width="3.3831%" height="15" fill="rgb(228,84,46)" fg:x="901" fg:w="283"/><text x="11.0211%" y="527.50">cor..</text></g><g><title>core::cmp::PartialEq::ne (283 samples, 3.38%)</title><rect x="10.7711%" y="501" width="3.3831%" height="15" fill="rgb(254,188,9)" fg:x="901" fg:w="283"/><text x="11.0211%" y="511.50">cor..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (282 samples, 3.37%)</title><rect x="10.7830%" y="485" width="3.3712%" height="15" fill="rgb(206,112,54)" fg:x="902" fg:w="282"/><text x="11.0330%" y="495.50">&lt;al..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (282 samples, 3.37%)</title><rect x="10.7830%" y="469" width="3.3712%" height="15" fill="rgb(216,84,49)" fg:x="902" fg:w="282"/><text x="11.0330%" y="479.50">cor..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (282 samples, 3.37%)</title><rect x="10.7830%" y="453" width="3.3712%" height="15" fill="rgb(214,194,35)" fg:x="902" fg:w="282"/><text x="11.0330%" y="463.50">cor..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (282 samples, 3.37%)</title><rect x="10.7830%" y="437" width="3.3712%" height="15" fill="rgb(249,28,3)" fg:x="902" fg:w="282"/><text x="11.0330%" y="447.50">cor..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (282 samples, 3.37%)</title><rect x="10.7830%" y="421" width="3.3712%" height="15" fill="rgb(222,56,52)" fg:x="902" fg:w="282"/><text x="11.0330%" y="431.50">&lt;[A..</text></g><g><title>[libc.so.6] (273 samples, 3.26%)</title><rect x="10.8906%" y="405" width="3.2636%" height="15" fill="rgb(245,217,50)" fg:x="911" fg:w="273"/><text x="11.1406%" y="415.50">[li..</text></g><g><title>yt_history::model::Models::find_or_create_channel (351 samples, 4.20%)</title><rect x="9.9821%" y="597" width="4.1961%" height="15" fill="rgb(213,201,24)" fg:x="835" fg:w="351"/><text x="10.2321%" y="607.50">yt_hi..</text></g><g><title>yt_history::model::Models::find_channel (350 samples, 4.18%)</title><rect x="9.9940%" y="581" width="4.1841%" height="15" fill="rgb(248,116,28)" fg:x="836" fg:w="350"/><text x="10.2440%" y="591.50">yt_hi..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (350 samples, 4.18%)</title><rect x="9.9940%" y="565" width="4.1841%" height="15" fill="rgb(219,72,43)" fg:x="836" fg:w="350"/><text x="10.2440%" y="575.50">&lt;core..</text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (338 samples, 4.04%)</title><rect x="10.1375%" y="549" width="4.0406%" height="15" fill="rgb(209,138,14)" fg:x="848" fg:w="338"/><text x="10.3875%" y="559.50">yt_h..</text></g><g><title>yt_history::model::WhereChannel::matches (318 samples, 3.80%)</title><rect x="10.3766%" y="533" width="3.8016%" height="15" fill="rgb(222,18,33)" fg:x="868" fg:w="318"/><text x="10.6266%" y="543.50">yt_h..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="14.1542%" y="517" width="0.0239%" height="15" fill="rgb(213,199,7)" fg:x="1184" fg:w="2"/><text x="14.4042%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="14.1542%" y="501" width="0.0239%" height="15" fill="rgb(250,110,10)" fg:x="1184" fg:w="2"/><text x="14.4042%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="14.1542%" y="485" width="0.0239%" height="15" fill="rgb(248,123,6)" fg:x="1184" fg:w="2"/><text x="14.4042%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="14.1901%" y="581" width="0.0120%" height="15" fill="rgb(206,91,31)" fg:x="1187" fg:w="1"/><text x="14.4401%" y="591.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.01%)</title><rect x="14.1901%" y="565" width="0.0120%" height="15" fill="rgb(211,154,13)" fg:x="1187" fg:w="1"/><text x="14.4401%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="14.1901%" y="549" width="0.0120%" height="15" fill="rgb(225,148,7)" fg:x="1187" fg:w="1"/><text x="14.4401%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="14.2020%" y="581" width="0.1076%" height="15" fill="rgb(220,160,43)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="14.2020%" y="565" width="0.1076%" height="15" fill="rgb(213,52,39)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="575.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="14.2020%" y="549" width="0.1076%" height="15" fill="rgb(243,137,7)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="559.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="14.2020%" y="533" width="0.1076%" height="15" fill="rgb(230,79,13)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="543.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="14.2020%" y="517" width="0.1076%" height="15" fill="rgb(247,105,23)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="14.2020%" y="501" width="0.1076%" height="15" fill="rgb(223,179,41)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="14.2020%" y="485" width="0.1076%" height="15" fill="rgb(218,9,34)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="14.2020%" y="469" width="0.1076%" height="15" fill="rgb(222,106,8)" fg:x="1188" fg:w="9"/><text x="14.4520%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.10%)</title><rect x="14.2140%" y="453" width="0.0956%" height="15" fill="rgb(211,220,0)" fg:x="1189" fg:w="8"/><text x="14.4640%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.10%)</title><rect x="14.2140%" y="437" width="0.0956%" height="15" fill="rgb(229,52,16)" fg:x="1189" fg:w="8"/><text x="14.4640%" y="447.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.10%)</title><rect x="14.2140%" y="421" width="0.0956%" height="15" fill="rgb(212,155,18)" fg:x="1189" fg:w="8"/><text x="14.4640%" y="431.50"></text></g><g><title>malloc (8 samples, 0.10%)</title><rect x="14.2140%" y="405" width="0.0956%" height="15" fill="rgb(242,21,14)" fg:x="1189" fg:w="8"/><text x="14.4640%" y="415.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="14.2738%" y="389" width="0.0359%" height="15" fill="rgb(222,19,48)" fg:x="1194" fg:w="3"/><text x="14.5238%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Channel&gt;&gt; (1 samples, 0.01%)</title><rect x="14.3096%" y="581" width="0.0120%" height="15" fill="rgb(232,45,27)" fg:x="1197" fg:w="1"/><text x="14.5596%" y="591.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.3096%" y="565" width="0.0120%" height="15" fill="rgb(249,103,42)" fg:x="1197" fg:w="1"/><text x="14.5596%" y="575.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="14.3216%" y="485" width="0.0120%" height="15" fill="rgb(246,81,33)" fg:x="1198" fg:w="1"/><text x="14.5716%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="14.3216%" y="469" width="0.0120%" height="15" fill="rgb(252,33,42)" fg:x="1198" fg:w="1"/><text x="14.5716%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="14.3216%" y="581" width="0.0239%" height="15" fill="rgb(209,212,41)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="14.3216%" y="565" width="0.0239%" height="15" fill="rgb(207,154,6)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="14.3216%" y="549" width="0.0239%" height="15" fill="rgb(223,64,47)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="14.3216%" y="533" width="0.0239%" height="15" fill="rgb(211,161,38)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="14.3216%" y="517" width="0.0239%" height="15" fill="rgb(219,138,40)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="14.3216%" y="501" width="0.0239%" height="15" fill="rgb(241,228,46)" fg:x="1198" fg:w="2"/><text x="14.5716%" y="511.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="14.3335%" y="485" width="0.0120%" height="15" fill="rgb(223,209,38)" fg:x="1199" fg:w="1"/><text x="14.5835%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="14.3933%" y="533" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="1204" fg:w="1"/><text x="14.6433%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="14.4411%" y="517" width="0.0478%" height="15" fill="rgb(231,15,5)" fg:x="1208" fg:w="4"/><text x="14.6911%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (4 samples, 0.05%)</title><rect x="14.4411%" y="501" width="0.0478%" height="15" fill="rgb(252,35,15)" fg:x="1208" fg:w="4"/><text x="14.6911%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.5846%" y="501" width="0.0120%" height="15" fill="rgb(248,181,18)" fg:x="1220" fg:w="1"/><text x="14.8346%" y="511.50"></text></g><g><title>core::cmp::PartialEq::ne (127 samples, 1.52%)</title><rect x="14.5965%" y="485" width="1.5182%" height="15" fill="rgb(233,39,42)" fg:x="1221" fg:w="127"/><text x="14.8465%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (126 samples, 1.51%)</title><rect x="14.6085%" y="469" width="1.5063%" height="15" fill="rgb(238,110,33)" fg:x="1222" fg:w="126"/><text x="14.8585%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (126 samples, 1.51%)</title><rect x="14.6085%" y="453" width="1.5063%" height="15" fill="rgb(233,195,10)" fg:x="1222" fg:w="126"/><text x="14.8585%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (126 samples, 1.51%)</title><rect x="14.6085%" y="437" width="1.5063%" height="15" fill="rgb(254,105,3)" fg:x="1222" fg:w="126"/><text x="14.8585%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (126 samples, 1.51%)</title><rect x="14.6085%" y="421" width="1.5063%" height="15" fill="rgb(221,225,9)" fg:x="1222" fg:w="126"/><text x="14.8585%" y="431.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (126 samples, 1.51%)</title><rect x="14.6085%" y="405" width="1.5063%" height="15" fill="rgb(224,227,45)" fg:x="1222" fg:w="126"/><text x="14.8585%" y="415.50"></text></g><g><title>[libc.so.6] (124 samples, 1.48%)</title><rect x="14.6324%" y="389" width="1.4824%" height="15" fill="rgb(229,198,43)" fg:x="1224" fg:w="124"/><text x="14.8824%" y="399.50"></text></g><g><title>yt_history::model::Models::find_or_create_channel (149 samples, 1.78%)</title><rect x="14.3455%" y="581" width="1.7812%" height="15" fill="rgb(206,209,35)" fg:x="1200" fg:w="149"/><text x="14.5955%" y="591.50">y..</text></g><g><title>yt_history::model::Models::find_channel (148 samples, 1.77%)</title><rect x="14.3574%" y="565" width="1.7693%" height="15" fill="rgb(245,195,53)" fg:x="1201" fg:w="148"/><text x="14.6074%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (148 samples, 1.77%)</title><rect x="14.3574%" y="549" width="1.7693%" height="15" fill="rgb(240,92,26)" fg:x="1201" fg:w="148"/><text x="14.6074%" y="559.50"></text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (144 samples, 1.72%)</title><rect x="14.4053%" y="533" width="1.7215%" height="15" fill="rgb(207,40,23)" fg:x="1205" fg:w="144"/><text x="14.6553%" y="543.50"></text></g><g><title>yt_history::model::WhereChannel::matches (137 samples, 1.64%)</title><rect x="14.4889%" y="517" width="1.6378%" height="15" fill="rgb(223,111,35)" fg:x="1212" fg:w="137"/><text x="14.7389%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (128 samples, 1.53%)</title><rect x="14.5965%" y="501" width="1.5302%" height="15" fill="rgb(229,147,28)" fg:x="1221" fg:w="128"/><text x="14.8465%" y="511.50"></text></g><g><title>yt_history::model::WhereChannel::matches (1 samples, 0.01%)</title><rect x="16.1148%" y="485" width="0.0120%" height="15" fill="rgb(211,29,28)" fg:x="1348" fg:w="1"/><text x="16.3648%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (109 samples, 1.30%)</title><rect x="16.9516%" y="533" width="1.3030%" height="15" fill="rgb(228,72,33)" fg:x="1418" fg:w="109"/><text x="17.2016%" y="543.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (105 samples, 1.26%)</title><rect x="16.9994%" y="517" width="1.2552%" height="15" fill="rgb(205,214,31)" fg:x="1422" fg:w="105"/><text x="17.2494%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (69 samples, 0.82%)</title><rect x="17.4298%" y="501" width="0.8249%" height="15" fill="rgb(224,111,15)" fg:x="1458" fg:w="69"/><text x="17.6798%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (69 samples, 0.82%)</title><rect x="17.4298%" y="485" width="0.8249%" height="15" fill="rgb(253,21,26)" fg:x="1458" fg:w="69"/><text x="17.6798%" y="495.50"></text></g><g><title>core::mem::replace (69 samples, 0.82%)</title><rect x="17.4298%" y="469" width="0.8249%" height="15" fill="rgb(245,139,43)" fg:x="1458" fg:w="69"/><text x="17.6798%" y="479.50"></text></g><g><title>core::ptr::write (69 samples, 0.82%)</title><rect x="17.4298%" y="453" width="0.8249%" height="15" fill="rgb(252,170,7)" fg:x="1458" fg:w="69"/><text x="17.6798%" y="463.50"></text></g><g><title>[libc.so.6] (1,674 samples, 20.01%)</title><rect x="24.4351%" y="421" width="20.0120%" height="15" fill="rgb(231,118,14)" fg:x="2044" fg:w="1674"/><text x="24.6851%" y="431.50">[libc.so.6]</text></g><g><title>core::cmp::PartialEq::ne (1,758 samples, 21.02%)</title><rect x="23.4429%" y="517" width="21.0161%" height="15" fill="rgb(238,83,0)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="527.50">core::cmp::PartialEq::ne</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1,758 samples, 21.02%)</title><rect x="23.4429%" y="501" width="21.0161%" height="15" fill="rgb(221,39,39)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="511.50">&lt;alloc::string::String as core::c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,758 samples, 21.02%)</title><rect x="23.4429%" y="485" width="21.0161%" height="15" fill="rgb(222,119,46)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="495.50">core::str::traits::&lt;impl core::cm..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,758 samples, 21.02%)</title><rect x="23.4429%" y="469" width="21.0161%" height="15" fill="rgb(222,165,49)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="479.50">core::cmp::impls::&lt;impl core::cmp..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,758 samples, 21.02%)</title><rect x="23.4429%" y="453" width="21.0161%" height="15" fill="rgb(219,113,52)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="463.50">core::slice::cmp::&lt;impl core::cmp..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,758 samples, 21.02%)</title><rect x="23.4429%" y="437" width="21.0161%" height="15" fill="rgb(214,7,15)" fg:x="1961" fg:w="1758"/><text x="23.6929%" y="447.50">&lt;[A] as core::slice::cmp::SlicePa..</text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="44.4471%" y="421" width="0.0120%" height="15" fill="rgb(235,32,4)" fg:x="3718" fg:w="1"/><text x="44.6971%" y="431.50"></text></g><g><title>read (1 samples, 0.01%)</title><rect x="44.4471%" y="405" width="0.0120%" height="15" fill="rgb(238,90,54)" fg:x="3718" fg:w="1"/><text x="44.6971%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="44.4471%" y="389" width="0.0120%" height="15" fill="rgb(213,208,19)" fg:x="3718" fg:w="1"/><text x="44.6971%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (3 samples, 0.04%)</title><rect x="44.4591%" y="517" width="0.0359%" height="15" fill="rgb(233,156,4)" fg:x="3719" fg:w="3"/><text x="44.7091%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="44.4591%" y="501" width="0.0359%" height="15" fill="rgb(207,194,5)" fg:x="3719" fg:w="3"/><text x="44.7091%" y="511.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,374 samples, 28.38%)</title><rect x="16.1267%" y="565" width="28.3802%" height="15" fill="rgb(206,111,30)" fg:x="1349" fg:w="2374"/><text x="16.3767%" y="575.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::tra..</text></g><g><title>yt_history::model::Models::find_video::{{closure}} (2,337 samples, 27.94%)</title><rect x="16.5690%" y="549" width="27.9378%" height="15" fill="rgb(243,70,54)" fg:x="1386" fg:w="2337"/><text x="16.8190%" y="559.50">yt_history::model::Models::find_video::{{clos..</text></g><g><title>yt_history::model::WhereVideo::matches (2,196 samples, 26.25%)</title><rect x="18.2546%" y="533" width="26.2522%" height="15" fill="rgb(242,28,8)" fg:x="1527" fg:w="2196"/><text x="18.5046%" y="543.50">yt_history::model::WhereVideo::matches</text></g><g><title>yt_history::model::WhereChannel::matches (1 samples, 0.01%)</title><rect x="44.4949%" y="517" width="0.0120%" height="15" fill="rgb(219,106,18)" fg:x="3722" fg:w="1"/><text x="44.7449%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="44.4949%" y="501" width="0.0120%" height="15" fill="rgb(244,222,10)" fg:x="3722" fg:w="1"/><text x="44.7449%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="44.4949%" y="485" width="0.0120%" height="15" fill="rgb(236,179,52)" fg:x="3722" fg:w="1"/><text x="44.7449%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="44.4949%" y="469" width="0.0120%" height="15" fill="rgb(213,23,39)" fg:x="3722" fg:w="1"/><text x="44.7449%" y="479.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="44.5308%" y="437" width="0.0120%" height="15" fill="rgb(238,48,10)" fg:x="3725" fg:w="1"/><text x="44.7808%" y="447.50"></text></g><g><title>yt_history::model::Models::find_video (2,380 samples, 28.45%)</title><rect x="16.1267%" y="581" width="28.4519%" height="15" fill="rgb(251,196,23)" fg:x="1349" fg:w="2380"/><text x="16.3767%" y="591.50">yt_history::model::Models::find_video</text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::WhereVideo&gt; (6 samples, 0.07%)</title><rect x="44.5069%" y="565" width="0.0717%" height="15" fill="rgb(250,152,24)" fg:x="3723" fg:w="6"/><text x="44.7569%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (4 samples, 0.05%)</title><rect x="44.5308%" y="549" width="0.0478%" height="15" fill="rgb(209,150,17)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (4 samples, 0.05%)</title><rect x="44.5308%" y="533" width="0.0478%" height="15" fill="rgb(234,202,34)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (4 samples, 0.05%)</title><rect x="44.5308%" y="517" width="0.0478%" height="15" fill="rgb(253,148,53)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (4 samples, 0.05%)</title><rect x="44.5308%" y="501" width="0.0478%" height="15" fill="rgb(218,129,16)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="44.5308%" y="485" width="0.0478%" height="15" fill="rgb(216,85,19)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="44.5308%" y="469" width="0.0478%" height="15" fill="rgb(235,228,7)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="44.5308%" y="453" width="0.0478%" height="15" fill="rgb(245,175,0)" fg:x="3725" fg:w="4"/><text x="44.7808%" y="463.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="44.5427%" y="437" width="0.0359%" height="15" fill="rgb(208,168,36)" fg:x="3726" fg:w="3"/><text x="44.7927%" y="447.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="44.5547%" y="421" width="0.0239%" height="15" fill="rgb(246,171,24)" fg:x="3727" fg:w="2"/><text x="44.8047%" y="431.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="44.7101%" y="533" width="0.0120%" height="15" fill="rgb(215,142,24)" fg:x="3740" fg:w="1"/><text x="44.9601%" y="543.50"></text></g><g><title>yt_history::model::Models::find_or_create_video (2,654 samples, 31.73%)</title><rect x="14.1781%" y="597" width="31.7274%" height="15" fill="rgb(250,187,7)" fg:x="1186" fg:w="2654"/><text x="14.4281%" y="607.50">yt_history::model::Models::find_or_create_video</text></g><g><title>yt_history::model::Models::insert_video (111 samples, 1.33%)</title><rect x="44.5786%" y="581" width="1.3270%" height="15" fill="rgb(228,66,33)" fg:x="3729" fg:w="111"/><text x="44.8286%" y="591.50"></text></g><g><title>yt_history::model::Models::find_channel (110 samples, 1.32%)</title><rect x="44.5906%" y="565" width="1.3150%" height="15" fill="rgb(234,215,21)" fg:x="3730" fg:w="110"/><text x="44.8406%" y="575.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (110 samples, 1.32%)</title><rect x="44.5906%" y="549" width="1.3150%" height="15" fill="rgb(222,191,20)" fg:x="3730" fg:w="110"/><text x="44.8406%" y="559.50"></text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (99 samples, 1.18%)</title><rect x="44.7221%" y="533" width="1.1835%" height="15" fill="rgb(245,79,54)" fg:x="3741" fg:w="99"/><text x="44.9721%" y="543.50"></text></g><g><title>yt_history::model::WhereChannel::matches (95 samples, 1.14%)</title><rect x="44.7699%" y="517" width="1.1357%" height="15" fill="rgb(240,10,37)" fg:x="3745" fg:w="95"/><text x="45.0199%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (92 samples, 1.10%)</title><rect x="44.8057%" y="501" width="1.0998%" height="15" fill="rgb(214,192,32)" fg:x="3748" fg:w="92"/><text x="45.0557%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (92 samples, 1.10%)</title><rect x="44.8057%" y="485" width="1.0998%" height="15" fill="rgb(209,36,54)" fg:x="3748" fg:w="92"/><text x="45.0557%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (92 samples, 1.10%)</title><rect x="44.8057%" y="469" width="1.0998%" height="15" fill="rgb(220,10,11)" fg:x="3748" fg:w="92"/><text x="45.0557%" y="479.50"></text></g><g><title>&lt;yt_history::model::Channel as core::cmp::PartialEq&gt;::eq (92 samples, 1.10%)</title><rect x="44.8057%" y="453" width="1.0998%" height="15" fill="rgb(221,106,17)" fg:x="3748" fg:w="92"/><text x="45.0557%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (86 samples, 1.03%)</title><rect x="44.8775%" y="437" width="1.0281%" height="15" fill="rgb(251,142,44)" fg:x="3754" fg:w="86"/><text x="45.1275%" y="447.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (86 samples, 1.03%)</title><rect x="44.8775%" y="421" width="1.0281%" height="15" fill="rgb(238,13,15)" fg:x="3754" fg:w="86"/><text x="45.1275%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (86 samples, 1.03%)</title><rect x="44.8775%" y="405" width="1.0281%" height="15" fill="rgb(208,107,27)" fg:x="3754" fg:w="86"/><text x="45.1275%" y="415.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (86 samples, 1.03%)</title><rect x="44.8775%" y="389" width="1.0281%" height="15" fill="rgb(205,136,37)" fg:x="3754" fg:w="86"/><text x="45.1275%" y="399.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (86 samples, 1.03%)</title><rect x="44.8775%" y="373" width="1.0281%" height="15" fill="rgb(250,205,27)" fg:x="3754" fg:w="86"/><text x="45.1275%" y="383.50"></text></g><g><title>[libc.so.6] (82 samples, 0.98%)</title><rect x="44.9253%" y="357" width="0.9803%" height="15" fill="rgb(210,80,43)" fg:x="3758" fg:w="82"/><text x="45.1753%" y="367.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="45.9056%" y="581" width="0.0120%" height="15" fill="rgb(247,160,36)" fg:x="3840" fg:w="1"/><text x="46.1556%" y="591.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (1 samples, 0.01%)</title><rect x="45.9056%" y="565" width="0.0120%" height="15" fill="rgb(234,13,49)" fg:x="3840" fg:w="1"/><text x="46.1556%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="45.9056%" y="549" width="0.0120%" height="15" fill="rgb(234,122,0)" fg:x="3840" fg:w="1"/><text x="46.1556%" y="559.50"></text></g><g><title>&lt;yt_history::model::Watched as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="45.9175%" y="581" width="0.0120%" height="15" fill="rgb(207,146,38)" fg:x="3841" fg:w="1"/><text x="46.1675%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="45.9295%" y="565" width="0.0120%" height="15" fill="rgb(207,177,25)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="45.9295%" y="549" width="0.0120%" height="15" fill="rgb(211,178,42)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="45.9295%" y="533" width="0.0120%" height="15" fill="rgb(230,69,54)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="45.9295%" y="517" width="0.0120%" height="15" fill="rgb(214,135,41)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="45.9295%" y="501" width="0.0120%" height="15" fill="rgb(237,67,25)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="45.9295%" y="485" width="0.0120%" height="15" fill="rgb(222,189,50)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="495.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="45.9295%" y="469" width="0.0120%" height="15" fill="rgb(245,148,34)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="45.9295%" y="453" width="0.0120%" height="15" fill="rgb(222,29,6)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="45.9295%" y="437" width="0.0120%" height="15" fill="rgb(221,189,43)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="447.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.9295%" y="421" width="0.0120%" height="15" fill="rgb(207,36,27)" fg:x="3842" fg:w="1"/><text x="46.1795%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="45.9295%" y="581" width="0.0359%" height="15" fill="rgb(217,90,24)" fg:x="3842" fg:w="3"/><text x="46.1795%" y="591.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="45.9414%" y="565" width="0.0239%" height="15" fill="rgb(224,66,35)" fg:x="3843" fg:w="2"/><text x="46.1914%" y="575.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="45.9414%" y="549" width="0.0239%" height="15" fill="rgb(221,13,50)" fg:x="3843" fg:w="2"/><text x="46.1914%" y="559.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="45.9414%" y="533" width="0.0239%" height="15" fill="rgb(236,68,49)" fg:x="3843" fg:w="2"/><text x="46.1914%" y="543.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="45.9414%" y="517" width="0.0239%" height="15" fill="rgb(229,146,28)" fg:x="3843" fg:w="2"/><text x="46.1914%" y="527.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="45.9414%" y="501" width="0.0239%" height="15" fill="rgb(225,31,38)" fg:x="3843" fg:w="2"/><text x="46.1914%" y="511.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.9534%" y="485" width="0.0120%" height="15" fill="rgb(250,208,3)" fg:x="3844" fg:w="1"/><text x="46.2034%" y="495.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.9534%" y="469" width="0.0120%" height="15" fill="rgb(246,54,23)" fg:x="3844" fg:w="1"/><text x="46.2034%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="46.2642%" y="549" width="0.0120%" height="15" fill="rgb(243,76,11)" fg:x="3870" fg:w="1"/><text x="46.5142%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (114 samples, 1.36%)</title><rect x="46.6467%" y="533" width="1.3628%" height="15" fill="rgb(245,21,50)" fg:x="3902" fg:w="114"/><text x="46.8967%" y="543.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (112 samples, 1.34%)</title><rect x="46.6707%" y="517" width="1.3389%" height="15" fill="rgb(228,9,43)" fg:x="3904" fg:w="112"/><text x="46.9207%" y="527.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (75 samples, 0.90%)</title><rect x="47.1130%" y="501" width="0.8966%" height="15" fill="rgb(208,100,47)" fg:x="3941" fg:w="75"/><text x="47.3630%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (75 samples, 0.90%)</title><rect x="47.1130%" y="485" width="0.8966%" height="15" fill="rgb(232,26,8)" fg:x="3941" fg:w="75"/><text x="47.3630%" y="495.50"></text></g><g><title>core::mem::replace (75 samples, 0.90%)</title><rect x="47.1130%" y="469" width="0.8966%" height="15" fill="rgb(216,166,38)" fg:x="3941" fg:w="75"/><text x="47.3630%" y="479.50"></text></g><g><title>core::ptr::write (75 samples, 0.90%)</title><rect x="47.1130%" y="453" width="0.8966%" height="15" fill="rgb(251,202,51)" fg:x="3941" fg:w="75"/><text x="47.3630%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,856 samples, 22.19%)</title><rect x="51.9426%" y="517" width="22.1877%" height="15" fill="rgb(254,216,34)" fg:x="4345" fg:w="1856"/><text x="52.1926%" y="527.50">core::cmp::impls::&lt;impl core::cmp::..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,856 samples, 22.19%)</title><rect x="51.9426%" y="501" width="22.1877%" height="15" fill="rgb(251,32,27)" fg:x="4345" fg:w="1856"/><text x="52.1926%" y="511.50">&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::Par..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1,856 samples, 22.19%)</title><rect x="51.9426%" y="485" width="22.1877%" height="15" fill="rgb(208,127,28)" fg:x="4345" fg:w="1856"/><text x="52.1926%" y="495.50">&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcE..</text></g><g><title>&lt;yt_history::model::Video as core::cmp::PartialEq&gt;::eq (1,856 samples, 22.19%)</title><rect x="51.9426%" y="469" width="22.1877%" height="15" fill="rgb(224,137,22)" fg:x="4345" fg:w="1856"/><text x="52.1926%" y="479.50">&lt;yt_history::model::Video as core::..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1,801 samples, 21.53%)</title><rect x="52.6001%" y="453" width="21.5302%" height="15" fill="rgb(254,70,32)" fg:x="4400" fg:w="1801"/><text x="52.8501%" y="463.50">&lt;alloc::string::String as core::cm..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,801 samples, 21.53%)</title><rect x="52.6001%" y="437" width="21.5302%" height="15" fill="rgb(229,75,37)" fg:x="4400" fg:w="1801"/><text x="52.8501%" y="447.50">core::str::traits::&lt;impl core::cmp..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,801 samples, 21.53%)</title><rect x="52.6001%" y="421" width="21.5302%" height="15" fill="rgb(252,64,23)" fg:x="4400" fg:w="1801"/><text x="52.8501%" y="431.50">core::cmp::impls::&lt;impl core::cmp:..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,801 samples, 21.53%)</title><rect x="52.6001%" y="405" width="21.5302%" height="15" fill="rgb(232,162,48)" fg:x="4400" fg:w="1801"/><text x="52.8501%" y="415.50">core::slice::cmp::&lt;impl core::cmp:..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,801 samples, 21.53%)</title><rect x="52.6001%" y="389" width="21.5302%" height="15" fill="rgb(246,160,12)" fg:x="4400" fg:w="1801"/><text x="52.8501%" y="399.50">&lt;[A] as core::slice::cmp::SlicePar..</text></g><g><title>[libc.so.6] (1,708 samples, 20.42%)</title><rect x="53.7119%" y="373" width="20.4184%" height="15" fill="rgb(247,166,0)" fg:x="4493" fg:w="1708"/><text x="53.9619%" y="383.50">[libc.so.6]</text></g><g><title>yt_history::model::Models::insert_watched (2,370 samples, 28.33%)</title><rect x="45.9056%" y="597" width="28.3323%" height="15" fill="rgb(249,219,21)" fg:x="3840" fg:w="2370"/><text x="46.1556%" y="607.50">yt_history::model::Models::insert_watched</text></g><g><title>yt_history::model::Models::find_video (2,365 samples, 28.27%)</title><rect x="45.9653%" y="581" width="28.2726%" height="15" fill="rgb(205,209,3)" fg:x="3845" fg:w="2365"/><text x="46.2153%" y="591.50">yt_history::model::Models::find_video</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,365 samples, 28.27%)</title><rect x="45.9653%" y="565" width="28.2726%" height="15" fill="rgb(243,44,1)" fg:x="3845" fg:w="2365"/><text x="46.2153%" y="575.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::tr..</text></g><g><title>yt_history::model::Models::find_video::{{closure}} (2,339 samples, 27.96%)</title><rect x="46.2762%" y="549" width="27.9617%" height="15" fill="rgb(206,159,16)" fg:x="3871" fg:w="2339"/><text x="46.5262%" y="559.50">yt_history::model::Models::find_video::{{clos..</text></g><g><title>yt_history::model::WhereVideo::matches (2,194 samples, 26.23%)</title><rect x="48.0096%" y="533" width="26.2283%" height="15" fill="rgb(244,77,30)" fg:x="4016" fg:w="2194"/><text x="48.2596%" y="543.50">yt_history::model::WhereVideo::matches</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (9 samples, 0.11%)</title><rect x="74.1303%" y="517" width="0.1076%" height="15" fill="rgb(218,69,12)" fg:x="6201" fg:w="9"/><text x="74.3803%" y="527.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="74.1303%" y="501" width="0.1076%" height="15" fill="rgb(212,87,7)" fg:x="6201" fg:w="9"/><text x="74.3803%" y="511.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (4 samples, 0.05%)</title><rect x="74.1901%" y="485" width="0.0478%" height="15" fill="rgb(245,114,25)" fg:x="6206" fg:w="4"/><text x="74.4401%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.05%)</title><rect x="74.1901%" y="469" width="0.0478%" height="15" fill="rgb(210,61,42)" fg:x="6206" fg:w="4"/><text x="74.4401%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.05%)</title><rect x="74.1901%" y="453" width="0.0478%" height="15" fill="rgb(211,52,33)" fg:x="6206" fg:w="4"/><text x="74.4401%" y="463.50"></text></g><g><title>core::mem::replace (4 samples, 0.05%)</title><rect x="74.1901%" y="437" width="0.0478%" height="15" fill="rgb(234,58,33)" fg:x="6206" fg:w="4"/><text x="74.4401%" y="447.50"></text></g><g><title>core::ptr::write (4 samples, 0.05%)</title><rect x="74.1901%" y="421" width="0.0478%" height="15" fill="rgb(220,115,36)" fg:x="6206" fg:w="4"/><text x="74.4401%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="74.2857%" y="357" width="0.0120%" height="15" fill="rgb(243,153,54)" fg:x="6214" fg:w="1"/><text x="74.5357%" y="367.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="74.2977%" y="357" width="0.0120%" height="15" fill="rgb(251,47,18)" fg:x="6215" fg:w="1"/><text x="74.5477%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (12 samples, 0.14%)</title><rect x="74.2857%" y="565" width="0.1435%" height="15" fill="rgb(242,102,42)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="575.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (12 samples, 0.14%)</title><rect x="74.2857%" y="549" width="0.1435%" height="15" fill="rgb(234,31,38)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (12 samples, 0.14%)</title><rect x="74.2857%" y="533" width="0.1435%" height="15" fill="rgb(221,117,51)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (12 samples, 0.14%)</title><rect x="74.2857%" y="517" width="0.1435%" height="15" fill="rgb(212,20,18)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (12 samples, 0.14%)</title><rect x="74.2857%" y="501" width="0.1435%" height="15" fill="rgb(245,133,36)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="511.50"></text></g><g><title>alloc::slice::hack::to_vec (12 samples, 0.14%)</title><rect x="74.2857%" y="485" width="0.1435%" height="15" fill="rgb(212,6,19)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="495.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (12 samples, 0.14%)</title><rect x="74.2857%" y="469" width="0.1435%" height="15" fill="rgb(218,1,36)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="74.2857%" y="453" width="0.1435%" height="15" fill="rgb(246,84,54)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (12 samples, 0.14%)</title><rect x="74.2857%" y="437" width="0.1435%" height="15" fill="rgb(242,110,6)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (12 samples, 0.14%)</title><rect x="74.2857%" y="421" width="0.1435%" height="15" fill="rgb(214,47,5)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.14%)</title><rect x="74.2857%" y="405" width="0.1435%" height="15" fill="rgb(218,159,25)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="415.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.14%)</title><rect x="74.2857%" y="389" width="0.1435%" height="15" fill="rgb(215,211,28)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="399.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.14%)</title><rect x="74.2857%" y="373" width="0.1435%" height="15" fill="rgb(238,59,32)" fg:x="6214" fg:w="12"/><text x="74.5357%" y="383.50"></text></g><g><title>malloc (10 samples, 0.12%)</title><rect x="74.3096%" y="357" width="0.1195%" height="15" fill="rgb(226,82,3)" fg:x="6216" fg:w="10"/><text x="74.5596%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.4053%" y="341" width="0.0239%" height="15" fill="rgb(240,164,32)" fg:x="6224" fg:w="2"/><text x="74.6553%" y="351.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="74.4292%" y="325" width="0.0120%" height="15" fill="rgb(232,46,7)" fg:x="6226" fg:w="1"/><text x="74.6792%" y="335.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (18 samples, 0.22%)</title><rect x="74.2857%" y="581" width="0.2152%" height="15" fill="rgb(229,129,53)" fg:x="6214" fg:w="18"/><text x="74.5357%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;char&gt;&gt;::from (6 samples, 0.07%)</title><rect x="74.4292%" y="565" width="0.0717%" height="15" fill="rgb(234,188,29)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="575.50"></text></g><g><title>&lt;char as alloc::string::ToString&gt;::to_string (6 samples, 0.07%)</title><rect x="74.4292%" y="549" width="0.0717%" height="15" fill="rgb(246,141,4)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;mut str&gt;&gt;::from (6 samples, 0.07%)</title><rect x="74.4292%" y="533" width="0.0717%" height="15" fill="rgb(229,23,39)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="543.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (6 samples, 0.07%)</title><rect x="74.4292%" y="517" width="0.0717%" height="15" fill="rgb(206,12,3)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (6 samples, 0.07%)</title><rect x="74.4292%" y="501" width="0.0717%" height="15" fill="rgb(252,226,20)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (6 samples, 0.07%)</title><rect x="74.4292%" y="485" width="0.0717%" height="15" fill="rgb(216,123,35)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (6 samples, 0.07%)</title><rect x="74.4292%" y="469" width="0.0717%" height="15" fill="rgb(212,68,40)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="479.50"></text></g><g><title>alloc::slice::hack::to_vec (6 samples, 0.07%)</title><rect x="74.4292%" y="453" width="0.0717%" height="15" fill="rgb(254,125,32)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="463.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (6 samples, 0.07%)</title><rect x="74.4292%" y="437" width="0.0717%" height="15" fill="rgb(253,97,22)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="74.4292%" y="421" width="0.0717%" height="15" fill="rgb(241,101,14)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.07%)</title><rect x="74.4292%" y="405" width="0.0717%" height="15" fill="rgb(238,103,29)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.07%)</title><rect x="74.4292%" y="389" width="0.0717%" height="15" fill="rgb(233,195,47)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="74.4292%" y="373" width="0.0717%" height="15" fill="rgb(246,218,30)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="74.4292%" y="357" width="0.0717%" height="15" fill="rgb(219,145,47)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="367.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.07%)</title><rect x="74.4292%" y="341" width="0.0717%" height="15" fill="rgb(243,12,26)" fg:x="6226" fg:w="6"/><text x="74.6792%" y="351.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="74.4411%" y="325" width="0.0598%" height="15" fill="rgb(214,87,16)" fg:x="6227" fg:w="5"/><text x="74.6911%" y="335.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.04%)</title><rect x="74.5009%" y="581" width="0.0359%" height="15" fill="rgb(208,99,42)" fg:x="6232" fg:w="3"/><text x="74.7509%" y="591.50"></text></g><g><title>&lt;yt_history::DataRow as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="74.5368%" y="581" width="0.0120%" height="15" fill="rgb(253,99,2)" fg:x="6235" fg:w="1"/><text x="74.7868%" y="591.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.30%)</title><rect x="74.6085%" y="565" width="0.2989%" height="15" fill="rgb(220,168,23)" fg:x="6241" fg:w="25"/><text x="74.8585%" y="575.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (25 samples, 0.30%)</title><rect x="74.6085%" y="549" width="0.2989%" height="15" fill="rgb(242,38,24)" fg:x="6241" fg:w="25"/><text x="74.8585%" y="559.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (25 samples, 0.30%)</title><rect x="74.6085%" y="533" width="0.2989%" height="15" fill="rgb(225,182,9)" fg:x="6241" fg:w="25"/><text x="74.8585%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (14 samples, 0.17%)</title><rect x="74.7400%" y="517" width="0.1674%" height="15" fill="rgb(243,178,37)" fg:x="6252" fg:w="14"/><text x="74.9900%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (3 samples, 0.04%)</title><rect x="74.8715%" y="501" width="0.0359%" height="15" fill="rgb(232,139,19)" fg:x="6263" fg:w="3"/><text x="75.1215%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.04%)</title><rect x="74.9074%" y="437" width="0.0359%" height="15" fill="rgb(225,201,24)" fg:x="6266" fg:w="3"/><text x="75.1574%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="74.9432%" y="421" width="0.0239%" height="15" fill="rgb(221,47,46)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="74.9432%" y="405" width="0.0239%" height="15" fill="rgb(249,23,13)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="415.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="74.9432%" y="389" width="0.0239%" height="15" fill="rgb(219,9,5)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="399.50"></text></g><g><title>realloc (2 samples, 0.02%)</title><rect x="74.9432%" y="373" width="0.0239%" height="15" fill="rgb(254,171,16)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="383.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.9432%" y="357" width="0.0239%" height="15" fill="rgb(230,171,20)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="367.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="74.9432%" y="341" width="0.0239%" height="15" fill="rgb(210,71,41)" fg:x="6269" fg:w="2"/><text x="75.1932%" y="351.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="74.9671%" y="421" width="0.0120%" height="15" fill="rgb(206,173,20)" fg:x="6271" fg:w="1"/><text x="75.2171%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="74.9671%" y="405" width="0.0120%" height="15" fill="rgb(233,88,34)" fg:x="6271" fg:w="1"/><text x="75.2171%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="74.9432%" y="437" width="0.1076%" height="15" fill="rgb(223,209,46)" fg:x="6269" fg:w="9"/><text x="75.1932%" y="447.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="74.9791%" y="421" width="0.0717%" height="15" fill="rgb(250,43,18)" fg:x="6272" fg:w="6"/><text x="75.2291%" y="431.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="75.0508%" y="437" width="0.0120%" height="15" fill="rgb(208,13,10)" fg:x="6278" fg:w="1"/><text x="75.3008%" y="447.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (1 samples, 0.01%)</title><rect x="75.0508%" y="421" width="0.0120%" height="15" fill="rgb(212,200,36)" fg:x="6278" fg:w="1"/><text x="75.3008%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="74.9074%" y="501" width="0.1674%" height="15" fill="rgb(225,90,30)" fg:x="6266" fg:w="14"/><text x="75.1574%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="74.9074%" y="485" width="0.1674%" height="15" fill="rgb(236,182,39)" fg:x="6266" fg:w="14"/><text x="75.1574%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.17%)</title><rect x="74.9074%" y="469" width="0.1674%" height="15" fill="rgb(212,144,35)" fg:x="6266" fg:w="14"/><text x="75.1574%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.17%)</title><rect x="74.9074%" y="453" width="0.1674%" height="15" fill="rgb(228,63,44)" fg:x="6266" fg:w="14"/><text x="75.1574%" y="463.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="75.0628%" y="437" width="0.0120%" height="15" fill="rgb(228,109,6)" fg:x="6279" fg:w="1"/><text x="75.3128%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="75.0628%" y="421" width="0.0120%" height="15" fill="rgb(238,117,24)" fg:x="6279" fg:w="1"/><text x="75.3128%" y="431.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.19%)</title><rect x="74.9074%" y="565" width="0.1913%" height="15" fill="rgb(242,26,26)" fg:x="6266" fg:w="16"/><text x="75.1574%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.19%)</title><rect x="74.9074%" y="549" width="0.1913%" height="15" fill="rgb(221,92,48)" fg:x="6266" fg:w="16"/><text x="75.1574%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.19%)</title><rect x="74.9074%" y="533" width="0.1913%" height="15" fill="rgb(209,209,32)" fg:x="6266" fg:w="16"/><text x="75.1574%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.19%)</title><rect x="74.9074%" y="517" width="0.1913%" height="15" fill="rgb(221,70,22)" fg:x="6266" fg:w="16"/><text x="75.1574%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="75.0747%" y="501" width="0.0239%" height="15" fill="rgb(248,145,5)" fg:x="6280" fg:w="2"/><text x="75.3247%" y="511.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="75.0747%" y="485" width="0.0239%" height="15" fill="rgb(226,116,26)" fg:x="6280" fg:w="2"/><text x="75.3247%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="75.0986%" y="565" width="0.0120%" height="15" fill="rgb(244,5,17)" fg:x="6282" fg:w="1"/><text x="75.3486%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="75.0986%" y="549" width="0.0120%" height="15" fill="rgb(252,159,33)" fg:x="6282" fg:w="1"/><text x="75.3486%" y="559.50"></text></g><g><title>core::str::pattern::StrSearcher::new (1 samples, 0.01%)</title><rect x="75.1704%" y="517" width="0.0120%" height="15" fill="rgb(206,71,0)" fg:x="6288" fg:w="1"/><text x="75.4204%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="75.1823%" y="501" width="0.0120%" height="15" fill="rgb(233,118,54)" fg:x="6289" fg:w="1"/><text x="75.4323%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="75.1823%" y="485" width="0.0120%" height="15" fill="rgb(234,83,48)" fg:x="6289" fg:w="1"/><text x="75.4323%" y="495.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="75.1823%" y="469" width="0.0120%" height="15" fill="rgb(228,3,54)" fg:x="6289" fg:w="1"/><text x="75.4323%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="75.1943%" y="469" width="0.0239%" height="15" fill="rgb(226,155,13)" fg:x="6290" fg:w="2"/><text x="75.4443%" y="479.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (57 samples, 0.68%)</title><rect x="74.5487%" y="581" width="0.6814%" height="15" fill="rgb(241,28,37)" fg:x="6236" fg:w="57"/><text x="74.7987%" y="591.50"></text></g><g><title>core::str::&lt;impl str&gt;::match_indices (10 samples, 0.12%)</title><rect x="75.1106%" y="565" width="0.1195%" height="15" fill="rgb(233,93,10)" fg:x="6283" fg:w="10"/><text x="75.3606%" y="575.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.12%)</title><rect x="75.1106%" y="549" width="0.1195%" height="15" fill="rgb(225,113,19)" fg:x="6283" fg:w="10"/><text x="75.3606%" y="559.50"></text></g><g><title>core::str::pattern::StrSearcher::new (10 samples, 0.12%)</title><rect x="75.1106%" y="533" width="0.1195%" height="15" fill="rgb(241,2,18)" fg:x="6283" fg:w="10"/><text x="75.3606%" y="543.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (4 samples, 0.05%)</title><rect x="75.1823%" y="517" width="0.0478%" height="15" fill="rgb(228,207,21)" fg:x="6289" fg:w="4"/><text x="75.4323%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (3 samples, 0.04%)</title><rect x="75.1943%" y="501" width="0.0359%" height="15" fill="rgb(213,211,35)" fg:x="6290" fg:w="3"/><text x="75.4443%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.04%)</title><rect x="75.1943%" y="485" width="0.0359%" height="15" fill="rgb(209,83,10)" fg:x="6290" fg:w="3"/><text x="75.4443%" y="495.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create::{{closure}} (1 samples, 0.01%)</title><rect x="75.2182%" y="469" width="0.0120%" height="15" fill="rgb(209,164,1)" fg:x="6292" fg:w="1"/><text x="75.4682%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (12 samples, 0.14%)</title><rect x="75.2301%" y="581" width="0.1435%" height="15" fill="rgb(213,184,43)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (12 samples, 0.14%)</title><rect x="75.2301%" y="565" width="0.1435%" height="15" fill="rgb(231,61,34)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (12 samples, 0.14%)</title><rect x="75.2301%" y="549" width="0.1435%" height="15" fill="rgb(235,75,3)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="75.2301%" y="533" width="0.1435%" height="15" fill="rgb(220,106,47)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (12 samples, 0.14%)</title><rect x="75.2301%" y="517" width="0.1435%" height="15" fill="rgb(210,196,33)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (12 samples, 0.14%)</title><rect x="75.2301%" y="501" width="0.1435%" height="15" fill="rgb(229,154,42)" fg:x="6293" fg:w="12"/><text x="75.4801%" y="511.50"></text></g><g><title>cfree (11 samples, 0.13%)</title><rect x="75.2421%" y="485" width="0.1315%" height="15" fill="rgb(228,114,26)" fg:x="6294" fg:w="11"/><text x="75.4921%" y="495.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="75.2660%" y="469" width="0.1076%" height="15" fill="rgb(208,144,1)" fg:x="6296" fg:w="9"/><text x="75.5160%" y="479.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (1 samples, 0.01%)</title><rect x="75.3736%" y="565" width="0.0120%" height="15" fill="rgb(239,112,37)" fg:x="6305" fg:w="1"/><text x="75.6236%" y="575.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="75.3975%" y="485" width="0.0120%" height="15" fill="rgb(210,96,50)" fg:x="6307" fg:w="1"/><text x="75.6475%" y="495.50"></text></g><g><title>yt_history::peek (9 samples, 0.11%)</title><rect x="75.3736%" y="581" width="0.1076%" height="15" fill="rgb(222,178,2)" fg:x="6305" fg:w="9"/><text x="75.6236%" y="591.50"></text></g><g><title>yt_history::iter_index (8 samples, 0.10%)</title><rect x="75.3855%" y="565" width="0.0956%" height="15" fill="rgb(226,74,18)" fg:x="6306" fg:w="8"/><text x="75.6355%" y="575.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (8 samples, 0.10%)</title><rect x="75.3855%" y="549" width="0.0956%" height="15" fill="rgb(225,67,54)" fg:x="6306" fg:w="8"/><text x="75.6355%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (8 samples, 0.10%)</title><rect x="75.3855%" y="533" width="0.0956%" height="15" fill="rgb(251,92,32)" fg:x="6306" fg:w="8"/><text x="75.6355%" y="543.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (7 samples, 0.08%)</title><rect x="75.3975%" y="517" width="0.0837%" height="15" fill="rgb(228,149,22)" fg:x="6307" fg:w="7"/><text x="75.6475%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="75.3975%" y="501" width="0.0837%" height="15" fill="rgb(243,54,13)" fg:x="6307" fg:w="7"/><text x="75.6475%" y="511.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="75.4094%" y="485" width="0.0717%" height="15" fill="rgb(243,180,28)" fg:x="6308" fg:w="6"/><text x="75.6594%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="75.4692%" y="469" width="0.0120%" height="15" fill="rgb(208,167,24)" fg:x="6313" fg:w="1"/><text x="75.7192%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::filled (1 samples, 0.01%)</title><rect x="75.4692%" y="453" width="0.0120%" height="15" fill="rgb(245,73,45)" fg:x="6313" fg:w="1"/><text x="75.7192%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.54%)</title><rect x="76.0669%" y="517" width="0.5380%" height="15" fill="rgb(237,203,48)" fg:x="6363" fg:w="45"/><text x="76.3169%" y="527.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (1 samples, 0.01%)</title><rect x="77.8721%" y="485" width="0.0120%" height="15" fill="rgb(211,197,16)" fg:x="6514" fg:w="1"/><text x="78.1221%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (1 samples, 0.01%)</title><rect x="77.8721%" y="469" width="0.0120%" height="15" fill="rgb(243,99,51)" fg:x="6514" fg:w="1"/><text x="78.1221%" y="479.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="77.8721%" y="453" width="0.0120%" height="15" fill="rgb(215,123,29)" fg:x="6514" fg:w="1"/><text x="78.1221%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="77.8721%" y="437" width="0.0120%" height="15" fill="rgb(239,186,37)" fg:x="6514" fg:w="1"/><text x="78.1221%" y="447.50"></text></g><g><title>read (1 samples, 0.01%)</title><rect x="77.8960%" y="389" width="0.0120%" height="15" fill="rgb(252,136,39)" fg:x="6516" fg:w="1"/><text x="78.1460%" y="399.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (3 samples, 0.04%)</title><rect x="77.8840%" y="485" width="0.0359%" height="15" fill="rgb(223,213,32)" fg:x="6515" fg:w="3"/><text x="78.1340%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (3 samples, 0.04%)</title><rect x="77.8840%" y="469" width="0.0359%" height="15" fill="rgb(233,115,5)" fg:x="6515" fg:w="3"/><text x="78.1340%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (2 samples, 0.02%)</title><rect x="77.8960%" y="453" width="0.0239%" height="15" fill="rgb(207,226,44)" fg:x="6516" fg:w="2"/><text x="78.1460%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (2 samples, 0.02%)</title><rect x="77.8960%" y="437" width="0.0239%" height="15" fill="rgb(208,126,0)" fg:x="6516" fg:w="2"/><text x="78.1460%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (2 samples, 0.02%)</title><rect x="77.8960%" y="421" width="0.0239%" height="15" fill="rgb(244,66,21)" fg:x="6516" fg:w="2"/><text x="78.1460%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (2 samples, 0.02%)</title><rect x="77.8960%" y="405" width="0.0239%" height="15" fill="rgb(222,97,12)" fg:x="6516" fg:w="2"/><text x="78.1460%" y="415.50"></text></g><g><title>std::io::readbuf::BorrowedCursor::as_mut (1 samples, 0.01%)</title><rect x="77.9079%" y="389" width="0.0120%" height="15" fill="rgb(219,213,19)" fg:x="6517" fg:w="1"/><text x="78.1579%" y="399.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::filled (3 samples, 0.04%)</title><rect x="77.9199%" y="485" width="0.0359%" height="15" fill="rgb(252,169,30)" fg:x="6518" fg:w="3"/><text x="78.1699%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (5 samples, 0.06%)</title><rect x="77.9558%" y="485" width="0.0598%" height="15" fill="rgb(206,32,51)" fg:x="6521" fg:w="5"/><text x="78.2058%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 2.28%)</title><rect x="75.9713%" y="533" width="2.2833%" height="15" fill="rgb(250,172,42)" fg:x="6355" fg:w="191"/><text x="76.2213%" y="543.50">&lt;..</text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (138 samples, 1.65%)</title><rect x="76.6049%" y="517" width="1.6497%" height="15" fill="rgb(209,34,43)" fg:x="6408" fg:w="138"/><text x="76.8549%" y="527.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (67 samples, 0.80%)</title><rect x="77.4537%" y="501" width="0.8010%" height="15" fill="rgb(223,11,35)" fg:x="6479" fg:w="67"/><text x="77.7037%" y="511.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (20 samples, 0.24%)</title><rect x="78.0155%" y="485" width="0.2391%" height="15" fill="rgb(251,219,26)" fg:x="6526" fg:w="20"/><text x="78.2655%" y="495.50"></text></g><g><title>core::cmp::min (8 samples, 0.10%)</title><rect x="78.1590%" y="469" width="0.0956%" height="15" fill="rgb(231,119,3)" fg:x="6538" fg:w="8"/><text x="78.4090%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.10%)</title><rect x="78.1590%" y="453" width="0.0956%" height="15" fill="rgb(216,97,11)" fg:x="6538" fg:w="8"/><text x="78.4090%" y="463.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 2.34%)</title><rect x="75.9594%" y="565" width="2.3431%" height="15" fill="rgb(223,59,9)" fg:x="6354" fg:w="196"/><text x="76.2094%" y="575.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (196 samples, 2.34%)</title><rect x="75.9594%" y="549" width="2.3431%" height="15" fill="rgb(233,93,31)" fg:x="6354" fg:w="196"/><text x="76.2094%" y="559.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (4 samples, 0.05%)</title><rect x="78.2546%" y="533" width="0.0478%" height="15" fill="rgb(239,81,33)" fg:x="6546" fg:w="4"/><text x="78.5046%" y="543.50"></text></g><g><title>core::mem::replace (4 samples, 0.05%)</title><rect x="78.2546%" y="517" width="0.0478%" height="15" fill="rgb(213,120,34)" fg:x="6546" fg:w="4"/><text x="78.5046%" y="527.50"></text></g><g><title>core::ptr::read (4 samples, 0.05%)</title><rect x="78.2546%" y="501" width="0.0478%" height="15" fill="rgb(243,49,53)" fg:x="6546" fg:w="4"/><text x="78.5046%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (4 samples, 0.05%)</title><rect x="78.2546%" y="485" width="0.0478%" height="15" fill="rgb(247,216,33)" fg:x="6546" fg:w="4"/><text x="78.5046%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (17 samples, 0.20%)</title><rect x="78.3025%" y="565" width="0.2032%" height="15" fill="rgb(226,26,14)" fg:x="6550" fg:w="17"/><text x="78.5525%" y="575.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::nth (7 samples, 0.08%)</title><rect x="78.5057%" y="565" width="0.0837%" height="15" fill="rgb(215,49,53)" fg:x="6567" fg:w="7"/><text x="78.7557%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::nth (7 samples, 0.08%)</title><rect x="78.5057%" y="549" width="0.0837%" height="15" fill="rgb(245,162,40)" fg:x="6567" fg:w="7"/><text x="78.7557%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (7 samples, 0.08%)</title><rect x="78.5057%" y="533" width="0.0837%" height="15" fill="rgb(229,68,17)" fg:x="6567" fg:w="7"/><text x="78.7557%" y="543.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.06%)</title><rect x="78.8643%" y="501" width="0.0598%" height="15" fill="rgb(213,182,10)" fg:x="6597" fg:w="5"/><text x="79.1143%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (3 samples, 0.04%)</title><rect x="78.9241%" y="501" width="0.0359%" height="15" fill="rgb(245,125,30)" fg:x="6602" fg:w="3"/><text x="79.1741%" y="511.50"></text></g><g><title>__rdl_realloc (3 samples, 0.04%)</title><rect x="78.9958%" y="437" width="0.0359%" height="15" fill="rgb(232,202,2)" fg:x="6608" fg:w="3"/><text x="79.2458%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="79.0197%" y="421" width="0.0120%" height="15" fill="rgb(237,140,51)" fg:x="6610" fg:w="1"/><text x="79.2697%" y="431.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="79.0317%" y="437" width="0.0239%" height="15" fill="rgb(236,157,25)" fg:x="6611" fg:w="2"/><text x="79.2817%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 0.68%)</title><rect x="78.9839%" y="485" width="0.6814%" height="15" fill="rgb(219,209,0)" fg:x="6607" fg:w="57"/><text x="79.2339%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 0.68%)</title><rect x="78.9839%" y="469" width="0.6814%" height="15" fill="rgb(240,116,54)" fg:x="6607" fg:w="57"/><text x="79.2339%" y="479.50"></text></g><g><title>alloc::alloc::realloc (57 samples, 0.68%)</title><rect x="78.9839%" y="453" width="0.6814%" height="15" fill="rgb(216,10,36)" fg:x="6607" fg:w="57"/><text x="79.2339%" y="463.50"></text></g><g><title>realloc (51 samples, 0.61%)</title><rect x="79.0556%" y="437" width="0.6097%" height="15" fill="rgb(222,72,44)" fg:x="6613" fg:w="51"/><text x="79.3056%" y="447.50"></text></g><g><title>[libc.so.6] (43 samples, 0.51%)</title><rect x="79.1512%" y="421" width="0.5140%" height="15" fill="rgb(232,159,9)" fg:x="6621" fg:w="43"/><text x="79.4012%" y="431.50"></text></g><g><title>[libc.so.6] (30 samples, 0.36%)</title><rect x="79.3066%" y="405" width="0.3586%" height="15" fill="rgb(210,39,32)" fg:x="6634" fg:w="30"/><text x="79.5566%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="79.6653%" y="485" width="0.0120%" height="15" fill="rgb(216,194,45)" fg:x="6664" fg:w="1"/><text x="79.9153%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="79.6772%" y="485" width="0.0120%" height="15" fill="rgb(218,18,35)" fg:x="6665" fg:w="1"/><text x="79.9272%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.80%)</title><rect x="78.9600%" y="501" width="0.8010%" height="15" fill="rgb(207,83,51)" fg:x="6605" fg:w="67"/><text x="79.2100%" y="511.50"></text></g><g><title>malloc (6 samples, 0.07%)</title><rect x="79.6892%" y="485" width="0.0717%" height="15" fill="rgb(225,63,43)" fg:x="6666" fg:w="6"/><text x="79.9392%" y="495.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="79.7370%" y="469" width="0.0239%" height="15" fill="rgb(207,57,36)" fg:x="6670" fg:w="2"/><text x="79.9870%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (77 samples, 0.92%)</title><rect x="78.8524%" y="517" width="0.9205%" height="15" fill="rgb(216,99,33)" fg:x="6596" fg:w="77"/><text x="79.1024%" y="527.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="79.7609%" y="501" width="0.0120%" height="15" fill="rgb(225,42,16)" fg:x="6672" fg:w="1"/><text x="80.0109%" y="511.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="79.7609%" y="485" width="0.0120%" height="15" fill="rgb(220,201,45)" fg:x="6672" fg:w="1"/><text x="80.0109%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (79 samples, 0.94%)</title><rect x="78.8524%" y="533" width="0.9444%" height="15" fill="rgb(225,33,4)" fg:x="6596" fg:w="79"/><text x="79.1024%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (2 samples, 0.02%)</title><rect x="79.7729%" y="517" width="0.0239%" height="15" fill="rgb(224,33,50)" fg:x="6673" fg:w="2"/><text x="80.0229%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (103 samples, 1.23%)</title><rect x="78.6133%" y="549" width="1.2313%" height="15" fill="rgb(246,198,51)" fg:x="6576" fg:w="103"/><text x="78.8633%" y="559.50"></text></g><g><title>core::ptr::write (4 samples, 0.05%)</title><rect x="79.7968%" y="533" width="0.0478%" height="15" fill="rgb(205,22,4)" fg:x="6675" fg:w="4"/><text x="80.0468%" y="543.50"></text></g><g><title>alloc::string::String::push (106 samples, 1.27%)</title><rect x="78.5894%" y="565" width="1.2672%" height="15" fill="rgb(206,3,8)" fg:x="6574" fg:w="106"/><text x="78.8394%" y="575.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (1 samples, 0.01%)</title><rect x="79.8446%" y="549" width="0.0120%" height="15" fill="rgb(251,23,15)" fg:x="6679" fg:w="1"/><text x="80.0946%" y="559.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="79.8446%" y="533" width="0.0120%" height="15" fill="rgb(252,88,28)" fg:x="6679" fg:w="1"/><text x="80.0946%" y="543.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="79.8565%" y="469" width="0.0239%" height="15" fill="rgb(212,127,14)" fg:x="6680" fg:w="2"/><text x="80.1065%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="79.8565%" y="453" width="0.0239%" height="15" fill="rgb(247,145,37)" fg:x="6680" fg:w="2"/><text x="80.1065%" y="463.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="79.8805%" y="469" width="0.0120%" height="15" fill="rgb(209,117,53)" fg:x="6682" fg:w="1"/><text x="80.1305%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (16 samples, 0.19%)</title><rect x="79.8565%" y="565" width="0.1913%" height="15" fill="rgb(212,90,42)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (16 samples, 0.19%)</title><rect x="79.8565%" y="549" width="0.1913%" height="15" fill="rgb(218,164,37)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (16 samples, 0.19%)</title><rect x="79.8565%" y="533" width="0.1913%" height="15" fill="rgb(246,65,34)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.19%)</title><rect x="79.8565%" y="517" width="0.1913%" height="15" fill="rgb(231,100,33)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.19%)</title><rect x="79.8565%" y="501" width="0.1913%" height="15" fill="rgb(228,126,14)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.19%)</title><rect x="79.8565%" y="485" width="0.1913%" height="15" fill="rgb(215,173,21)" fg:x="6680" fg:w="16"/><text x="80.1065%" y="495.50"></text></g><g><title>cfree (13 samples, 0.16%)</title><rect x="79.8924%" y="469" width="0.1554%" height="15" fill="rgb(210,6,40)" fg:x="6683" fg:w="13"/><text x="80.1424%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="79.9522%" y="453" width="0.0956%" height="15" fill="rgb(212,48,18)" fg:x="6688" fg:w="8"/><text x="80.2022%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (9 samples, 0.11%)</title><rect x="80.1076%" y="485" width="0.1076%" height="15" fill="rgb(230,214,11)" fg:x="6701" fg:w="9"/><text x="80.3576%" y="495.50"></text></g><g><title>yt_history::read_until (401 samples, 4.79%)</title><rect x="75.4812%" y="581" width="4.7938%" height="15" fill="rgb(254,105,39)" fg:x="6314" fg:w="401"/><text x="75.7312%" y="591.50">yt_his..</text></g><g><title>yt_history::iter_index (19 samples, 0.23%)</title><rect x="80.0478%" y="565" width="0.2271%" height="15" fill="rgb(245,158,5)" fg:x="6696" fg:w="19"/><text x="80.2978%" y="575.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (19 samples, 0.23%)</title><rect x="80.0478%" y="549" width="0.2271%" height="15" fill="rgb(249,208,11)" fg:x="6696" fg:w="19"/><text x="80.2978%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (19 samples, 0.23%)</title><rect x="80.0478%" y="533" width="0.2271%" height="15" fill="rgb(210,39,28)" fg:x="6696" fg:w="19"/><text x="80.2978%" y="543.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (14 samples, 0.17%)</title><rect x="80.1076%" y="517" width="0.1674%" height="15" fill="rgb(211,56,53)" fg:x="6701" fg:w="14"/><text x="80.3576%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="80.1076%" y="501" width="0.1674%" height="15" fill="rgb(226,201,30)" fg:x="6701" fg:w="14"/><text x="80.3576%" y="511.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="80.2152%" y="485" width="0.0598%" height="15" fill="rgb(239,101,34)" fg:x="6710" fg:w="5"/><text x="80.4652%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (2 samples, 0.02%)</title><rect x="80.2510%" y="469" width="0.0239%" height="15" fill="rgb(226,209,5)" fg:x="6713" fg:w="2"/><text x="80.5010%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (270 samples, 3.23%)</title><rect x="83.3234%" y="517" width="3.2277%" height="15" fill="rgb(250,105,47)" fg:x="6970" fg:w="270"/><text x="83.5734%" y="527.50">&lt;co..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.10%)</title><rect x="95.4931%" y="485" width="0.0956%" height="15" fill="rgb(230,72,3)" fg:x="7988" fg:w="8"/><text x="95.7431%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (47 samples, 0.56%)</title><rect x="95.5888%" y="485" width="0.5619%" height="15" fill="rgb(232,218,39)" fg:x="7996" fg:w="47"/><text x="95.8388%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (47 samples, 0.56%)</title><rect x="95.5888%" y="469" width="0.5619%" height="15" fill="rgb(248,166,6)" fg:x="7996" fg:w="47"/><text x="95.8388%" y="479.50"></text></g><g><title>core::cmp::min (37 samples, 0.44%)</title><rect x="95.7083%" y="453" width="0.4423%" height="15" fill="rgb(247,89,20)" fg:x="8006" fg:w="37"/><text x="95.9583%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (37 samples, 0.44%)</title><rect x="95.7083%" y="437" width="0.4423%" height="15" fill="rgb(248,130,54)" fg:x="8006" fg:w="37"/><text x="95.9583%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (17 samples, 0.20%)</title><rect x="96.1506%" y="485" width="0.2032%" height="15" fill="rgb(234,196,4)" fg:x="8043" fg:w="17"/><text x="96.4006%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (17 samples, 0.20%)</title><rect x="96.1506%" y="469" width="0.2032%" height="15" fill="rgb(250,143,31)" fg:x="8043" fg:w="17"/><text x="96.4006%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (8 samples, 0.10%)</title><rect x="96.2582%" y="453" width="0.0956%" height="15" fill="rgb(211,110,34)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="463.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (8 samples, 0.10%)</title><rect x="96.2582%" y="437" width="0.0956%" height="15" fill="rgb(215,124,48)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="447.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (8 samples, 0.10%)</title><rect x="96.2582%" y="421" width="0.0956%" height="15" fill="rgb(216,46,13)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="431.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (8 samples, 0.10%)</title><rect x="96.2582%" y="405" width="0.0956%" height="15" fill="rgb(205,184,25)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="415.50"></text></g><g><title>read (8 samples, 0.10%)</title><rect x="96.2582%" y="389" width="0.0956%" height="15" fill="rgb(228,1,10)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="399.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="96.2582%" y="373" width="0.0956%" height="15" fill="rgb(213,116,27)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="383.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="96.2582%" y="357" width="0.0956%" height="15" fill="rgb(241,95,50)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="367.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="96.2582%" y="341" width="0.0956%" height="15" fill="rgb(238,48,32)" fg:x="8052" fg:w="8"/><text x="96.5082%" y="351.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="96.2821%" y="325" width="0.0717%" height="15" fill="rgb(235,113,49)" fg:x="8054" fg:w="6"/><text x="96.5321%" y="335.50"></text></g><g><title>[unknown] (6 samples, 0.07%)</title><rect x="96.2821%" y="309" width="0.0717%" height="15" fill="rgb(205,127,43)" fg:x="8054" fg:w="6"/><text x="96.5321%" y="319.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.3299%" y="293" width="0.0239%" height="15" fill="rgb(250,162,2)" fg:x="8058" fg:w="2"/><text x="96.5799%" y="303.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.3299%" y="277" width="0.0239%" height="15" fill="rgb(220,13,41)" fg:x="8058" fg:w="2"/><text x="96.5799%" y="287.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.3299%" y="261" width="0.0239%" height="15" fill="rgb(249,221,25)" fg:x="8058" fg:w="2"/><text x="96.5799%" y="271.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="96.3299%" y="245" width="0.0239%" height="15" fill="rgb(215,208,19)" fg:x="8058" fg:w="2"/><text x="96.5799%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.3419%" y="229" width="0.0120%" height="15" fill="rgb(236,175,2)" fg:x="8059" fg:w="1"/><text x="96.5919%" y="239.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (10 samples, 0.12%)</title><rect x="96.3539%" y="485" width="0.1195%" height="15" fill="rgb(241,52,2)" fg:x="8060" fg:w="10"/><text x="96.6039%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::filled (38 samples, 0.45%)</title><rect x="96.4734%" y="485" width="0.4543%" height="15" fill="rgb(248,140,14)" fg:x="8070" fg:w="38"/><text x="96.7234%" y="495.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (9 samples, 0.11%)</title><rect x="96.9277%" y="485" width="0.1076%" height="15" fill="rgb(253,22,42)" fg:x="8108" fg:w="9"/><text x="97.1777%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,344 samples, 16.07%)</title><rect x="82.4387%" y="533" width="16.0669%" height="15" fill="rgb(234,61,47)" fg:x="6896" fg:w="1344"/><text x="82.6887%" y="543.50">&lt;core::iter::adapters::en..</text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,000 samples, 11.95%)</title><rect x="86.5511%" y="517" width="11.9546%" height="15" fill="rgb(208,226,15)" fg:x="7240" fg:w="1000"/><text x="86.8011%" y="527.50">&lt;std::io::Bytes&lt;R&gt;..</text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (492 samples, 5.88%)</title><rect x="92.6240%" y="501" width="5.8816%" height="15" fill="rgb(217,221,4)" fg:x="7748" fg:w="492"/><text x="92.8740%" y="511.50">&lt;std::i..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (123 samples, 1.47%)</title><rect x="97.0353%" y="485" width="1.4704%" height="15" fill="rgb(212,174,34)" fg:x="8117" fg:w="123"/><text x="97.2853%" y="495.50"></text></g><g><title>core::cmp::min (52 samples, 0.62%)</title><rect x="97.8840%" y="469" width="0.6216%" height="15" fill="rgb(253,83,4)" fg:x="8188" fg:w="52"/><text x="98.1340%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (52 samples, 0.62%)</title><rect x="97.8840%" y="453" width="0.6216%" height="15" fill="rgb(250,195,49)" fg:x="8188" fg:w="52"/><text x="98.1340%" y="463.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1,358 samples, 16.23%)</title><rect x="82.3311%" y="565" width="16.2343%" height="15" fill="rgb(241,192,25)" fg:x="6887" fg:w="1358"/><text x="82.5811%" y="575.50">&lt;&amp;mut I as core::iter::tr..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,358 samples, 16.23%)</title><rect x="82.3311%" y="549" width="16.2343%" height="15" fill="rgb(208,124,10)" fg:x="6887" fg:w="1358"/><text x="82.5811%" y="559.50">&lt;core::iter::adapters::pe..</text></g><g><title>core::option::Option&lt;T&gt;::take (5 samples, 0.06%)</title><rect x="98.5057%" y="533" width="0.0598%" height="15" fill="rgb(222,33,0)" fg:x="8240" fg:w="5"/><text x="98.7557%" y="543.50"></text></g><g><title>core::mem::replace (5 samples, 0.06%)</title><rect x="98.5057%" y="517" width="0.0598%" height="15" fill="rgb(234,209,28)" fg:x="8240" fg:w="5"/><text x="98.7557%" y="527.50"></text></g><g><title>core::ptr::read (5 samples, 0.06%)</title><rect x="98.5057%" y="501" width="0.0598%" height="15" fill="rgb(224,11,23)" fg:x="8240" fg:w="5"/><text x="98.7557%" y="511.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (5 samples, 0.06%)</title><rect x="98.5057%" y="485" width="0.0598%" height="15" fill="rgb(232,99,1)" fg:x="8240" fg:w="5"/><text x="98.7557%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (64 samples, 0.77%)</title><rect x="98.5655%" y="565" width="0.7651%" height="15" fill="rgb(237,95,45)" fg:x="8245" fg:w="64"/><text x="98.8155%" y="575.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::nth (23 samples, 0.27%)</title><rect x="99.3305%" y="565" width="0.2750%" height="15" fill="rgb(208,109,11)" fg:x="8309" fg:w="23"/><text x="99.5805%" y="575.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::nth (23 samples, 0.27%)</title><rect x="99.3305%" y="549" width="0.2750%" height="15" fill="rgb(216,190,48)" fg:x="8309" fg:w="23"/><text x="99.5805%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (23 samples, 0.27%)</title><rect x="99.3305%" y="533" width="0.2750%" height="15" fill="rgb(251,171,36)" fg:x="8309" fg:w="23"/><text x="99.5805%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="99.6055%" y="565" width="0.0239%" height="15" fill="rgb(230,62,22)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="99.6055%" y="549" width="0.0239%" height="15" fill="rgb(225,114,35)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="99.6055%" y="533" width="0.0239%" height="15" fill="rgb(215,118,42)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="99.6055%" y="517" width="0.0239%" height="15" fill="rgb(243,119,21)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="99.6055%" y="501" width="0.0239%" height="15" fill="rgb(252,177,53)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="99.6055%" y="485" width="0.0239%" height="15" fill="rgb(237,209,29)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="495.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="99.6055%" y="469" width="0.0239%" height="15" fill="rgb(212,65,23)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="479.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="99.6055%" y="453" width="0.0239%" height="15" fill="rgb(230,222,46)" fg:x="8332" fg:w="2"/><text x="99.8555%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (16 samples, 0.19%)</title><rect x="99.7131%" y="485" width="0.1913%" height="15" fill="rgb(215,135,32)" fg:x="8341" fg:w="16"/><text x="99.9631%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (1 samples, 0.01%)</title><rect x="99.9402%" y="453" width="0.0120%" height="15" fill="rgb(246,101,22)" fg:x="8360" fg:w="1"/><text x="100.1902%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (1 samples, 0.01%)</title><rect x="99.9402%" y="437" width="0.0120%" height="15" fill="rgb(206,107,13)" fg:x="8360" fg:w="1"/><text x="100.1902%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="99.9522%" y="453" width="0.0120%" height="15" fill="rgb(250,100,44)" fg:x="8361" fg:w="1"/><text x="100.2022%" y="463.50"></text></g><g><title>std::panic::catch_unwind (8,342 samples, 99.73%)</title><rect x="0.2630%" y="757" width="99.7250%" height="15" fill="rgb(231,147,38)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="767.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,342 samples, 99.73%)</title><rect x="0.2630%" y="741" width="99.7250%" height="15" fill="rgb(229,8,40)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="751.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,342 samples, 99.73%)</title><rect x="0.2630%" y="725" width="99.7250%" height="15" fill="rgb(221,135,30)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="735.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8,342 samples, 99.73%)</title><rect x="0.2630%" y="709" width="99.7250%" height="15" fill="rgb(249,193,18)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="719.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (8,342 samples, 99.73%)</title><rect x="0.2630%" y="693" width="99.7250%" height="15" fill="rgb(209,133,39)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="703.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,342 samples, 99.73%)</title><rect x="0.2630%" y="677" width="99.7250%" height="15" fill="rgb(232,100,14)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="687.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (8,342 samples, 99.73%)</title><rect x="0.2630%" y="661" width="99.7250%" height="15" fill="rgb(224,185,1)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="671.50">core::ops::function::FnOnce::call_once</text></g><g><title>yt_history::main (8,342 samples, 99.73%)</title><rect x="0.2630%" y="645" width="99.7250%" height="15" fill="rgb(223,139,8)" fg:x="22" fg:w="8342"/><text x="0.5130%" y="655.50">yt_history::main</text></g><g><title>yt_history::load_models (8,337 samples, 99.67%)</title><rect x="0.3228%" y="629" width="99.6653%" height="15" fill="rgb(232,213,38)" fg:x="27" fg:w="8337"/><text x="0.5728%" y="639.50">yt_history::load_models</text></g><g><title>yt_history::parse (8,337 samples, 99.67%)</title><rect x="0.3228%" y="613" width="99.6653%" height="15" fill="rgb(207,94,22)" fg:x="27" fg:w="8337"/><text x="0.5728%" y="623.50">yt_history::parse</text></g><g><title>yt_history::read_data_row (2,154 samples, 25.75%)</title><rect x="74.2379%" y="597" width="25.7501%" height="15" fill="rgb(219,183,54)" fg:x="6210" fg:w="2154"/><text x="74.4879%" y="607.50">yt_history::read_data_row</text></g><g><title>yt_history::skip_to (1,649 samples, 19.71%)</title><rect x="80.2750%" y="581" width="19.7131%" height="15" fill="rgb(216,185,54)" fg:x="6715" fg:w="1649"/><text x="80.5250%" y="591.50">yt_history::skip_to</text></g><g><title>yt_history::iter_index (30 samples, 0.36%)</title><rect x="99.6294%" y="565" width="0.3586%" height="15" fill="rgb(254,217,39)" fg:x="8334" fg:w="30"/><text x="99.8794%" y="575.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (30 samples, 0.36%)</title><rect x="99.6294%" y="549" width="0.3586%" height="15" fill="rgb(240,178,23)" fg:x="8334" fg:w="30"/><text x="99.8794%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (30 samples, 0.36%)</title><rect x="99.6294%" y="533" width="0.3586%" height="15" fill="rgb(218,11,47)" fg:x="8334" fg:w="30"/><text x="99.8794%" y="543.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (23 samples, 0.27%)</title><rect x="99.7131%" y="517" width="0.2750%" height="15" fill="rgb(218,51,51)" fg:x="8341" fg:w="23"/><text x="99.9631%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.27%)</title><rect x="99.7131%" y="501" width="0.2750%" height="15" fill="rgb(238,126,27)" fg:x="8341" fg:w="23"/><text x="99.9631%" y="511.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="99.9044%" y="485" width="0.0837%" height="15" fill="rgb(249,202,22)" fg:x="8357" fg:w="7"/><text x="100.1544%" y="495.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (4 samples, 0.05%)</title><rect x="99.9402%" y="469" width="0.0478%" height="15" fill="rgb(254,195,49)" fg:x="8360" fg:w="4"/><text x="100.1902%" y="479.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (2 samples, 0.02%)</title><rect x="99.9641%" y="453" width="0.0239%" height="15" fill="rgb(208,123,14)" fg:x="8362" fg:w="2"/><text x="100.2141%" y="463.50"></text></g><g><title>core::cmp::min (1 samples, 0.01%)</title><rect x="99.9761%" y="437" width="0.0120%" height="15" fill="rgb(224,200,8)" fg:x="8363" fg:w="1"/><text x="100.2261%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="99.9761%" y="421" width="0.0120%" height="15" fill="rgb(217,61,36)" fg:x="8363" fg:w="1"/><text x="100.2261%" y="431.50"></text></g><g><title>all (8,365 samples, 100%)</title><rect x="0.0000%" y="933" width="100.0000%" height="15" fill="rgb(206,35,45)" fg:x="0" fg:w="8365"/><text x="0.2500%" y="943.50"></text></g><g><title>yt-history (8,365 samples, 100.00%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(217,65,33)" fg:x="0" fg:w="8365"/><text x="0.2500%" y="927.50">yt-history</text></g><g><title>_start (8,343 samples, 99.74%)</title><rect x="0.2630%" y="901" width="99.7370%" height="15" fill="rgb(222,158,48)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="911.50">_start</text></g><g><title>__libc_start_main (8,343 samples, 99.74%)</title><rect x="0.2630%" y="885" width="99.7370%" height="15" fill="rgb(254,2,54)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="895.50">__libc_start_main</text></g><g><title>[libc.so.6] (8,343 samples, 99.74%)</title><rect x="0.2630%" y="869" width="99.7370%" height="15" fill="rgb(250,143,38)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="879.50">[libc.so.6]</text></g><g><title>main (8,343 samples, 99.74%)</title><rect x="0.2630%" y="853" width="99.7370%" height="15" fill="rgb(248,25,0)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="863.50">main</text></g><g><title>std::rt::lang_start_internal (8,343 samples, 99.74%)</title><rect x="0.2630%" y="837" width="99.7370%" height="15" fill="rgb(206,152,27)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="847.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (8,343 samples, 99.74%)</title><rect x="0.2630%" y="821" width="99.7370%" height="15" fill="rgb(240,77,30)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="831.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,343 samples, 99.74%)</title><rect x="0.2630%" y="805" width="99.7370%" height="15" fill="rgb(231,5,3)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="815.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,343 samples, 99.74%)</title><rect x="0.2630%" y="789" width="99.7370%" height="15" fill="rgb(207,226,32)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="799.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (8,343 samples, 99.74%)</title><rect x="0.2630%" y="773" width="99.7370%" height="15" fill="rgb(222,207,47)" fg:x="22" fg:w="8343"/><text x="0.5130%" y="783.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::rt::init (1 samples, 0.01%)</title><rect x="99.9880%" y="757" width="0.0120%" height="15" fill="rgb(229,115,45)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="767.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.01%)</title><rect x="99.9880%" y="741" width="0.0120%" height="15" fill="rgb(224,191,6)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="751.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.01%)</title><rect x="99.9880%" y="725" width="0.0120%" height="15" fill="rgb(230,227,24)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="735.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.01%)</title><rect x="99.9880%" y="709" width="0.0120%" height="15" fill="rgb(228,80,19)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="719.50"></text></g><g><title>pthread_getattr_np (1 samples, 0.01%)</title><rect x="99.9880%" y="693" width="0.0120%" height="15" fill="rgb(247,229,0)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="703.50"></text></g><g><title>fopen (1 samples, 0.01%)</title><rect x="99.9880%" y="677" width="0.0120%" height="15" fill="rgb(237,194,15)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="687.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="99.9880%" y="661" width="0.0120%" height="15" fill="rgb(219,203,20)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="671.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.9880%" y="645" width="0.0120%" height="15" fill="rgb(234,128,8)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="655.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.9880%" y="629" width="0.0120%" height="15" fill="rgb(248,202,8)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="639.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="99.9880%" y="613" width="0.0120%" height="15" fill="rgb(206,104,37)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="623.50"></text></g><g><title>__default_morecore (1 samples, 0.01%)</title><rect x="99.9880%" y="597" width="0.0120%" height="15" fill="rgb(223,8,27)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="607.50"></text></g><g><title>__sbrk (1 samples, 0.01%)</title><rect x="99.9880%" y="581" width="0.0120%" height="15" fill="rgb(216,217,28)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="591.50"></text></g><g><title>brk (1 samples, 0.01%)</title><rect x="99.9880%" y="565" width="0.0120%" height="15" fill="rgb(249,199,1)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="575.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9880%" y="549" width="0.0120%" height="15" fill="rgb(240,85,17)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="559.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9880%" y="533" width="0.0120%" height="15" fill="rgb(206,108,45)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="543.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9880%" y="517" width="0.0120%" height="15" fill="rgb(245,210,41)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="527.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="99.9880%" y="501" width="0.0120%" height="15" fill="rgb(206,13,37)" fg:x="8364" fg:w="1"/><text x="100.2380%" y="511.50"></text></g></svg></svg>