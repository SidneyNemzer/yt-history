<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="966" onload="init(evt)" viewBox="0 0 1200 966" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="966" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="949.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="949.00"> </text><svg id="frames" x="10" width="1180" total_samples="8358"><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="0.0000%" y="869" width="0.0120%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0000%" y="853" width="0.0120%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="863.50"></text></g><g><title>[[stack]] (2 samples, 0.02%)</title><rect x="0.0000%" y="885" width="0.0239%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="2"/><text x="0.2500%" y="895.50"></text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (1 samples, 0.01%)</title><rect x="0.0120%" y="869" width="0.0120%" height="15" fill="rgb(248,212,6)" fg:x="1" fg:w="1"/><text x="0.2620%" y="879.50"></text></g><g><title>core::unicode::unicode_data::skip_search (1 samples, 0.01%)</title><rect x="0.0120%" y="853" width="0.0120%" height="15" fill="rgb(208,68,35)" fg:x="1" fg:w="1"/><text x="0.2620%" y="863.50"></text></g><g><title>core::unicode::unicode_data::decode_length (1 samples, 0.01%)</title><rect x="0.0120%" y="837" width="0.0120%" height="15" fill="rgb(232,128,0)" fg:x="1" fg:w="1"/><text x="0.2620%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0120%" y="821" width="0.0120%" height="15" fill="rgb(207,160,47)" fg:x="1" fg:w="1"/><text x="0.2620%" y="831.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.02%)</title><rect x="0.1675%" y="805" width="0.0239%" height="15" fill="rgb(228,23,34)" fg:x="14" fg:w="2"/><text x="0.4175%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (2 samples, 0.02%)</title><rect x="0.1675%" y="789" width="0.0239%" height="15" fill="rgb(218,30,26)" fg:x="14" fg:w="2"/><text x="0.4175%" y="799.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="0.1914%" y="805" width="0.0120%" height="15" fill="rgb(220,122,19)" fg:x="16" fg:w="1"/><text x="0.4414%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.1914%" y="789" width="0.0120%" height="15" fill="rgb(250,228,42)" fg:x="16" fg:w="1"/><text x="0.4414%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (7 samples, 0.08%)</title><rect x="0.1316%" y="821" width="0.0838%" height="15" fill="rgb(240,193,28)" fg:x="11" fg:w="7"/><text x="0.3816%" y="831.50"></text></g><g><title>_dl_catch_exception (1 samples, 0.01%)</title><rect x="0.2034%" y="805" width="0.0120%" height="15" fill="rgb(216,20,37)" fg:x="17" fg:w="1"/><text x="0.4534%" y="815.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.2034%" y="789" width="0.0120%" height="15" fill="rgb(206,188,39)" fg:x="17" fg:w="1"/><text x="0.4534%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.2034%" y="773" width="0.0120%" height="15" fill="rgb(217,207,13)" fg:x="17" fg:w="1"/><text x="0.4534%" y="783.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.2034%" y="757" width="0.0120%" height="15" fill="rgb(231,73,38)" fg:x="17" fg:w="1"/><text x="0.4534%" y="767.50"></text></g><g><title>[ld-linux-x86-64.so.2] (1 samples, 0.01%)</title><rect x="0.2034%" y="741" width="0.0120%" height="15" fill="rgb(225,20,46)" fg:x="17" fg:w="1"/><text x="0.4534%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2034%" y="725" width="0.0120%" height="15" fill="rgb(210,31,41)" fg:x="17" fg:w="1"/><text x="0.4534%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2034%" y="709" width="0.0120%" height="15" fill="rgb(221,200,47)" fg:x="17" fg:w="1"/><text x="0.4534%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2034%" y="693" width="0.0120%" height="15" fill="rgb(226,26,5)" fg:x="17" fg:w="1"/><text x="0.4534%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2034%" y="677" width="0.0120%" height="15" fill="rgb(249,33,26)" fg:x="17" fg:w="1"/><text x="0.4534%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2034%" y="661" width="0.0120%" height="15" fill="rgb(235,183,28)" fg:x="17" fg:w="1"/><text x="0.4534%" y="671.50"></text></g><g><title>[ld-linux-x86-64.so.2] (13 samples, 0.16%)</title><rect x="0.0718%" y="837" width="0.1555%" height="15" fill="rgb(221,5,38)" fg:x="6" fg:w="13"/><text x="0.3218%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2154%" y="821" width="0.0120%" height="15" fill="rgb(247,18,42)" fg:x="18" fg:w="1"/><text x="0.4654%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2154%" y="805" width="0.0120%" height="15" fill="rgb(241,131,45)" fg:x="18" fg:w="1"/><text x="0.4654%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2154%" y="789" width="0.0120%" height="15" fill="rgb(249,31,29)" fg:x="18" fg:w="1"/><text x="0.4654%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (17 samples, 0.20%)</title><rect x="0.0479%" y="853" width="0.2034%" height="15" fill="rgb(225,111,53)" fg:x="4" fg:w="17"/><text x="0.2979%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2273%" y="837" width="0.0239%" height="15" fill="rgb(238,160,17)" fg:x="19" fg:w="2"/><text x="0.4773%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2393%" y="821" width="0.0120%" height="15" fill="rgb(214,148,48)" fg:x="20" fg:w="1"/><text x="0.4893%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2393%" y="805" width="0.0120%" height="15" fill="rgb(232,36,49)" fg:x="20" fg:w="1"/><text x="0.4893%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2393%" y="789" width="0.0120%" height="15" fill="rgb(209,103,24)" fg:x="20" fg:w="1"/><text x="0.4893%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (22 samples, 0.26%)</title><rect x="0.0239%" y="869" width="0.2632%" height="15" fill="rgb(229,88,8)" fg:x="2" fg:w="22"/><text x="0.2739%" y="879.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="0.2513%" y="853" width="0.0359%" height="15" fill="rgb(213,181,19)" fg:x="21" fg:w="3"/><text x="0.5013%" y="863.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2632%" y="837" width="0.0239%" height="15" fill="rgb(254,191,54)" fg:x="22" fg:w="2"/><text x="0.5132%" y="847.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2632%" y="821" width="0.0239%" height="15" fill="rgb(241,83,37)" fg:x="22" fg:w="2"/><text x="0.5132%" y="831.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2632%" y="805" width="0.0239%" height="15" fill="rgb(233,36,39)" fg:x="22" fg:w="2"/><text x="0.5132%" y="815.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2632%" y="789" width="0.0239%" height="15" fill="rgb(226,3,54)" fg:x="22" fg:w="2"/><text x="0.5132%" y="799.50"></text></g><g><title>[ld-linux-x86-64.so.2] (24 samples, 0.29%)</title><rect x="0.0239%" y="885" width="0.2872%" height="15" fill="rgb(245,192,40)" fg:x="2" fg:w="24"/><text x="0.2739%" y="895.50"></text></g><g><title>[unknown] (2 samples, 0.02%)</title><rect x="0.2872%" y="869" width="0.0239%" height="15" fill="rgb(238,167,29)" fg:x="24" fg:w="2"/><text x="0.5372%" y="879.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="853" width="0.0120%" height="15" fill="rgb(232,182,51)" fg:x="25" fg:w="1"/><text x="0.5491%" y="863.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="837" width="0.0120%" height="15" fill="rgb(231,60,39)" fg:x="25" fg:w="1"/><text x="0.5491%" y="847.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="821" width="0.0120%" height="15" fill="rgb(208,69,12)" fg:x="25" fg:w="1"/><text x="0.5491%" y="831.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="805" width="0.0120%" height="15" fill="rgb(235,93,37)" fg:x="25" fg:w="1"/><text x="0.5491%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="789" width="0.0120%" height="15" fill="rgb(213,116,39)" fg:x="25" fg:w="1"/><text x="0.5491%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="773" width="0.0120%" height="15" fill="rgb(222,207,29)" fg:x="25" fg:w="1"/><text x="0.5491%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.2991%" y="757" width="0.0120%" height="15" fill="rgb(206,96,30)" fg:x="25" fg:w="1"/><text x="0.5491%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="805" width="0.0120%" height="15" fill="rgb(218,138,4)" fg:x="26" fg:w="1"/><text x="0.5611%" y="815.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="789" width="0.0120%" height="15" fill="rgb(250,191,14)" fg:x="26" fg:w="1"/><text x="0.5611%" y="799.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="773" width="0.0120%" height="15" fill="rgb(239,60,40)" fg:x="26" fg:w="1"/><text x="0.5611%" y="783.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="757" width="0.0120%" height="15" fill="rgb(206,27,48)" fg:x="26" fg:w="1"/><text x="0.5611%" y="767.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="741" width="0.0120%" height="15" fill="rgb(225,35,8)" fg:x="26" fg:w="1"/><text x="0.5611%" y="751.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="725" width="0.0120%" height="15" fill="rgb(250,213,24)" fg:x="26" fg:w="1"/><text x="0.5611%" y="735.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="709" width="0.0120%" height="15" fill="rgb(247,123,22)" fg:x="26" fg:w="1"/><text x="0.5611%" y="719.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="693" width="0.0120%" height="15" fill="rgb(231,138,38)" fg:x="26" fg:w="1"/><text x="0.5611%" y="703.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="677" width="0.0120%" height="15" fill="rgb(231,145,46)" fg:x="26" fg:w="1"/><text x="0.5611%" y="687.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="661" width="0.0120%" height="15" fill="rgb(251,118,11)" fg:x="26" fg:w="1"/><text x="0.5611%" y="671.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.3111%" y="645" width="0.0120%" height="15" fill="rgb(217,147,25)" fg:x="26" fg:w="1"/><text x="0.5611%" y="655.50"></text></g><g><title>cfree (3 samples, 0.04%)</title><rect x="0.3230%" y="613" width="0.0359%" height="15" fill="rgb(247,81,37)" fg:x="27" fg:w="3"/><text x="0.5730%" y="623.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.3230%" y="597" width="0.0359%" height="15" fill="rgb(209,12,38)" fg:x="27" fg:w="3"/><text x="0.5730%" y="607.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.3230%" y="581" width="0.0359%" height="15" fill="rgb(227,1,9)" fg:x="27" fg:w="3"/><text x="0.5730%" y="591.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="0.3470%" y="565" width="0.0120%" height="15" fill="rgb(248,47,43)" fg:x="29" fg:w="1"/><text x="0.5970%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Channel&gt;&gt; (1 samples, 0.01%)</title><rect x="0.3589%" y="501" width="0.0120%" height="15" fill="rgb(221,10,30)" fg:x="30" fg:w="1"/><text x="0.6089%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.3589%" y="485" width="0.0120%" height="15" fill="rgb(210,229,1)" fg:x="30" fg:w="1"/><text x="0.6089%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Channel&gt; (1 samples, 0.01%)</title><rect x="0.3589%" y="469" width="0.0120%" height="15" fill="rgb(222,148,37)" fg:x="30" fg:w="1"/><text x="0.6089%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="0.3589%" y="453" width="0.0120%" height="15" fill="rgb(234,67,33)" fg:x="30" fg:w="1"/><text x="0.6089%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.3589%" y="437" width="0.0120%" height="15" fill="rgb(247,98,35)" fg:x="30" fg:w="1"/><text x="0.6089%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.3589%" y="421" width="0.0120%" height="15" fill="rgb(247,138,52)" fg:x="30" fg:w="1"/><text x="0.6089%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.3589%" y="405" width="0.0120%" height="15" fill="rgb(213,79,30)" fg:x="30" fg:w="1"/><text x="0.6089%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="0.3589%" y="389" width="0.0120%" height="15" fill="rgb(246,177,23)" fg:x="30" fg:w="1"/><text x="0.6089%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Models&gt; (2 samples, 0.02%)</title><rect x="0.3589%" y="613" width="0.0239%" height="15" fill="rgb(230,62,27)" fg:x="30" fg:w="2"/><text x="0.6089%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="0.3589%" y="597" width="0.0239%" height="15" fill="rgb(216,154,8)" fg:x="30" fg:w="2"/><text x="0.6089%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.3589%" y="581" width="0.0239%" height="15" fill="rgb(244,35,45)" fg:x="30" fg:w="2"/><text x="0.6089%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;[alloc::rc::Rc&lt;yt_history::model::Video&gt;]&gt; (2 samples, 0.02%)</title><rect x="0.3589%" y="565" width="0.0239%" height="15" fill="rgb(251,115,12)" fg:x="30" fg:w="2"/><text x="0.6089%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (2 samples, 0.02%)</title><rect x="0.3589%" y="549" width="0.0239%" height="15" fill="rgb(240,54,50)" fg:x="30" fg:w="2"/><text x="0.6089%" y="559.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="0.3589%" y="533" width="0.0239%" height="15" fill="rgb(233,84,52)" fg:x="30" fg:w="2"/><text x="0.6089%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Video&gt; (2 samples, 0.02%)</title><rect x="0.3589%" y="517" width="0.0239%" height="15" fill="rgb(207,117,47)" fg:x="30" fg:w="2"/><text x="0.6089%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="0.3709%" y="501" width="0.0120%" height="15" fill="rgb(249,43,39)" fg:x="31" fg:w="1"/><text x="0.6209%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.3709%" y="485" width="0.0120%" height="15" fill="rgb(209,38,44)" fg:x="31" fg:w="1"/><text x="0.6209%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="0.3709%" y="469" width="0.0120%" height="15" fill="rgb(236,212,23)" fg:x="31" fg:w="1"/><text x="0.6209%" y="479.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.3709%" y="453" width="0.0120%" height="15" fill="rgb(242,79,21)" fg:x="31" fg:w="1"/><text x="0.6209%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="0.3709%" y="437" width="0.0120%" height="15" fill="rgb(211,96,35)" fg:x="31" fg:w="1"/><text x="0.6209%" y="447.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="0.3709%" y="421" width="0.0120%" height="15" fill="rgb(253,215,40)" fg:x="31" fg:w="1"/><text x="0.6209%" y="431.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="0.3709%" y="405" width="0.0120%" height="15" fill="rgb(211,81,21)" fg:x="31" fg:w="1"/><text x="0.6209%" y="415.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="0.3709%" y="389" width="0.0120%" height="15" fill="rgb(208,190,38)" fg:x="31" fg:w="1"/><text x="0.6209%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="0.4547%" y="389" width="0.0120%" height="15" fill="rgb(235,213,38)" fg:x="38" fg:w="1"/><text x="0.7047%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="0.4547%" y="485" width="0.0598%" height="15" fill="rgb(237,122,38)" fg:x="38" fg:w="5"/><text x="0.7047%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="0.4547%" y="469" width="0.0598%" height="15" fill="rgb(244,218,35)" fg:x="38" fg:w="5"/><text x="0.7047%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="0.4547%" y="453" width="0.0598%" height="15" fill="rgb(240,68,47)" fg:x="38" fg:w="5"/><text x="0.7047%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="0.4547%" y="437" width="0.0598%" height="15" fill="rgb(210,16,53)" fg:x="38" fg:w="5"/><text x="0.7047%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="0.4547%" y="421" width="0.0598%" height="15" fill="rgb(235,124,12)" fg:x="38" fg:w="5"/><text x="0.7047%" y="431.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="0.4547%" y="405" width="0.0598%" height="15" fill="rgb(224,169,11)" fg:x="38" fg:w="5"/><text x="0.7047%" y="415.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="0.4666%" y="389" width="0.0479%" height="15" fill="rgb(250,166,2)" fg:x="39" fg:w="4"/><text x="0.7166%" y="399.50"></text></g><g><title>&lt;yt_history::DataRow as core::clone::Clone&gt;::clone (12 samples, 0.14%)</title><rect x="0.4188%" y="581" width="0.1436%" height="15" fill="rgb(242,216,29)" fg:x="35" fg:w="12"/><text x="0.6688%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="0.4547%" y="565" width="0.1077%" height="15" fill="rgb(230,116,27)" fg:x="38" fg:w="9"/><text x="0.7047%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.11%)</title><rect x="0.4547%" y="549" width="0.1077%" height="15" fill="rgb(228,99,48)" fg:x="38" fg:w="9"/><text x="0.7047%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (9 samples, 0.11%)</title><rect x="0.4547%" y="533" width="0.1077%" height="15" fill="rgb(253,11,6)" fg:x="38" fg:w="9"/><text x="0.7047%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (9 samples, 0.11%)</title><rect x="0.4547%" y="517" width="0.1077%" height="15" fill="rgb(247,143,39)" fg:x="38" fg:w="9"/><text x="0.7047%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (9 samples, 0.11%)</title><rect x="0.4547%" y="501" width="0.1077%" height="15" fill="rgb(236,97,10)" fg:x="38" fg:w="9"/><text x="0.7047%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (4 samples, 0.05%)</title><rect x="0.5145%" y="485" width="0.0479%" height="15" fill="rgb(233,208,19)" fg:x="43" fg:w="4"/><text x="0.7645%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="0.5145%" y="469" width="0.0479%" height="15" fill="rgb(216,164,2)" fg:x="43" fg:w="4"/><text x="0.7645%" y="479.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="0.5264%" y="453" width="0.0359%" height="15" fill="rgb(220,129,5)" fg:x="44" fg:w="3"/><text x="0.7764%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="0.5743%" y="389" width="0.0120%" height="15" fill="rgb(242,17,10)" fg:x="48" fg:w="1"/><text x="0.8243%" y="399.50"></text></g><g><title>alloc::string::String::with_capacity (4 samples, 0.05%)</title><rect x="0.5743%" y="517" width="0.0479%" height="15" fill="rgb(242,107,0)" fg:x="48" fg:w="4"/><text x="0.8243%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (4 samples, 0.05%)</title><rect x="0.5743%" y="501" width="0.0479%" height="15" fill="rgb(251,28,31)" fg:x="48" fg:w="4"/><text x="0.8243%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="0.5743%" y="485" width="0.0479%" height="15" fill="rgb(233,223,10)" fg:x="48" fg:w="4"/><text x="0.8243%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (4 samples, 0.05%)</title><rect x="0.5743%" y="469" width="0.0479%" height="15" fill="rgb(215,21,27)" fg:x="48" fg:w="4"/><text x="0.8243%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (4 samples, 0.05%)</title><rect x="0.5743%" y="453" width="0.0479%" height="15" fill="rgb(232,23,21)" fg:x="48" fg:w="4"/><text x="0.8243%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (4 samples, 0.05%)</title><rect x="0.5743%" y="437" width="0.0479%" height="15" fill="rgb(244,5,23)" fg:x="48" fg:w="4"/><text x="0.8243%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (4 samples, 0.05%)</title><rect x="0.5743%" y="421" width="0.0479%" height="15" fill="rgb(226,81,46)" fg:x="48" fg:w="4"/><text x="0.8243%" y="431.50"></text></g><g><title>alloc::alloc::alloc (4 samples, 0.05%)</title><rect x="0.5743%" y="405" width="0.0479%" height="15" fill="rgb(247,70,30)" fg:x="48" fg:w="4"/><text x="0.8243%" y="415.50"></text></g><g><title>malloc (3 samples, 0.04%)</title><rect x="0.5863%" y="389" width="0.0359%" height="15" fill="rgb(212,68,19)" fg:x="49" fg:w="3"/><text x="0.8363%" y="399.50"></text></g><g><title>alloc::fmt::format::format_inner (1 samples, 0.01%)</title><rect x="0.6222%" y="453" width="0.0120%" height="15" fill="rgb(240,187,13)" fg:x="52" fg:w="1"/><text x="0.8722%" y="463.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (2 samples, 0.02%)</title><rect x="0.6222%" y="517" width="0.0239%" height="15" fill="rgb(223,113,26)" fg:x="52" fg:w="2"/><text x="0.8722%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="0.6222%" y="501" width="0.0239%" height="15" fill="rgb(206,192,2)" fg:x="52" fg:w="2"/><text x="0.8722%" y="511.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="0.6222%" y="485" width="0.0239%" height="15" fill="rgb(241,108,4)" fg:x="52" fg:w="2"/><text x="0.8722%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="0.6222%" y="469" width="0.0239%" height="15" fill="rgb(247,173,49)" fg:x="52" fg:w="2"/><text x="0.8722%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="0.6341%" y="453" width="0.0120%" height="15" fill="rgb(224,114,35)" fg:x="53" fg:w="1"/><text x="0.8841%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.6341%" y="437" width="0.0120%" height="15" fill="rgb(245,159,27)" fg:x="53" fg:w="1"/><text x="0.8841%" y="447.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="0.6341%" y="421" width="0.0120%" height="15" fill="rgb(245,172,44)" fg:x="53" fg:w="1"/><text x="0.8841%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="0.6341%" y="405" width="0.0120%" height="15" fill="rgb(236,23,11)" fg:x="53" fg:w="1"/><text x="0.8841%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="0.6341%" y="389" width="0.0120%" height="15" fill="rgb(205,117,38)" fg:x="53" fg:w="1"/><text x="0.8841%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="0.6820%" y="485" width="0.0120%" height="15" fill="rgb(237,72,25)" fg:x="57" fg:w="1"/><text x="0.9320%" y="495.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.6939%" y="485" width="0.0120%" height="15" fill="rgb(244,70,9)" fg:x="58" fg:w="1"/><text x="0.9439%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="0.6939%" y="469" width="0.0120%" height="15" fill="rgb(217,125,39)" fg:x="58" fg:w="1"/><text x="0.9439%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="0.8854%" y="405" width="0.0120%" height="15" fill="rgb(235,36,10)" fg:x="74" fg:w="1"/><text x="1.1354%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="0.8973%" y="389" width="0.0120%" height="15" fill="rgb(251,123,47)" fg:x="75" fg:w="1"/><text x="1.1473%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="0.8973%" y="373" width="0.0120%" height="15" fill="rgb(221,13,13)" fg:x="75" fg:w="1"/><text x="1.1473%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="0.9093%" y="389" width="0.0359%" height="15" fill="rgb(238,131,9)" fg:x="76" fg:w="3"/><text x="1.1593%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::ops::deref::Deref&gt;::deref (3 samples, 0.04%)</title><rect x="0.9093%" y="373" width="0.0359%" height="15" fill="rgb(211,50,8)" fg:x="76" fg:w="3"/><text x="1.1593%" y="383.50"></text></g><g><title>&lt;core::char::EscapeDefault as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="1.2563%" y="357" width="0.0598%" height="15" fill="rgb(245,182,24)" fg:x="105" fg:w="5"/><text x="1.5063%" y="367.50"></text></g><g><title>&lt;core::char::EscapeUnicode as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1.3041%" y="341" width="0.0120%" height="15" fill="rgb(242,14,37)" fg:x="109" fg:w="1"/><text x="1.5541%" y="351.50"></text></g><g><title>&lt;core::char::EscapeDebug as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="1.2563%" y="373" width="0.0718%" height="15" fill="rgb(246,228,12)" fg:x="105" fg:w="6"/><text x="1.5063%" y="383.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="1.3161%" y="357" width="0.0120%" height="15" fill="rgb(213,55,15)" fg:x="110" fg:w="1"/><text x="1.5661%" y="367.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="1.4956%" y="325" width="0.0479%" height="15" fill="rgb(209,9,3)" fg:x="125" fg:w="4"/><text x="1.7456%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="1.5195%" y="309" width="0.0239%" height="15" fill="rgb(230,59,30)" fg:x="127" fg:w="2"/><text x="1.7695%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="1.5195%" y="293" width="0.0239%" height="15" fill="rgb(209,121,21)" fg:x="127" fg:w="2"/><text x="1.7695%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="1.5195%" y="277" width="0.0239%" height="15" fill="rgb(220,109,13)" fg:x="127" fg:w="2"/><text x="1.7695%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="1.5195%" y="261" width="0.0239%" height="15" fill="rgb(232,18,1)" fg:x="127" fg:w="2"/><text x="1.7695%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="1.5195%" y="245" width="0.0239%" height="15" fill="rgb(215,41,42)" fg:x="127" fg:w="2"/><text x="1.7695%" y="255.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="1.6033%" y="277" width="0.0120%" height="15" fill="rgb(224,123,36)" fg:x="134" fg:w="1"/><text x="1.8533%" y="287.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="1.6033%" y="261" width="0.0120%" height="15" fill="rgb(240,125,3)" fg:x="134" fg:w="1"/><text x="1.8533%" y="271.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="1.5434%" y="325" width="0.0838%" height="15" fill="rgb(205,98,50)" fg:x="129" fg:w="7"/><text x="1.7934%" y="335.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (7 samples, 0.08%)</title><rect x="1.5434%" y="309" width="0.0838%" height="15" fill="rgb(205,185,37)" fg:x="129" fg:w="7"/><text x="1.7934%" y="319.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (3 samples, 0.04%)</title><rect x="1.5913%" y="293" width="0.0359%" height="15" fill="rgb(238,207,15)" fg:x="133" fg:w="3"/><text x="1.8413%" y="303.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.01%)</title><rect x="1.6152%" y="277" width="0.0120%" height="15" fill="rgb(213,199,42)" fg:x="135" fg:w="1"/><text x="1.8652%" y="287.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="1.6152%" y="261" width="0.0120%" height="15" fill="rgb(235,201,11)" fg:x="135" fg:w="1"/><text x="1.8652%" y="271.50"></text></g><g><title>&lt;core::fmt::Formatter as core::fmt::Write&gt;::write_char (28 samples, 0.34%)</title><rect x="1.3281%" y="373" width="0.3350%" height="15" fill="rgb(207,46,11)" fg:x="111" fg:w="28"/><text x="1.5781%" y="383.50"></text></g><g><title>core::fmt::Write::write_char (24 samples, 0.29%)</title><rect x="1.3759%" y="357" width="0.2872%" height="15" fill="rgb(241,35,35)" fg:x="115" fg:w="24"/><text x="1.6259%" y="367.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (22 samples, 0.26%)</title><rect x="1.3999%" y="341" width="0.2632%" height="15" fill="rgb(243,32,47)" fg:x="117" fg:w="22"/><text x="1.6499%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::ends_with (3 samples, 0.04%)</title><rect x="1.6272%" y="325" width="0.0359%" height="15" fill="rgb(247,202,23)" fg:x="136" fg:w="3"/><text x="1.8772%" y="335.50"></text></g><g><title>&lt;char as core::str::pattern::Pattern&gt;::is_suffix_of (3 samples, 0.04%)</title><rect x="1.6272%" y="309" width="0.0359%" height="15" fill="rgb(219,102,11)" fg:x="136" fg:w="3"/><text x="1.8772%" y="319.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_suffix_of (3 samples, 0.04%)</title><rect x="1.6272%" y="293" width="0.0359%" height="15" fill="rgb(243,110,44)" fg:x="136" fg:w="3"/><text x="1.8772%" y="303.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::ends_with (3 samples, 0.04%)</title><rect x="1.6272%" y="277" width="0.0359%" height="15" fill="rgb(222,74,54)" fg:x="136" fg:w="3"/><text x="1.8772%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="1.6511%" y="261" width="0.0120%" height="15" fill="rgb(216,99,12)" fg:x="138" fg:w="1"/><text x="1.9011%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="1.6511%" y="245" width="0.0120%" height="15" fill="rgb(226,22,26)" fg:x="138" fg:w="1"/><text x="1.9011%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="1.6511%" y="229" width="0.0120%" height="15" fill="rgb(217,163,10)" fg:x="138" fg:w="1"/><text x="1.9011%" y="239.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="1.8067%" y="325" width="0.0239%" height="15" fill="rgb(213,25,53)" fg:x="151" fg:w="2"/><text x="2.0567%" y="335.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="1.6631%" y="373" width="0.1795%" height="15" fill="rgb(252,105,26)" fg:x="139" fg:w="15"/><text x="1.9131%" y="383.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="1.6631%" y="357" width="0.1795%" height="15" fill="rgb(220,39,43)" fg:x="139" fg:w="15"/><text x="1.9131%" y="367.50"></text></g><g><title>core::str::validations::next_code_point (15 samples, 0.18%)</title><rect x="1.6631%" y="341" width="0.1795%" height="15" fill="rgb(229,68,48)" fg:x="139" fg:w="15"/><text x="1.9131%" y="351.50"></text></g><g><title>core::str::validations::utf8_first_byte (1 samples, 0.01%)</title><rect x="1.8306%" y="325" width="0.0120%" height="15" fill="rgb(252,8,32)" fg:x="153" fg:w="1"/><text x="2.0806%" y="335.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="1.8425%" y="373" width="0.0359%" height="15" fill="rgb(223,20,43)" fg:x="154" fg:w="3"/><text x="2.0925%" y="383.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (9 samples, 0.11%)</title><rect x="2.7519%" y="309" width="0.1077%" height="15" fill="rgb(229,81,49)" fg:x="230" fg:w="9"/><text x="3.0019%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (9 samples, 0.11%)</title><rect x="2.7519%" y="293" width="0.1077%" height="15" fill="rgb(236,28,36)" fg:x="230" fg:w="9"/><text x="3.0019%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (9 samples, 0.11%)</title><rect x="2.7519%" y="277" width="0.1077%" height="15" fill="rgb(249,185,26)" fg:x="230" fg:w="9"/><text x="3.0019%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (80 samples, 0.96%)</title><rect x="4.2594%" y="261" width="0.9572%" height="15" fill="rgb(249,174,33)" fg:x="356" fg:w="80"/><text x="4.5094%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key (209 samples, 2.50%)</title><rect x="2.8595%" y="309" width="2.5006%" height="15" fill="rgb(233,201,37)" fg:x="239" fg:w="209"/><text x="3.1095%" y="319.50">co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by (209 samples, 2.50%)</title><rect x="2.8595%" y="293" width="2.5006%" height="15" fill="rgb(221,78,26)" fg:x="239" fg:w="209"/><text x="3.1095%" y="303.50">co..</text></g><g><title>core::slice::&lt;impl [T]&gt;::binary_search_by_key::{{closure}} (92 samples, 1.10%)</title><rect x="4.2594%" y="277" width="1.1007%" height="15" fill="rgb(250,127,30)" fg:x="356" fg:w="92"/><text x="4.5094%" y="287.50"></text></g><g><title>core::unicode::unicode_data::skip_search::{{closure}} (12 samples, 0.14%)</title><rect x="5.2166%" y="261" width="0.1436%" height="15" fill="rgb(230,49,44)" fg:x="436" fg:w="12"/><text x="5.4666%" y="271.50"></text></g><g><title>&lt;&amp;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (12 samples, 0.14%)</title><rect x="5.2166%" y="245" width="0.1436%" height="15" fill="rgb(229,67,23)" fg:x="436" fg:w="12"/><text x="5.4666%" y="255.50"></text></g><g><title>&lt;u32 as core::ops::bit::Shl&lt;i32&gt;&gt;::shl (12 samples, 0.14%)</title><rect x="5.2166%" y="229" width="0.1436%" height="15" fill="rgb(249,83,47)" fg:x="436" fg:w="12"/><text x="5.4666%" y="239.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_grapheme_extended (268 samples, 3.21%)</title><rect x="2.2613%" y="357" width="3.2065%" height="15" fill="rgb(215,43,3)" fg:x="189" fg:w="268"/><text x="2.5113%" y="367.50">cor..</text></g><g><title>core::unicode::unicode_data::grapheme_extend::lookup (266 samples, 3.18%)</title><rect x="2.2852%" y="341" width="3.1826%" height="15" fill="rgb(238,154,13)" fg:x="191" fg:w="266"/><text x="2.5352%" y="351.50">cor..</text></g><g><title>core::unicode::unicode_data::skip_search (235 samples, 2.81%)</title><rect x="2.6561%" y="325" width="2.8117%" height="15" fill="rgb(219,56,2)" fg:x="222" fg:w="235"/><text x="2.9061%" y="335.50">co..</text></g><g><title>core::unicode::unicode_data::decode_length (9 samples, 0.11%)</title><rect x="5.3601%" y="309" width="0.1077%" height="15" fill="rgb(233,0,4)" fg:x="448" fg:w="9"/><text x="5.6101%" y="319.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="5.8746%" y="309" width="0.0120%" height="15" fill="rgb(235,30,7)" fg:x="491" fg:w="1"/><text x="6.1246%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="5.8746%" y="325" width="0.0239%" height="15" fill="rgb(250,79,13)" fg:x="491" fg:w="2"/><text x="6.1246%" y="335.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="5.8866%" y="309" width="0.0120%" height="15" fill="rgb(211,146,34)" fg:x="492" fg:w="1"/><text x="6.1366%" y="319.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::escape_debug_ext (341 samples, 4.08%)</title><rect x="1.8784%" y="373" width="4.0799%" height="15" fill="rgb(228,22,38)" fg:x="157" fg:w="341"/><text x="2.1284%" y="383.50">core..</text></g><g><title>core::unicode::printable::is_printable (41 samples, 0.49%)</title><rect x="5.4678%" y="357" width="0.4905%" height="15" fill="rgb(235,168,5)" fg:x="457" fg:w="41"/><text x="5.7178%" y="367.50"></text></g><g><title>core::unicode::printable::check (8 samples, 0.10%)</title><rect x="5.8626%" y="341" width="0.0957%" height="15" fill="rgb(221,155,16)" fg:x="490" fg:w="8"/><text x="6.1126%" y="351.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="5.8985%" y="325" width="0.0598%" height="15" fill="rgb(215,215,53)" fg:x="493" fg:w="5"/><text x="6.1485%" y="335.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (2 samples, 0.02%)</title><rect x="5.9344%" y="309" width="0.0239%" height="15" fill="rgb(223,4,10)" fg:x="496" fg:w="2"/><text x="6.1844%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.02%)</title><rect x="5.9344%" y="293" width="0.0239%" height="15" fill="rgb(234,103,6)" fg:x="496" fg:w="2"/><text x="6.1844%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="5.9344%" y="277" width="0.0239%" height="15" fill="rgb(227,97,0)" fg:x="496" fg:w="2"/><text x="6.1844%" y="287.50"></text></g><g><title>__rdl_realloc (3 samples, 0.04%)</title><rect x="6.1139%" y="117" width="0.0359%" height="15" fill="rgb(234,150,53)" fg:x="511" fg:w="3"/><text x="6.3639%" y="127.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="6.1259%" y="101" width="0.0239%" height="15" fill="rgb(228,201,54)" fg:x="512" fg:w="2"/><text x="6.3759%" y="111.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="6.1019%" y="245" width="0.1675%" height="15" fill="rgb(222,22,37)" fg:x="510" fg:w="14"/><text x="6.3519%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="6.1019%" y="229" width="0.1675%" height="15" fill="rgb(237,53,32)" fg:x="510" fg:w="14"/><text x="6.3519%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.17%)</title><rect x="6.1019%" y="213" width="0.1675%" height="15" fill="rgb(233,25,53)" fg:x="510" fg:w="14"/><text x="6.3519%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.17%)</title><rect x="6.1019%" y="197" width="0.1675%" height="15" fill="rgb(210,40,34)" fg:x="510" fg:w="14"/><text x="6.3519%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.17%)</title><rect x="6.1019%" y="181" width="0.1675%" height="15" fill="rgb(241,220,44)" fg:x="510" fg:w="14"/><text x="6.3519%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.16%)</title><rect x="6.1139%" y="165" width="0.1555%" height="15" fill="rgb(235,28,35)" fg:x="511" fg:w="13"/><text x="6.3639%" y="175.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.16%)</title><rect x="6.1139%" y="149" width="0.1555%" height="15" fill="rgb(210,56,17)" fg:x="511" fg:w="13"/><text x="6.3639%" y="159.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.16%)</title><rect x="6.1139%" y="133" width="0.1555%" height="15" fill="rgb(224,130,29)" fg:x="511" fg:w="13"/><text x="6.3639%" y="143.50"></text></g><g><title>realloc (10 samples, 0.12%)</title><rect x="6.1498%" y="117" width="0.1196%" height="15" fill="rgb(235,212,8)" fg:x="514" fg:w="10"/><text x="6.3998%" y="127.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="6.1618%" y="101" width="0.1077%" height="15" fill="rgb(223,33,50)" fg:x="515" fg:w="9"/><text x="6.4118%" y="111.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="6.2096%" y="85" width="0.0598%" height="15" fill="rgb(219,149,13)" fg:x="519" fg:w="5"/><text x="6.4596%" y="95.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (20 samples, 0.24%)</title><rect x="6.0900%" y="341" width="0.2393%" height="15" fill="rgb(250,156,29)" fg:x="509" fg:w="20"/><text x="6.3400%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (19 samples, 0.23%)</title><rect x="6.1019%" y="325" width="0.2273%" height="15" fill="rgb(216,193,19)" fg:x="510" fg:w="19"/><text x="6.3519%" y="335.50"></text></g><g><title>alloc::string::String::push_str (19 samples, 0.23%)</title><rect x="6.1019%" y="309" width="0.2273%" height="15" fill="rgb(216,135,14)" fg:x="510" fg:w="19"/><text x="6.3519%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.23%)</title><rect x="6.1019%" y="293" width="0.2273%" height="15" fill="rgb(241,47,5)" fg:x="510" fg:w="19"/><text x="6.3519%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.23%)</title><rect x="6.1019%" y="277" width="0.2273%" height="15" fill="rgb(233,42,35)" fg:x="510" fg:w="19"/><text x="6.3519%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.23%)</title><rect x="6.1019%" y="261" width="0.2273%" height="15" fill="rgb(231,13,6)" fg:x="510" fg:w="19"/><text x="6.3519%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.06%)</title><rect x="6.2694%" y="245" width="0.0598%" height="15" fill="rgb(207,181,40)" fg:x="524" fg:w="5"/><text x="6.5194%" y="255.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="6.2694%" y="229" width="0.0598%" height="15" fill="rgb(254,173,49)" fg:x="524" fg:w="5"/><text x="6.5194%" y="239.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="6.3532%" y="309" width="0.0120%" height="15" fill="rgb(221,1,38)" fg:x="531" fg:w="1"/><text x="6.6032%" y="319.50"></text></g><g><title>core::slice::memchr::memchr_aligned (6 samples, 0.07%)</title><rect x="6.3771%" y="277" width="0.0718%" height="15" fill="rgb(206,124,46)" fg:x="533" fg:w="6"/><text x="6.6271%" y="287.50"></text></g><g><title>core::slice::memchr::memchr_naive (2 samples, 0.02%)</title><rect x="6.4250%" y="261" width="0.0239%" height="15" fill="rgb(249,21,11)" fg:x="537" fg:w="2"/><text x="6.6750%" y="271.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (8 samples, 0.10%)</title><rect x="6.3652%" y="309" width="0.0957%" height="15" fill="rgb(222,201,40)" fg:x="532" fg:w="8"/><text x="6.6152%" y="319.50"></text></g><g><title>core::slice::memchr::memchr (7 samples, 0.08%)</title><rect x="6.3771%" y="293" width="0.0838%" height="15" fill="rgb(235,61,29)" fg:x="533" fg:w="7"/><text x="6.6271%" y="303.50"></text></g><g><title>core::slice::memchr::memchr_naive (1 samples, 0.01%)</title><rect x="6.4489%" y="277" width="0.0120%" height="15" fill="rgb(219,207,3)" fg:x="539" fg:w="1"/><text x="6.6989%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (43 samples, 0.51%)</title><rect x="5.9584%" y="373" width="0.5145%" height="15" fill="rgb(222,56,46)" fg:x="498" fg:w="43"/><text x="6.2084%" y="383.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (41 samples, 0.49%)</title><rect x="5.9823%" y="357" width="0.4905%" height="15" fill="rgb(239,76,54)" fg:x="500" fg:w="41"/><text x="6.2323%" y="367.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.14%)</title><rect x="6.3293%" y="341" width="0.1436%" height="15" fill="rgb(231,124,27)" fg:x="529" fg:w="12"/><text x="6.5793%" y="351.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (12 samples, 0.14%)</title><rect x="6.3293%" y="325" width="0.1436%" height="15" fill="rgb(249,195,6)" fg:x="529" fg:w="12"/><text x="6.5793%" y="335.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::get_end (1 samples, 0.01%)</title><rect x="6.4609%" y="309" width="0.0120%" height="15" fill="rgb(237,174,47)" fg:x="540" fg:w="1"/><text x="6.7109%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::index (2 samples, 0.02%)</title><rect x="6.4728%" y="357" width="0.0239%" height="15" fill="rgb(206,201,31)" fg:x="541" fg:w="2"/><text x="6.7228%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get (2 samples, 0.02%)</title><rect x="6.4728%" y="341" width="0.0239%" height="15" fill="rgb(231,57,52)" fg:x="541" fg:w="2"/><text x="6.7228%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (2 samples, 0.02%)</title><rect x="6.4728%" y="325" width="0.0239%" height="15" fill="rgb(248,177,22)" fg:x="541" fg:w="2"/><text x="6.7228%" y="335.50"></text></g><g><title>&lt;str as core::fmt::Debug&gt;::fmt (472 samples, 5.65%)</title><rect x="0.9452%" y="389" width="5.6473%" height="15" fill="rgb(215,211,37)" fg:x="79" fg:w="472"/><text x="1.1952%" y="399.50">&lt;str as..</text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (10 samples, 0.12%)</title><rect x="6.4728%" y="373" width="0.1196%" height="15" fill="rgb(241,128,51)" fg:x="541" fg:w="10"/><text x="6.7228%" y="383.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (8 samples, 0.10%)</title><rect x="6.4968%" y="357" width="0.0957%" height="15" fill="rgb(227,165,31)" fg:x="543" fg:w="8"/><text x="6.7468%" y="367.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (8 samples, 0.10%)</title><rect x="6.4968%" y="341" width="0.0957%" height="15" fill="rgb(228,167,24)" fg:x="543" fg:w="8"/><text x="6.7468%" y="351.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (7 samples, 0.08%)</title><rect x="6.5087%" y="325" width="0.0838%" height="15" fill="rgb(228,143,12)" fg:x="544" fg:w="7"/><text x="6.7587%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="6.8078%" y="229" width="0.0239%" height="15" fill="rgb(249,149,8)" fg:x="569" fg:w="2"/><text x="7.0578%" y="239.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="6.8078%" y="213" width="0.0239%" height="15" fill="rgb(243,35,44)" fg:x="569" fg:w="2"/><text x="7.0578%" y="223.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="6.8318%" y="101" width="0.0479%" height="15" fill="rgb(246,89,9)" fg:x="571" fg:w="4"/><text x="7.0818%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (5 samples, 0.06%)</title><rect x="6.8318%" y="197" width="0.0598%" height="15" fill="rgb(233,213,13)" fg:x="571" fg:w="5"/><text x="7.0818%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (5 samples, 0.06%)</title><rect x="6.8318%" y="181" width="0.0598%" height="15" fill="rgb(233,141,41)" fg:x="571" fg:w="5"/><text x="7.0818%" y="191.50"></text></g><g><title>alloc::alloc::Global::grow_impl (5 samples, 0.06%)</title><rect x="6.8318%" y="165" width="0.0598%" height="15" fill="rgb(239,167,4)" fg:x="571" fg:w="5"/><text x="7.0818%" y="175.50"></text></g><g><title>alloc::alloc::realloc (5 samples, 0.06%)</title><rect x="6.8318%" y="149" width="0.0598%" height="15" fill="rgb(209,217,16)" fg:x="571" fg:w="5"/><text x="7.0818%" y="159.50"></text></g><g><title>realloc (5 samples, 0.06%)</title><rect x="6.8318%" y="133" width="0.0598%" height="15" fill="rgb(219,88,35)" fg:x="571" fg:w="5"/><text x="7.0818%" y="143.50"></text></g><g><title>[libc.so.6] (5 samples, 0.06%)</title><rect x="6.8318%" y="117" width="0.0598%" height="15" fill="rgb(220,193,23)" fg:x="571" fg:w="5"/><text x="7.0818%" y="127.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.8796%" y="101" width="0.0120%" height="15" fill="rgb(230,90,52)" fg:x="575" fg:w="1"/><text x="7.1296%" y="111.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.8796%" y="85" width="0.0120%" height="15" fill="rgb(252,106,19)" fg:x="575" fg:w="1"/><text x="7.1296%" y="95.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.8796%" y="69" width="0.0120%" height="15" fill="rgb(206,74,20)" fg:x="575" fg:w="1"/><text x="7.1296%" y="79.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.8796%" y="53" width="0.0120%" height="15" fill="rgb(230,138,44)" fg:x="575" fg:w="1"/><text x="7.1296%" y="63.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="6.8796%" y="37" width="0.0120%" height="15" fill="rgb(235,182,43)" fg:x="575" fg:w="1"/><text x="7.1296%" y="47.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.13%)</title><rect x="6.7839%" y="261" width="0.1316%" height="15" fill="rgb(242,16,51)" fg:x="567" fg:w="11"/><text x="7.0339%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="6.8078%" y="245" width="0.1077%" height="15" fill="rgb(248,9,4)" fg:x="569" fg:w="9"/><text x="7.0578%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.08%)</title><rect x="6.8318%" y="229" width="0.0838%" height="15" fill="rgb(210,31,22)" fg:x="571" fg:w="7"/><text x="7.0818%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.08%)</title><rect x="6.8318%" y="213" width="0.0838%" height="15" fill="rgb(239,54,39)" fg:x="571" fg:w="7"/><text x="7.0818%" y="223.50"></text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="6.8916%" y="197" width="0.0239%" height="15" fill="rgb(230,99,41)" fg:x="576" fg:w="2"/><text x="7.1416%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="6.8916%" y="181" width="0.0239%" height="15" fill="rgb(253,106,12)" fg:x="576" fg:w="2"/><text x="7.1416%" y="191.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (23 samples, 0.28%)</title><rect x="6.7480%" y="357" width="0.2752%" height="15" fill="rgb(213,46,41)" fg:x="564" fg:w="23"/><text x="6.9980%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (21 samples, 0.25%)</title><rect x="6.7720%" y="341" width="0.2513%" height="15" fill="rgb(215,133,35)" fg:x="566" fg:w="21"/><text x="7.0220%" y="351.50"></text></g><g><title>alloc::string::String::push_str (21 samples, 0.25%)</title><rect x="6.7720%" y="325" width="0.2513%" height="15" fill="rgb(213,28,5)" fg:x="566" fg:w="21"/><text x="7.0220%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (21 samples, 0.25%)</title><rect x="6.7720%" y="309" width="0.2513%" height="15" fill="rgb(215,77,49)" fg:x="566" fg:w="21"/><text x="7.0220%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (21 samples, 0.25%)</title><rect x="6.7720%" y="293" width="0.2513%" height="15" fill="rgb(248,100,22)" fg:x="566" fg:w="21"/><text x="7.0220%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (21 samples, 0.25%)</title><rect x="6.7720%" y="277" width="0.2513%" height="15" fill="rgb(208,67,9)" fg:x="566" fg:w="21"/><text x="7.0220%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (9 samples, 0.11%)</title><rect x="6.9155%" y="261" width="0.1077%" height="15" fill="rgb(219,133,21)" fg:x="578" fg:w="9"/><text x="7.1655%" y="271.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="6.9155%" y="245" width="0.1077%" height="15" fill="rgb(246,46,29)" fg:x="578" fg:w="9"/><text x="7.1655%" y="255.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="7.0711%" y="325" width="0.0120%" height="15" fill="rgb(246,185,52)" fg:x="591" fg:w="1"/><text x="7.3211%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (42 samples, 0.50%)</title><rect x="6.5925%" y="389" width="0.5025%" height="15" fill="rgb(252,136,11)" fg:x="551" fg:w="42"/><text x="6.8425%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (40 samples, 0.48%)</title><rect x="6.6164%" y="373" width="0.4786%" height="15" fill="rgb(219,138,53)" fg:x="553" fg:w="40"/><text x="6.8664%" y="383.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="7.0232%" y="357" width="0.0718%" height="15" fill="rgb(211,51,23)" fg:x="587" fg:w="6"/><text x="7.2732%" y="367.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (6 samples, 0.07%)</title><rect x="7.0232%" y="341" width="0.0718%" height="15" fill="rgb(247,221,28)" fg:x="587" fg:w="6"/><text x="7.2732%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="7.0830%" y="325" width="0.0120%" height="15" fill="rgb(251,222,45)" fg:x="592" fg:w="1"/><text x="7.3330%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="7.0830%" y="309" width="0.0120%" height="15" fill="rgb(217,162,53)" fg:x="592" fg:w="1"/><text x="7.3330%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="7.0830%" y="293" width="0.0120%" height="15" fill="rgb(229,93,14)" fg:x="592" fg:w="1"/><text x="7.3330%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="7.1668%" y="357" width="0.0479%" height="15" fill="rgb(209,67,49)" fg:x="599" fg:w="4"/><text x="7.4168%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (4 samples, 0.05%)</title><rect x="7.1668%" y="341" width="0.0479%" height="15" fill="rgb(213,87,29)" fg:x="599" fg:w="4"/><text x="7.4168%" y="351.50"></text></g><g><title>alloc::string::String::push_str (4 samples, 0.05%)</title><rect x="7.1668%" y="325" width="0.0479%" height="15" fill="rgb(205,151,52)" fg:x="599" fg:w="4"/><text x="7.4168%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.05%)</title><rect x="7.1668%" y="309" width="0.0479%" height="15" fill="rgb(253,215,39)" fg:x="599" fg:w="4"/><text x="7.4168%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.05%)</title><rect x="7.1668%" y="293" width="0.0479%" height="15" fill="rgb(221,220,41)" fg:x="599" fg:w="4"/><text x="7.4168%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (4 samples, 0.05%)</title><rect x="7.1668%" y="277" width="0.0479%" height="15" fill="rgb(218,133,21)" fg:x="599" fg:w="4"/><text x="7.4168%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="7.1788%" y="261" width="0.0359%" height="15" fill="rgb(221,193,43)" fg:x="600" fg:w="3"/><text x="7.4288%" y="271.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="7.1788%" y="245" width="0.0359%" height="15" fill="rgb(240,128,52)" fg:x="600" fg:w="3"/><text x="7.4288%" y="255.50"></text></g><g><title>core::fmt::Write::write_char (14 samples, 0.17%)</title><rect x="7.0950%" y="389" width="0.1675%" height="15" fill="rgb(253,114,12)" fg:x="593" fg:w="14"/><text x="7.3450%" y="399.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (14 samples, 0.17%)</title><rect x="7.0950%" y="373" width="0.1675%" height="15" fill="rgb(215,223,47)" fg:x="593" fg:w="14"/><text x="7.3450%" y="383.50"></text></g><g><title>&lt;core::str::iter::SplitInclusive&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="7.2146%" y="357" width="0.0479%" height="15" fill="rgb(248,225,23)" fg:x="603" fg:w="4"/><text x="7.4646%" y="367.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next_inclusive (4 samples, 0.05%)</title><rect x="7.2146%" y="341" width="0.0479%" height="15" fill="rgb(250,108,0)" fg:x="603" fg:w="4"/><text x="7.4646%" y="351.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="7.2505%" y="325" width="0.0120%" height="15" fill="rgb(228,208,7)" fg:x="606" fg:w="1"/><text x="7.5005%" y="335.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="7.2505%" y="309" width="0.0120%" height="15" fill="rgb(244,45,10)" fg:x="606" fg:w="1"/><text x="7.5005%" y="319.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="7.2505%" y="293" width="0.0120%" height="15" fill="rgb(207,125,25)" fg:x="606" fg:w="1"/><text x="7.5005%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::is_pretty (1 samples, 0.01%)</title><rect x="7.2625%" y="389" width="0.0120%" height="15" fill="rgb(210,195,18)" fg:x="607" fg:w="1"/><text x="7.5125%" y="399.50"></text></g><g><title>core::fmt::Formatter::alternate (1 samples, 0.01%)</title><rect x="7.2625%" y="373" width="0.0120%" height="15" fill="rgb(249,80,12)" fg:x="607" fg:w="1"/><text x="7.5125%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (542 samples, 6.48%)</title><rect x="0.8016%" y="437" width="6.4848%" height="15" fill="rgb(221,65,9)" fg:x="67" fg:w="542"/><text x="1.0516%" y="447.50">core::fm..</text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (538 samples, 6.44%)</title><rect x="0.8495%" y="421" width="6.4369%" height="15" fill="rgb(235,49,36)" fg:x="71" fg:w="538"/><text x="1.0995%" y="431.50">core::re..</text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (534 samples, 6.39%)</title><rect x="0.8973%" y="405" width="6.3891%" height="15" fill="rgb(225,32,20)" fg:x="75" fg:w="534"/><text x="1.1473%" y="415.50">core::fm..</text></g><g><title>core::fmt::builders::PadAdapter::wrap (1 samples, 0.01%)</title><rect x="7.2745%" y="389" width="0.0120%" height="15" fill="rgb(215,141,46)" fg:x="608" fg:w="1"/><text x="7.5245%" y="399.50"></text></g><g><title>core::fmt::Formatter::wrap_buf (1 samples, 0.01%)</title><rect x="7.2745%" y="373" width="0.0120%" height="15" fill="rgb(250,160,47)" fg:x="608" fg:w="1"/><text x="7.5245%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (2 samples, 0.02%)</title><rect x="7.2864%" y="437" width="0.0239%" height="15" fill="rgb(216,222,40)" fg:x="609" fg:w="2"/><text x="7.5364%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="7.2864%" y="421" width="0.0239%" height="15" fill="rgb(234,217,39)" fg:x="609" fg:w="2"/><text x="7.5364%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (2 samples, 0.02%)</title><rect x="7.2864%" y="405" width="0.0239%" height="15" fill="rgb(207,178,40)" fg:x="609" fg:w="2"/><text x="7.5364%" y="415.50"></text></g><g><title>core::fmt::run (553 samples, 6.62%)</title><rect x="0.7059%" y="485" width="6.6164%" height="15" fill="rgb(221,136,13)" fg:x="59" fg:w="553"/><text x="0.9559%" y="495.50">core::fmt..</text></g><g><title>&lt;yt_history::DataRow as core::fmt::Debug&gt;::fmt (553 samples, 6.62%)</title><rect x="0.7059%" y="469" width="6.6164%" height="15" fill="rgb(249,199,10)" fg:x="59" fg:w="553"/><text x="0.9559%" y="479.50">&lt;yt_histo..</text></g><g><title>core::fmt::Formatter::debug_struct_field5_finish (550 samples, 6.58%)</title><rect x="0.7418%" y="453" width="6.5805%" height="15" fill="rgb(249,222,13)" fg:x="62" fg:w="550"/><text x="0.9918%" y="463.50">core::fmt..</text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="7.3104%" y="437" width="0.0120%" height="15" fill="rgb(244,185,38)" fg:x="611" fg:w="1"/><text x="7.5604%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="7.3104%" y="421" width="0.0120%" height="15" fill="rgb(236,202,9)" fg:x="611" fg:w="1"/><text x="7.5604%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="7.3104%" y="405" width="0.0120%" height="15" fill="rgb(250,229,37)" fg:x="611" fg:w="1"/><text x="7.5604%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="7.3104%" y="389" width="0.0120%" height="15" fill="rgb(206,174,23)" fg:x="611" fg:w="1"/><text x="7.5604%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="7.3104%" y="373" width="0.0120%" height="15" fill="rgb(211,33,43)" fg:x="611" fg:w="1"/><text x="7.5604%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="7.3104%" y="357" width="0.0120%" height="15" fill="rgb(245,58,50)" fg:x="611" fg:w="1"/><text x="7.5604%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="7.3104%" y="341" width="0.0120%" height="15" fill="rgb(244,68,36)" fg:x="611" fg:w="1"/><text x="7.5604%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="7.3104%" y="325" width="0.0120%" height="15" fill="rgb(232,229,15)" fg:x="611" fg:w="1"/><text x="7.5604%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="7.3104%" y="309" width="0.0120%" height="15" fill="rgb(254,30,23)" fg:x="611" fg:w="1"/><text x="7.5604%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="7.3104%" y="293" width="0.0120%" height="15" fill="rgb(235,160,14)" fg:x="611" fg:w="1"/><text x="7.5604%" y="303.50"></text></g><g><title>alloc::fmt::format (568 samples, 6.80%)</title><rect x="0.5623%" y="581" width="6.7959%" height="15" fill="rgb(212,155,44)" fg:x="47" fg:w="568"/><text x="0.8123%" y="591.50">alloc::fm..</text></g><g><title>core::option::Option&lt;T&gt;::map_or_else (568 samples, 6.80%)</title><rect x="0.5623%" y="565" width="6.7959%" height="15" fill="rgb(226,2,50)" fg:x="47" fg:w="568"/><text x="0.8123%" y="575.50">core::opt..</text></g><g><title>alloc::fmt::format::{{closure}} (568 samples, 6.80%)</title><rect x="0.5623%" y="549" width="6.7959%" height="15" fill="rgb(234,177,6)" fg:x="47" fg:w="568"/><text x="0.8123%" y="559.50">alloc::fm..</text></g><g><title>alloc::fmt::format::format_inner (568 samples, 6.80%)</title><rect x="0.5623%" y="533" width="6.7959%" height="15" fill="rgb(217,24,9)" fg:x="47" fg:w="568"/><text x="0.8123%" y="543.50">alloc::fm..</text></g><g><title>core::fmt::Write::write_fmt (561 samples, 6.71%)</title><rect x="0.6461%" y="517" width="6.7121%" height="15" fill="rgb(220,13,46)" fg:x="54" fg:w="561"/><text x="0.8961%" y="527.50">core::fmt..</text></g><g><title>core::fmt::write (559 samples, 6.69%)</title><rect x="0.6700%" y="501" width="6.6882%" height="15" fill="rgb(239,221,27)" fg:x="56" fg:w="559"/><text x="0.9200%" y="511.50">core::fmt..</text></g><g><title>core::slice::&lt;impl [T]&gt;::get (3 samples, 0.04%)</title><rect x="7.3223%" y="485" width="0.0359%" height="15" fill="rgb(222,198,25)" fg:x="612" fg:w="3"/><text x="7.5723%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (3 samples, 0.04%)</title><rect x="7.3223%" y="469" width="0.0359%" height="15" fill="rgb(211,99,13)" fg:x="612" fg:w="3"/><text x="7.5723%" y="479.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="7.9206%" y="517" width="0.0359%" height="15" fill="rgb(232,111,31)" fg:x="662" fg:w="3"/><text x="8.1706%" y="527.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.04%)</title><rect x="7.9206%" y="501" width="0.0359%" height="15" fill="rgb(245,82,37)" fg:x="662" fg:w="3"/><text x="8.1706%" y="511.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="7.9684%" y="421" width="0.0120%" height="15" fill="rgb(227,149,46)" fg:x="666" fg:w="1"/><text x="8.2184%" y="431.50"></text></g><g><title>&lt;F as core::str::pattern::MultiCharEq&gt;::matches (2 samples, 0.02%)</title><rect x="7.9684%" y="453" width="0.0239%" height="15" fill="rgb(218,36,50)" fg:x="666" fg:w="2"/><text x="8.2184%" y="463.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (2 samples, 0.02%)</title><rect x="7.9684%" y="437" width="0.0239%" height="15" fill="rgb(226,80,48)" fg:x="666" fg:w="2"/><text x="8.2184%" y="447.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::is_whitespace (1 samples, 0.01%)</title><rect x="7.9804%" y="421" width="0.0120%" height="15" fill="rgb(238,224,15)" fg:x="667" fg:w="1"/><text x="8.2304%" y="431.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (5 samples, 0.06%)</title><rect x="7.9564%" y="517" width="0.0598%" height="15" fill="rgb(241,136,10)" fg:x="665" fg:w="5"/><text x="8.2064%" y="527.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_match (5 samples, 0.06%)</title><rect x="7.9564%" y="501" width="0.0598%" height="15" fill="rgb(208,32,45)" fg:x="665" fg:w="5"/><text x="8.2064%" y="511.50"></text></g><g><title>core::str::pattern::Searcher::next_match (5 samples, 0.06%)</title><rect x="7.9564%" y="485" width="0.0598%" height="15" fill="rgb(207,135,9)" fg:x="665" fg:w="5"/><text x="8.2064%" y="495.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (5 samples, 0.06%)</title><rect x="7.9564%" y="469" width="0.0598%" height="15" fill="rgb(206,86,44)" fg:x="665" fg:w="5"/><text x="8.2064%" y="479.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="7.9923%" y="453" width="0.0239%" height="15" fill="rgb(245,177,15)" fg:x="668" fg:w="2"/><text x="8.2423%" y="463.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.0043%" y="437" width="0.0120%" height="15" fill="rgb(206,64,50)" fg:x="669" fg:w="1"/><text x="8.2543%" y="447.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.01%)</title><rect x="8.0043%" y="421" width="0.0120%" height="15" fill="rgb(234,36,40)" fg:x="669" fg:w="1"/><text x="8.2543%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.01%)</title><rect x="8.0163%" y="501" width="0.0120%" height="15" fill="rgb(213,64,8)" fg:x="670" fg:w="1"/><text x="8.2663%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::get (1 samples, 0.01%)</title><rect x="8.0163%" y="485" width="0.0120%" height="15" fill="rgb(210,75,36)" fg:x="670" fg:w="1"/><text x="8.2663%" y="495.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.35%)</title><rect x="7.6932%" y="533" width="0.3470%" height="15" fill="rgb(229,88,21)" fg:x="643" fg:w="29"/><text x="7.9432%" y="543.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (2 samples, 0.02%)</title><rect x="8.0163%" y="517" width="0.0239%" height="15" fill="rgb(252,204,47)" fg:x="670" fg:w="2"/><text x="8.2663%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::index (1 samples, 0.01%)</title><rect x="8.0282%" y="501" width="0.0120%" height="15" fill="rgb(208,77,27)" fg:x="671" fg:w="1"/><text x="8.2782%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeTo&lt;usize&gt;&gt;::get (1 samples, 0.01%)</title><rect x="8.0282%" y="485" width="0.0120%" height="15" fill="rgb(221,76,26)" fg:x="671" fg:w="1"/><text x="8.2782%" y="495.50"></text></g><g><title>core::str::&lt;impl str&gt;::is_char_boundary (1 samples, 0.01%)</title><rect x="8.0282%" y="469" width="0.0120%" height="15" fill="rgb(225,139,18)" fg:x="671" fg:w="1"/><text x="8.2782%" y="479.50"></text></g><g><title>chrono::format::parse::parse (1 samples, 0.01%)</title><rect x="8.0402%" y="533" width="0.0120%" height="15" fill="rgb(230,137,11)" fg:x="672" fg:w="1"/><text x="8.2902%" y="543.50"></text></g><g><title>chrono::format::parsed::Parsed::set_day (1 samples, 0.01%)</title><rect x="8.0522%" y="533" width="0.0120%" height="15" fill="rgb(212,28,1)" fg:x="673" fg:w="1"/><text x="8.3022%" y="543.50"></text></g><g><title>&lt;i64 as num_traits::cast::ToPrimitive&gt;::to_u32 (1 samples, 0.01%)</title><rect x="8.0522%" y="517" width="0.0120%" height="15" fill="rgb(248,164,17)" fg:x="673" fg:w="1"/><text x="8.3022%" y="527.50"></text></g><g><title>chrono::format::parsed::Parsed::set_minute (1 samples, 0.01%)</title><rect x="8.0641%" y="533" width="0.0120%" height="15" fill="rgb(222,171,42)" fg:x="674" fg:w="1"/><text x="8.3141%" y="543.50"></text></g><g><title>chrono::format::parsed::set_if_consistent (1 samples, 0.01%)</title><rect x="8.0641%" y="517" width="0.0120%" height="15" fill="rgb(243,84,45)" fg:x="674" fg:w="1"/><text x="8.3141%" y="527.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.01%)</title><rect x="8.0761%" y="517" width="0.0120%" height="15" fill="rgb(252,49,23)" fg:x="675" fg:w="1"/><text x="8.3261%" y="527.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.01%)</title><rect x="8.0761%" y="501" width="0.0120%" height="15" fill="rgb(215,19,7)" fg:x="675" fg:w="1"/><text x="8.3261%" y="511.50"></text></g><g><title>chrono::format::scan::number (2 samples, 0.02%)</title><rect x="8.0761%" y="533" width="0.0239%" height="15" fill="rgb(238,81,41)" fg:x="675" fg:w="2"/><text x="8.3261%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="8.0881%" y="517" width="0.0120%" height="15" fill="rgb(210,199,37)" fg:x="676" fg:w="1"/><text x="8.3381%" y="527.50"></text></g><g><title>chrono::format::scan::number::{{closure}} (1 samples, 0.01%)</title><rect x="8.0881%" y="501" width="0.0120%" height="15" fill="rgb(244,192,49)" fg:x="676" fg:w="1"/><text x="8.3381%" y="511.50"></text></g><g><title>chrono::format::scan::timezone_name_skip (1 samples, 0.01%)</title><rect x="8.1000%" y="533" width="0.0120%" height="15" fill="rgb(226,211,11)" fg:x="677" fg:w="1"/><text x="8.3500%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_left_matches (1 samples, 0.01%)</title><rect x="8.1000%" y="517" width="0.0120%" height="15" fill="rgb(236,162,54)" fg:x="677" fg:w="1"/><text x="8.3500%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (1 samples, 0.01%)</title><rect x="8.1000%" y="501" width="0.0120%" height="15" fill="rgb(220,229,9)" fg:x="677" fg:w="1"/><text x="8.3500%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (1 samples, 0.01%)</title><rect x="8.1000%" y="485" width="0.0120%" height="15" fill="rgb(250,87,22)" fg:x="677" fg:w="1"/><text x="8.3500%" y="495.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (1 samples, 0.01%)</title><rect x="8.1000%" y="469" width="0.0120%" height="15" fill="rgb(239,43,17)" fg:x="677" fg:w="1"/><text x="8.3500%" y="479.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.01%)</title><rect x="8.1000%" y="453" width="0.0120%" height="15" fill="rgb(231,177,25)" fg:x="677" fg:w="1"/><text x="8.3500%" y="463.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.1000%" y="437" width="0.0120%" height="15" fill="rgb(219,179,1)" fg:x="677" fg:w="1"/><text x="8.3500%" y="447.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (2 samples, 0.02%)</title><rect x="8.1120%" y="533" width="0.0239%" height="15" fill="rgb(238,219,53)" fg:x="678" fg:w="2"/><text x="8.3620%" y="543.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (2 samples, 0.02%)</title><rect x="8.1120%" y="517" width="0.0239%" height="15" fill="rgb(232,167,36)" fg:x="678" fg:w="2"/><text x="8.3620%" y="527.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (2 samples, 0.02%)</title><rect x="8.1120%" y="501" width="0.0239%" height="15" fill="rgb(244,19,51)" fg:x="678" fg:w="2"/><text x="8.3620%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="8.1120%" y="485" width="0.0239%" height="15" fill="rgb(224,6,22)" fg:x="678" fg:w="2"/><text x="8.3620%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="8.1120%" y="469" width="0.0239%" height="15" fill="rgb(224,145,5)" fg:x="678" fg:w="2"/><text x="8.3620%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="8.1120%" y="453" width="0.0239%" height="15" fill="rgb(234,130,49)" fg:x="678" fg:w="2"/><text x="8.3620%" y="463.50"></text></g><g><title>[libc.so.6] (2 samples, 0.02%)</title><rect x="8.1120%" y="437" width="0.0239%" height="15" fill="rgb(254,6,2)" fg:x="678" fg:w="2"/><text x="8.3620%" y="447.50"></text></g><g><title>chrono::format::parse::parse (66 samples, 0.79%)</title><rect x="7.3702%" y="565" width="0.7897%" height="15" fill="rgb(208,96,46)" fg:x="616" fg:w="66"/><text x="7.6202%" y="575.50"></text></g><g><title>chrono::format::parse::parse_internal (66 samples, 0.79%)</title><rect x="7.3702%" y="549" width="0.7897%" height="15" fill="rgb(239,3,39)" fg:x="616" fg:w="66"/><text x="7.6202%" y="559.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_left (2 samples, 0.02%)</title><rect x="8.1359%" y="533" width="0.0239%" height="15" fill="rgb(233,210,1)" fg:x="680" fg:w="2"/><text x="8.3859%" y="543.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start (2 samples, 0.02%)</title><rect x="8.1359%" y="517" width="0.0239%" height="15" fill="rgb(244,137,37)" fg:x="680" fg:w="2"/><text x="8.3859%" y="527.50"></text></g><g><title>core::str::&lt;impl str&gt;::trim_start_matches (2 samples, 0.02%)</title><rect x="8.1359%" y="501" width="0.0239%" height="15" fill="rgb(240,136,2)" fg:x="680" fg:w="2"/><text x="8.3859%" y="511.50"></text></g><g><title>&lt;core::str::pattern::CharPredicateSearcher&lt;F&gt; as core::str::pattern::Searcher&gt;::next_reject (1 samples, 0.01%)</title><rect x="8.1479%" y="485" width="0.0120%" height="15" fill="rgb(239,18,37)" fg:x="681" fg:w="1"/><text x="8.3979%" y="495.50"></text></g><g><title>core::str::pattern::Searcher::next_reject (1 samples, 0.01%)</title><rect x="8.1479%" y="469" width="0.0120%" height="15" fill="rgb(218,185,22)" fg:x="681" fg:w="1"/><text x="8.3979%" y="479.50"></text></g><g><title>&lt;core::str::pattern::MultiCharEqSearcher&lt;C&gt; as core::str::pattern::Searcher&gt;::next (1 samples, 0.01%)</title><rect x="8.1479%" y="453" width="0.0120%" height="15" fill="rgb(225,218,4)" fg:x="681" fg:w="1"/><text x="8.3979%" y="463.50"></text></g><g><title>&lt;core::str::iter::CharIndices as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.1479%" y="437" width="0.0120%" height="15" fill="rgb(230,182,32)" fg:x="681" fg:w="1"/><text x="8.3979%" y="447.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.1479%" y="421" width="0.0120%" height="15" fill="rgb(242,56,43)" fg:x="681" fg:w="1"/><text x="8.3979%" y="431.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.01%)</title><rect x="8.1479%" y="405" width="0.0120%" height="15" fill="rgb(233,99,24)" fg:x="681" fg:w="1"/><text x="8.3979%" y="415.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="8.1479%" y="389" width="0.0120%" height="15" fill="rgb(234,209,42)" fg:x="681" fg:w="1"/><text x="8.3979%" y="399.50"></text></g><g><title>chrono::format::parsed::Parsed::new (2 samples, 0.02%)</title><rect x="8.1598%" y="565" width="0.0239%" height="15" fill="rgb(227,7,12)" fg:x="682" fg:w="2"/><text x="8.4098%" y="575.50"></text></g><g><title>&lt;chrono::naive::date::NaiveDate as chrono::traits::Datelike&gt;::iso_week (1 samples, 0.01%)</title><rect x="8.3274%" y="501" width="0.0120%" height="15" fill="rgb(245,203,43)" fg:x="696" fg:w="1"/><text x="8.5774%" y="511.50"></text></g><g><title>chrono::naive::isoweek::iso_week_from_yof (1 samples, 0.01%)</title><rect x="8.3274%" y="485" width="0.0120%" height="15" fill="rgb(238,205,33)" fg:x="696" fg:w="1"/><text x="8.5774%" y="495.50"></text></g><g><title>chrono::naive::internals::Of::flags (1 samples, 0.01%)</title><rect x="8.3274%" y="469" width="0.0120%" height="15" fill="rgb(231,56,7)" fg:x="696" fg:w="1"/><text x="8.5774%" y="479.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date::{{closure}} (5 samples, 0.06%)</title><rect x="8.3154%" y="517" width="0.0598%" height="15" fill="rgb(244,186,29)" fg:x="695" fg:w="5"/><text x="8.5654%" y="527.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date::{{closure}} (3 samples, 0.04%)</title><rect x="8.3393%" y="501" width="0.0359%" height="15" fill="rgb(234,111,31)" fg:x="697" fg:w="3"/><text x="8.5893%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_mdf (2 samples, 0.02%)</title><rect x="8.3752%" y="501" width="0.0239%" height="15" fill="rgb(241,149,10)" fg:x="700" fg:w="2"/><text x="8.6252%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (2 samples, 0.02%)</title><rect x="8.3752%" y="485" width="0.0239%" height="15" fill="rgb(249,206,44)" fg:x="700" fg:w="2"/><text x="8.6252%" y="495.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (2 samples, 0.02%)</title><rect x="8.3752%" y="469" width="0.0239%" height="15" fill="rgb(251,153,30)" fg:x="700" fg:w="2"/><text x="8.6252%" y="479.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (2 samples, 0.02%)</title><rect x="8.3752%" y="453" width="0.0239%" height="15" fill="rgb(239,152,38)" fg:x="700" fg:w="2"/><text x="8.6252%" y="463.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_date (14 samples, 0.17%)</title><rect x="8.2556%" y="533" width="0.1675%" height="15" fill="rgb(249,139,47)" fg:x="690" fg:w="14"/><text x="8.5056%" y="543.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_ymd_opt (4 samples, 0.05%)</title><rect x="8.3752%" y="517" width="0.0479%" height="15" fill="rgb(244,64,35)" fg:x="700" fg:w="4"/><text x="8.6252%" y="527.50"></text></g><g><title>chrono::naive::internals::Mdf::new (2 samples, 0.02%)</title><rect x="8.3991%" y="501" width="0.0239%" height="15" fill="rgb(216,46,15)" fg:x="702" fg:w="2"/><text x="8.6491%" y="511.50"></text></g><g><title>chrono::format::parsed::Parsed::to_naive_datetime_with_offset (17 samples, 0.20%)</title><rect x="8.2316%" y="549" width="0.2034%" height="15" fill="rgb(250,74,19)" fg:x="688" fg:w="17"/><text x="8.4816%" y="559.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::timestamp (1 samples, 0.01%)</title><rect x="8.4231%" y="533" width="0.0120%" height="15" fill="rgb(249,42,33)" fg:x="704" fg:w="1"/><text x="8.6731%" y="543.50"></text></g><g><title>chrono::traits::Datelike::num_days_from_ce (1 samples, 0.01%)</title><rect x="8.4231%" y="517" width="0.0120%" height="15" fill="rgb(242,149,17)" fg:x="704" fg:w="1"/><text x="8.6731%" y="527.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as chrono::offset::TimeZone&gt;::offset_from_local_datetime (2 samples, 0.02%)</title><rect x="8.4350%" y="533" width="0.0239%" height="15" fill="rgb(244,29,21)" fg:x="705" fg:w="2"/><text x="8.6850%" y="543.50"></text></g><g><title>&lt;chrono::offset::utc::Utc as chrono::offset::Offset&gt;::fix (1 samples, 0.01%)</title><rect x="8.4590%" y="501" width="0.0120%" height="15" fill="rgb(220,130,37)" fg:x="707" fg:w="1"/><text x="8.7090%" y="511.50"></text></g><g><title>chrono::naive::date::NaiveDate::from_of (1 samples, 0.01%)</title><rect x="8.4829%" y="421" width="0.0120%" height="15" fill="rgb(211,67,2)" fg:x="709" fg:w="1"/><text x="8.7329%" y="431.50"></text></g><g><title>core::ops::range::RangeInclusive&lt;Idx&gt;::contains (1 samples, 0.01%)</title><rect x="8.4829%" y="405" width="0.0120%" height="15" fill="rgb(235,68,52)" fg:x="709" fg:w="1"/><text x="8.7329%" y="415.50"></text></g><g><title>core::ops::range::RangeBounds::contains (1 samples, 0.01%)</title><rect x="8.4829%" y="389" width="0.0120%" height="15" fill="rgb(246,142,3)" fg:x="709" fg:w="1"/><text x="8.7329%" y="399.50"></text></g><g><title>chrono::naive::internals::cycle_to_yo (1 samples, 0.01%)</title><rect x="8.4949%" y="421" width="0.0120%" height="15" fill="rgb(241,25,7)" fg:x="710" fg:w="1"/><text x="8.7449%" y="431.50"></text></g><g><title>chrono::naive::date::NaiveDate::checked_add_signed (4 samples, 0.05%)</title><rect x="8.4709%" y="437" width="0.0479%" height="15" fill="rgb(242,119,39)" fg:x="708" fg:w="4"/><text x="8.7209%" y="447.50"></text></g><g><title>num_integer::div_mod_floor (1 samples, 0.01%)</title><rect x="8.5068%" y="421" width="0.0120%" height="15" fill="rgb(241,98,45)" fg:x="711" fg:w="1"/><text x="8.7568%" y="431.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_mod_floor (1 samples, 0.01%)</title><rect x="8.5068%" y="405" width="0.0120%" height="15" fill="rgb(254,28,30)" fg:x="711" fg:w="1"/><text x="8.7568%" y="415.50"></text></g><g><title>&lt;i32 as num_integer::Integer&gt;::div_rem (1 samples, 0.01%)</title><rect x="8.5068%" y="389" width="0.0120%" height="15" fill="rgb(241,142,54)" fg:x="711" fg:w="1"/><text x="8.7568%" y="399.50"></text></g><g><title>time::duration::Duration::num_nanoseconds (2 samples, 0.02%)</title><rect x="8.5547%" y="421" width="0.0239%" height="15" fill="rgb(222,85,15)" fg:x="715" fg:w="2"/><text x="8.8047%" y="431.50"></text></g><g><title>time::duration::Duration::num_seconds (2 samples, 0.02%)</title><rect x="8.5547%" y="405" width="0.0239%" height="15" fill="rgb(210,85,47)" fg:x="715" fg:w="2"/><text x="8.8047%" y="415.50"></text></g><g><title>chrono::offset::TimeZone::datetime_from_str (103 samples, 1.23%)</title><rect x="7.3582%" y="581" width="1.2324%" height="15" fill="rgb(224,206,25)" fg:x="615" fg:w="103"/><text x="7.6082%" y="591.50"></text></g><g><title>chrono::format::parsed::Parsed::to_datetime_with_timezone (34 samples, 0.41%)</title><rect x="8.1838%" y="565" width="0.4068%" height="15" fill="rgb(243,201,19)" fg:x="684" fg:w="34"/><text x="8.4338%" y="575.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime (13 samples, 0.16%)</title><rect x="8.4350%" y="549" width="0.1555%" height="15" fill="rgb(236,59,4)" fg:x="705" fg:w="13"/><text x="8.6850%" y="559.50"></text></g><g><title>chrono::offset::LocalResult&lt;T&gt;::map (11 samples, 0.13%)</title><rect x="8.4590%" y="533" width="0.1316%" height="15" fill="rgb(254,179,45)" fg:x="707" fg:w="11"/><text x="8.7090%" y="543.50"></text></g><g><title>chrono::offset::TimeZone::from_local_datetime::{{closure}} (11 samples, 0.13%)</title><rect x="8.4590%" y="517" width="0.1316%" height="15" fill="rgb(226,14,10)" fg:x="707" fg:w="11"/><text x="8.7090%" y="527.50"></text></g><g><title>chrono::offset::fixed::&lt;impl core::ops::arith::Sub&lt;chrono::offset::fixed::FixedOffset&gt; for chrono::naive::datetime::NaiveDateTime&gt;::sub (10 samples, 0.12%)</title><rect x="8.4709%" y="501" width="0.1196%" height="15" fill="rgb(244,27,41)" fg:x="708" fg:w="10"/><text x="8.7209%" y="511.50"></text></g><g><title>chrono::offset::fixed::add_with_leapsecond (10 samples, 0.12%)</title><rect x="8.4709%" y="485" width="0.1196%" height="15" fill="rgb(235,35,32)" fg:x="708" fg:w="10"/><text x="8.7209%" y="495.50"></text></g><g><title>&lt;chrono::naive::datetime::NaiveDateTime as core::ops::arith::Add&lt;time::duration::Duration&gt;&gt;::add (10 samples, 0.12%)</title><rect x="8.4709%" y="469" width="0.1196%" height="15" fill="rgb(218,68,31)" fg:x="708" fg:w="10"/><text x="8.7209%" y="479.50"></text></g><g><title>chrono::naive::datetime::NaiveDateTime::checked_add_signed (10 samples, 0.12%)</title><rect x="8.4709%" y="453" width="0.1196%" height="15" fill="rgb(207,120,37)" fg:x="708" fg:w="10"/><text x="8.7209%" y="463.50"></text></g><g><title>chrono::naive::time::NaiveTime::overflowing_add_signed (6 samples, 0.07%)</title><rect x="8.5188%" y="437" width="0.0718%" height="15" fill="rgb(227,98,0)" fg:x="712" fg:w="6"/><text x="8.7688%" y="447.50"></text></g><g><title>time::duration::Duration::num_seconds (1 samples, 0.01%)</title><rect x="8.5786%" y="421" width="0.0120%" height="15" fill="rgb(207,7,3)" fg:x="717" fg:w="1"/><text x="8.8286%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (21 samples, 0.25%)</title><rect x="8.5906%" y="581" width="0.2513%" height="15" fill="rgb(206,98,19)" fg:x="718" fg:w="21"/><text x="8.8406%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (21 samples, 0.25%)</title><rect x="8.5906%" y="565" width="0.2513%" height="15" fill="rgb(217,5,26)" fg:x="718" fg:w="21"/><text x="8.8406%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (21 samples, 0.25%)</title><rect x="8.5906%" y="549" width="0.2513%" height="15" fill="rgb(235,190,38)" fg:x="718" fg:w="21"/><text x="8.8406%" y="559.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.25%)</title><rect x="8.5906%" y="533" width="0.2513%" height="15" fill="rgb(247,86,24)" fg:x="718" fg:w="21"/><text x="8.8406%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.25%)</title><rect x="8.5906%" y="517" width="0.2513%" height="15" fill="rgb(205,101,16)" fg:x="718" fg:w="21"/><text x="8.8406%" y="527.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.25%)</title><rect x="8.5906%" y="501" width="0.2513%" height="15" fill="rgb(246,168,33)" fg:x="718" fg:w="21"/><text x="8.8406%" y="511.50"></text></g><g><title>cfree (21 samples, 0.25%)</title><rect x="8.5906%" y="485" width="0.2513%" height="15" fill="rgb(231,114,1)" fg:x="718" fg:w="21"/><text x="8.8406%" y="495.50"></text></g><g><title>[libc.so.6] (17 samples, 0.20%)</title><rect x="8.6384%" y="469" width="0.2034%" height="15" fill="rgb(207,184,53)" fg:x="722" fg:w="17"/><text x="8.8884%" y="479.50"></text></g><g><title>[libc.so.6] (9 samples, 0.11%)</title><rect x="8.7341%" y="453" width="0.1077%" height="15" fill="rgb(224,95,51)" fg:x="730" fg:w="9"/><text x="8.9841%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::DataRow&gt; (10 samples, 0.12%)</title><rect x="8.8418%" y="581" width="0.1196%" height="15" fill="rgb(212,188,45)" fg:x="739" fg:w="10"/><text x="9.0918%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.12%)</title><rect x="8.8418%" y="565" width="0.1196%" height="15" fill="rgb(223,154,38)" fg:x="739" fg:w="10"/><text x="9.0918%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.12%)</title><rect x="8.8418%" y="549" width="0.1196%" height="15" fill="rgb(251,22,52)" fg:x="739" fg:w="10"/><text x="9.0918%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.12%)</title><rect x="8.8418%" y="533" width="0.1196%" height="15" fill="rgb(229,209,22)" fg:x="739" fg:w="10"/><text x="9.0918%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="8.8418%" y="517" width="0.1196%" height="15" fill="rgb(234,138,34)" fg:x="739" fg:w="10"/><text x="9.0918%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.12%)</title><rect x="8.8418%" y="501" width="0.1196%" height="15" fill="rgb(212,95,11)" fg:x="739" fg:w="10"/><text x="9.0918%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.12%)</title><rect x="8.8418%" y="485" width="0.1196%" height="15" fill="rgb(240,179,47)" fg:x="739" fg:w="10"/><text x="9.0918%" y="495.50"></text></g><g><title>cfree (10 samples, 0.12%)</title><rect x="8.8418%" y="469" width="0.1196%" height="15" fill="rgb(240,163,11)" fg:x="739" fg:w="10"/><text x="9.0918%" y="479.50"></text></g><g><title>[libc.so.6] (7 samples, 0.08%)</title><rect x="8.8777%" y="453" width="0.0838%" height="15" fill="rgb(236,37,12)" fg:x="742" fg:w="7"/><text x="9.1277%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::Watched&gt; (1 samples, 0.01%)</title><rect x="8.9615%" y="581" width="0.0120%" height="15" fill="rgb(232,164,16)" fg:x="749" fg:w="1"/><text x="9.2115%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (1 samples, 0.01%)</title><rect x="8.9615%" y="565" width="0.0120%" height="15" fill="rgb(244,205,15)" fg:x="749" fg:w="1"/><text x="9.2115%" y="575.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.9615%" y="549" width="0.0120%" height="15" fill="rgb(223,117,47)" fg:x="749" fg:w="1"/><text x="9.2115%" y="559.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (1 samples, 0.01%)</title><rect x="8.9615%" y="533" width="0.0120%" height="15" fill="rgb(244,107,35)" fg:x="749" fg:w="1"/><text x="9.2115%" y="543.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="8.9615%" y="517" width="0.0120%" height="15" fill="rgb(205,140,8)" fg:x="749" fg:w="1"/><text x="9.2115%" y="527.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (2 samples, 0.02%)</title><rect x="8.9734%" y="581" width="0.0239%" height="15" fill="rgb(228,84,46)" fg:x="750" fg:w="2"/><text x="9.2234%" y="591.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="8.9974%" y="469" width="0.0359%" height="15" fill="rgb(254,188,9)" fg:x="752" fg:w="3"/><text x="9.2474%" y="479.50"></text></g><g><title>core::str::validations::next_code_point (3 samples, 0.04%)</title><rect x="8.9974%" y="453" width="0.0359%" height="15" fill="rgb(206,112,54)" fg:x="752" fg:w="3"/><text x="9.2474%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.01%)</title><rect x="9.1170%" y="357" width="0.0120%" height="15" fill="rgb(216,84,49)" fg:x="762" fg:w="1"/><text x="9.3670%" y="367.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="9.1409%" y="293" width="0.0120%" height="15" fill="rgb(214,194,35)" fg:x="764" fg:w="1"/><text x="9.3909%" y="303.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="9.1529%" y="293" width="0.0239%" height="15" fill="rgb(249,28,3)" fg:x="765" fg:w="2"/><text x="9.4029%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.14%)</title><rect x="9.1290%" y="341" width="0.1436%" height="15" fill="rgb(222,56,52)" fg:x="763" fg:w="12"/><text x="9.3790%" y="351.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.14%)</title><rect x="9.1290%" y="325" width="0.1436%" height="15" fill="rgb(245,217,50)" fg:x="763" fg:w="12"/><text x="9.3790%" y="335.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.14%)</title><rect x="9.1290%" y="309" width="0.1436%" height="15" fill="rgb(213,201,24)" fg:x="763" fg:w="12"/><text x="9.3790%" y="319.50"></text></g><g><title>realloc (8 samples, 0.10%)</title><rect x="9.1768%" y="293" width="0.0957%" height="15" fill="rgb(248,116,28)" fg:x="767" fg:w="8"/><text x="9.4268%" y="303.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="9.1768%" y="277" width="0.0957%" height="15" fill="rgb(219,72,43)" fg:x="767" fg:w="8"/><text x="9.4268%" y="287.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="9.2247%" y="261" width="0.0479%" height="15" fill="rgb(209,138,14)" fg:x="771" fg:w="4"/><text x="9.4747%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="9.2726%" y="341" width="0.0120%" height="15" fill="rgb(222,18,33)" fg:x="775" fg:w="1"/><text x="9.5226%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.20%)</title><rect x="9.1290%" y="357" width="0.2034%" height="15" fill="rgb(213,199,7)" fg:x="763" fg:w="17"/><text x="9.3790%" y="367.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="9.2845%" y="341" width="0.0479%" height="15" fill="rgb(250,110,10)" fg:x="776" fg:w="4"/><text x="9.5345%" y="351.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="9.2965%" y="325" width="0.0359%" height="15" fill="rgb(248,123,6)" fg:x="777" fg:w="3"/><text x="9.5465%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (19 samples, 0.23%)</title><rect x="9.1170%" y="389" width="0.2273%" height="15" fill="rgb(206,91,31)" fg:x="762" fg:w="19"/><text x="9.3670%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (19 samples, 0.23%)</title><rect x="9.1170%" y="373" width="0.2273%" height="15" fill="rgb(211,154,13)" fg:x="762" fg:w="19"/><text x="9.3670%" y="383.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="9.3324%" y="357" width="0.0120%" height="15" fill="rgb(225,148,7)" fg:x="780" fg:w="1"/><text x="9.5824%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="9.3324%" y="341" width="0.0120%" height="15" fill="rgb(220,160,43)" fg:x="780" fg:w="1"/><text x="9.5824%" y="351.50"></text></g><g><title>yt_history::filter_ascii (30 samples, 0.36%)</title><rect x="8.9974%" y="581" width="0.3589%" height="15" fill="rgb(213,52,39)" fg:x="752" fg:w="30"/><text x="9.2474%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (30 samples, 0.36%)</title><rect x="8.9974%" y="565" width="0.3589%" height="15" fill="rgb(243,137,7)" fg:x="752" fg:w="30"/><text x="9.2474%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::FromIterator&lt;char&gt;&gt;::from_iter (30 samples, 0.36%)</title><rect x="8.9974%" y="549" width="0.3589%" height="15" fill="rgb(230,79,13)" fg:x="752" fg:w="30"/><text x="9.2474%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend (30 samples, 0.36%)</title><rect x="8.9974%" y="533" width="0.3589%" height="15" fill="rgb(247,105,23)" fg:x="752" fg:w="30"/><text x="9.2474%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (30 samples, 0.36%)</title><rect x="8.9974%" y="517" width="0.3589%" height="15" fill="rgb(223,179,41)" fg:x="752" fg:w="30"/><text x="9.2474%" y="527.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::fold (30 samples, 0.36%)</title><rect x="8.9974%" y="501" width="0.3589%" height="15" fill="rgb(218,9,34)" fg:x="752" fg:w="30"/><text x="9.2474%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (30 samples, 0.36%)</title><rect x="8.9974%" y="485" width="0.3589%" height="15" fill="rgb(222,106,8)" fg:x="752" fg:w="30"/><text x="9.2474%" y="495.50"></text></g><g><title>core::iter::adapters::filter::filter_fold::{{closure}} (27 samples, 0.32%)</title><rect x="9.0333%" y="469" width="0.3230%" height="15" fill="rgb(211,220,0)" fg:x="755" fg:w="27"/><text x="9.2833%" y="479.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (27 samples, 0.32%)</title><rect x="9.0333%" y="453" width="0.3230%" height="15" fill="rgb(229,52,16)" fg:x="755" fg:w="27"/><text x="9.2833%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::iter::traits::collect::Extend&lt;char&gt;&gt;::extend::{{closure}} (27 samples, 0.32%)</title><rect x="9.0333%" y="437" width="0.3230%" height="15" fill="rgb(212,155,18)" fg:x="755" fg:w="27"/><text x="9.2833%" y="447.50"></text></g><g><title>alloc::string::String::push (27 samples, 0.32%)</title><rect x="9.0333%" y="421" width="0.3230%" height="15" fill="rgb(242,21,14)" fg:x="755" fg:w="27"/><text x="9.2833%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (27 samples, 0.32%)</title><rect x="9.0333%" y="405" width="0.3230%" height="15" fill="rgb(222,19,48)" fg:x="755" fg:w="27"/><text x="9.2833%" y="415.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="9.3443%" y="389" width="0.0120%" height="15" fill="rgb(232,45,27)" fg:x="781" fg:w="1"/><text x="9.5943%" y="399.50"></text></g><g><title>yt_history::model::Models::count_videos (1 samples, 0.01%)</title><rect x="9.3563%" y="581" width="0.0120%" height="15" fill="rgb(249,103,42)" fg:x="782" fg:w="1"/><text x="9.6063%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="9.3563%" y="565" width="0.0120%" height="15" fill="rgb(246,81,33)" fg:x="782" fg:w="1"/><text x="9.6063%" y="575.50"></text></g><g><title>yt_history::model::Models::count_videos::{{closure}} (1 samples, 0.01%)</title><rect x="9.3563%" y="549" width="0.0120%" height="15" fill="rgb(252,33,42)" fg:x="782" fg:w="1"/><text x="9.6063%" y="559.50"></text></g><g><title>yt_history::model::WhereVideo::matches (1 samples, 0.01%)</title><rect x="9.3563%" y="533" width="0.0120%" height="15" fill="rgb(209,212,41)" fg:x="782" fg:w="1"/><text x="9.6063%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="9.3683%" y="565" width="0.0120%" height="15" fill="rgb(207,154,6)" fg:x="783" fg:w="1"/><text x="9.6183%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="9.3683%" y="549" width="0.0120%" height="15" fill="rgb(223,64,47)" fg:x="783" fg:w="1"/><text x="9.6183%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="9.3683%" y="533" width="0.0120%" height="15" fill="rgb(211,161,38)" fg:x="783" fg:w="1"/><text x="9.6183%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="9.3683%" y="517" width="0.0120%" height="15" fill="rgb(219,138,40)" fg:x="783" fg:w="1"/><text x="9.6183%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="9.3683%" y="501" width="0.0120%" height="15" fill="rgb(241,228,46)" fg:x="783" fg:w="1"/><text x="9.6183%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="9.3683%" y="485" width="0.0120%" height="15" fill="rgb(223,209,38)" fg:x="783" fg:w="1"/><text x="9.6183%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="9.3683%" y="469" width="0.0120%" height="15" fill="rgb(236,164,45)" fg:x="783" fg:w="1"/><text x="9.6183%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="9.3683%" y="453" width="0.0120%" height="15" fill="rgb(231,15,5)" fg:x="783" fg:w="1"/><text x="9.6183%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="9.3683%" y="437" width="0.0120%" height="15" fill="rgb(252,35,15)" fg:x="783" fg:w="1"/><text x="9.6183%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="9.3683%" y="421" width="0.0120%" height="15" fill="rgb(248,181,18)" fg:x="783" fg:w="1"/><text x="9.6183%" y="431.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="9.3683%" y="405" width="0.0120%" height="15" fill="rgb(233,39,42)" fg:x="783" fg:w="1"/><text x="9.6183%" y="415.50"></text></g><g><title>malloc (1 samples, 0.01%)</title><rect x="9.3683%" y="389" width="0.0120%" height="15" fill="rgb(238,110,33)" fg:x="783" fg:w="1"/><text x="9.6183%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="9.4999%" y="533" width="0.0239%" height="15" fill="rgb(233,195,10)" fg:x="794" fg:w="2"/><text x="9.7499%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="9.6435%" y="517" width="0.2154%" height="15" fill="rgb(254,105,3)" fg:x="806" fg:w="18"/><text x="9.8935%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (17 samples, 0.20%)</title><rect x="9.6554%" y="501" width="0.2034%" height="15" fill="rgb(221,225,9)" fg:x="807" fg:w="17"/><text x="9.9054%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="9.8349%" y="485" width="0.0239%" height="15" fill="rgb(224,227,45)" fg:x="822" fg:w="2"/><text x="10.0849%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="9.8349%" y="469" width="0.0239%" height="15" fill="rgb(229,198,43)" fg:x="822" fg:w="2"/><text x="10.0849%" y="479.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="9.8349%" y="453" width="0.0239%" height="15" fill="rgb(206,209,35)" fg:x="822" fg:w="2"/><text x="10.0849%" y="463.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="9.8349%" y="437" width="0.0239%" height="15" fill="rgb(245,195,53)" fg:x="822" fg:w="2"/><text x="10.0849%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="10.1340%" y="501" width="0.0479%" height="15" fill="rgb(240,92,26)" fg:x="847" fg:w="4"/><text x="10.3840%" y="511.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (2 samples, 0.02%)</title><rect x="10.1579%" y="485" width="0.0239%" height="15" fill="rgb(207,40,23)" fg:x="849" fg:w="2"/><text x="10.4079%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="10.1579%" y="469" width="0.0239%" height="15" fill="rgb(223,111,35)" fg:x="849" fg:w="2"/><text x="10.4079%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="10.1579%" y="453" width="0.0239%" height="15" fill="rgb(229,147,28)" fg:x="849" fg:w="2"/><text x="10.4079%" y="463.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="10.1579%" y="437" width="0.0239%" height="15" fill="rgb(211,29,28)" fg:x="849" fg:w="2"/><text x="10.4079%" y="447.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="10.1579%" y="421" width="0.0239%" height="15" fill="rgb(228,72,33)" fg:x="849" fg:w="2"/><text x="10.4079%" y="431.50"></text></g><g><title>yt_history::model::Models::find_or_create_channel (379 samples, 4.53%)</title><rect x="9.3683%" y="581" width="4.5346%" height="15" fill="rgb(205,214,31)" fg:x="783" fg:w="379"/><text x="9.6183%" y="591.50">yt_hi..</text></g><g><title>yt_history::model::Models::find_channel (378 samples, 4.52%)</title><rect x="9.3802%" y="565" width="4.5226%" height="15" fill="rgb(224,111,15)" fg:x="784" fg:w="378"/><text x="9.6302%" y="575.50">yt_hi..</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (378 samples, 4.52%)</title><rect x="9.3802%" y="549" width="4.5226%" height="15" fill="rgb(253,21,26)" fg:x="784" fg:w="378"/><text x="9.6302%" y="559.50">&lt;core..</text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (366 samples, 4.38%)</title><rect x="9.5238%" y="533" width="4.3790%" height="15" fill="rgb(245,139,43)" fg:x="796" fg:w="366"/><text x="9.7738%" y="543.50">yt_hi..</text></g><g><title>yt_history::model::WhereChannel::matches (338 samples, 4.04%)</title><rect x="9.8588%" y="517" width="4.0440%" height="15" fill="rgb(252,170,7)" fg:x="824" fg:w="338"/><text x="10.1088%" y="527.50">yt_h..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (311 samples, 3.72%)</title><rect x="10.1819%" y="501" width="3.7210%" height="15" fill="rgb(231,118,14)" fg:x="851" fg:w="311"/><text x="10.4319%" y="511.50">core..</text></g><g><title>core::cmp::PartialEq::ne (311 samples, 3.72%)</title><rect x="10.1819%" y="485" width="3.7210%" height="15" fill="rgb(238,83,0)" fg:x="851" fg:w="311"/><text x="10.4319%" y="495.50">core..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (310 samples, 3.71%)</title><rect x="10.1938%" y="469" width="3.7090%" height="15" fill="rgb(221,39,39)" fg:x="852" fg:w="310"/><text x="10.4438%" y="479.50">&lt;all..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (310 samples, 3.71%)</title><rect x="10.1938%" y="453" width="3.7090%" height="15" fill="rgb(222,119,46)" fg:x="852" fg:w="310"/><text x="10.4438%" y="463.50">core..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (310 samples, 3.71%)</title><rect x="10.1938%" y="437" width="3.7090%" height="15" fill="rgb(222,165,49)" fg:x="852" fg:w="310"/><text x="10.4438%" y="447.50">core..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (310 samples, 3.71%)</title><rect x="10.1938%" y="421" width="3.7090%" height="15" fill="rgb(219,113,52)" fg:x="852" fg:w="310"/><text x="10.4438%" y="431.50">core..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (310 samples, 3.71%)</title><rect x="10.1938%" y="405" width="3.7090%" height="15" fill="rgb(214,7,15)" fg:x="852" fg:w="310"/><text x="10.4438%" y="415.50">&lt;[A]..</text></g><g><title>[libc.so.6] (301 samples, 3.60%)</title><rect x="10.3015%" y="389" width="3.6013%" height="15" fill="rgb(235,32,4)" fg:x="861" fg:w="301"/><text x="10.5515%" y="399.50">[lib..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="13.9268%" y="485" width="0.1077%" height="15" fill="rgb(238,90,54)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="13.9268%" y="469" width="0.1077%" height="15" fill="rgb(213,208,19)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="13.9268%" y="453" width="0.1077%" height="15" fill="rgb(233,156,4)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (9 samples, 0.11%)</title><rect x="13.9268%" y="437" width="0.1077%" height="15" fill="rgb(207,194,5)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (9 samples, 0.11%)</title><rect x="13.9268%" y="421" width="0.1077%" height="15" fill="rgb(206,111,30)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="431.50"></text></g><g><title>alloc::alloc::alloc (9 samples, 0.11%)</title><rect x="13.9268%" y="405" width="0.1077%" height="15" fill="rgb(243,70,54)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="415.50"></text></g><g><title>malloc (9 samples, 0.11%)</title><rect x="13.9268%" y="389" width="0.1077%" height="15" fill="rgb(242,28,8)" fg:x="1164" fg:w="9"/><text x="14.1768%" y="399.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="13.9986%" y="373" width="0.0359%" height="15" fill="rgb(219,106,18)" fg:x="1170" fg:w="3"/><text x="14.2486%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="13.9268%" y="565" width="0.1196%" height="15" fill="rgb(244,222,10)" fg:x="1164" fg:w="10"/><text x="14.1768%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="13.9268%" y="549" width="0.1196%" height="15" fill="rgb(236,179,52)" fg:x="1164" fg:w="10"/><text x="14.1768%" y="559.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.12%)</title><rect x="13.9268%" y="533" width="0.1196%" height="15" fill="rgb(213,23,39)" fg:x="1164" fg:w="10"/><text x="14.1768%" y="543.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="13.9268%" y="517" width="0.1196%" height="15" fill="rgb(238,48,10)" fg:x="1164" fg:w="10"/><text x="14.1768%" y="527.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.12%)</title><rect x="13.9268%" y="501" width="0.1196%" height="15" fill="rgb(251,196,23)" fg:x="1164" fg:w="10"/><text x="14.1768%" y="511.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="14.0345%" y="485" width="0.0120%" height="15" fill="rgb(250,152,24)" fg:x="1173" fg:w="1"/><text x="14.2845%" y="495.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="14.0345%" y="469" width="0.0120%" height="15" fill="rgb(209,150,17)" fg:x="1173" fg:w="1"/><text x="14.2845%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="14.0345%" y="453" width="0.0120%" height="15" fill="rgb(234,202,34)" fg:x="1173" fg:w="1"/><text x="14.2845%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="14.0464%" y="565" width="0.0120%" height="15" fill="rgb(253,148,53)" fg:x="1174" fg:w="1"/><text x="14.2964%" y="575.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="14.0464%" y="549" width="0.0120%" height="15" fill="rgb(218,129,16)" fg:x="1174" fg:w="1"/><text x="14.2964%" y="559.50"></text></g><g><title>cfree (2 samples, 0.02%)</title><rect x="14.0584%" y="565" width="0.0239%" height="15" fill="rgb(216,85,19)" fg:x="1175" fg:w="2"/><text x="14.3084%" y="575.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="14.0704%" y="549" width="0.0120%" height="15" fill="rgb(235,228,7)" fg:x="1176" fg:w="1"/><text x="14.3204%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="14.0823%" y="565" width="0.0120%" height="15" fill="rgb(245,175,0)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="14.0823%" y="549" width="0.0120%" height="15" fill="rgb(208,168,36)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="14.0823%" y="533" width="0.0120%" height="15" fill="rgb(246,171,24)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.0823%" y="517" width="0.0120%" height="15" fill="rgb(215,142,24)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="14.0823%" y="501" width="0.0120%" height="15" fill="rgb(250,187,7)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="14.0823%" y="485" width="0.0120%" height="15" fill="rgb(228,66,33)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="495.50"></text></g><g><title>cfree (1 samples, 0.01%)</title><rect x="14.0823%" y="469" width="0.0120%" height="15" fill="rgb(234,215,21)" fg:x="1177" fg:w="1"/><text x="14.3323%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="14.1541%" y="501" width="0.0598%" height="15" fill="rgb(222,191,20)" fg:x="1183" fg:w="5"/><text x="14.4041%" y="511.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (5 samples, 0.06%)</title><rect x="14.1541%" y="485" width="0.0598%" height="15" fill="rgb(245,79,54)" fg:x="1183" fg:w="5"/><text x="14.4041%" y="495.50"></text></g><g><title>yt_history::model::Models::find_or_create_channel (145 samples, 1.73%)</title><rect x="14.0943%" y="565" width="1.7349%" height="15" fill="rgb(240,10,37)" fg:x="1178" fg:w="145"/><text x="14.3443%" y="575.50"></text></g><g><title>yt_history::model::Models::find_channel (145 samples, 1.73%)</title><rect x="14.0943%" y="549" width="1.7349%" height="15" fill="rgb(214,192,32)" fg:x="1178" fg:w="145"/><text x="14.3443%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (145 samples, 1.73%)</title><rect x="14.0943%" y="533" width="1.7349%" height="15" fill="rgb(209,36,54)" fg:x="1178" fg:w="145"/><text x="14.3443%" y="543.50"></text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (144 samples, 1.72%)</title><rect x="14.1062%" y="517" width="1.7229%" height="15" fill="rgb(220,10,11)" fg:x="1179" fg:w="144"/><text x="14.3562%" y="527.50"></text></g><g><title>yt_history::model::WhereChannel::matches (135 samples, 1.62%)</title><rect x="14.2139%" y="501" width="1.6152%" height="15" fill="rgb(221,106,17)" fg:x="1188" fg:w="135"/><text x="14.4639%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (124 samples, 1.48%)</title><rect x="14.3455%" y="485" width="1.4836%" height="15" fill="rgb(251,142,44)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="495.50"></text></g><g><title>core::cmp::PartialEq::ne (124 samples, 1.48%)</title><rect x="14.3455%" y="469" width="1.4836%" height="15" fill="rgb(238,13,15)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (124 samples, 1.48%)</title><rect x="14.3455%" y="453" width="1.4836%" height="15" fill="rgb(208,107,27)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="463.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (124 samples, 1.48%)</title><rect x="14.3455%" y="437" width="1.4836%" height="15" fill="rgb(205,136,37)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (124 samples, 1.48%)</title><rect x="14.3455%" y="421" width="1.4836%" height="15" fill="rgb(250,205,27)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="431.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (124 samples, 1.48%)</title><rect x="14.3455%" y="405" width="1.4836%" height="15" fill="rgb(210,80,43)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="415.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (124 samples, 1.48%)</title><rect x="14.3455%" y="389" width="1.4836%" height="15" fill="rgb(247,160,36)" fg:x="1199" fg:w="124"/><text x="14.5955%" y="399.50"></text></g><g><title>[libc.so.6] (121 samples, 1.45%)</title><rect x="14.3814%" y="373" width="1.4477%" height="15" fill="rgb(234,13,49)" fg:x="1202" fg:w="121"/><text x="14.6314%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="16.1043%" y="533" width="0.0120%" height="15" fill="rgb(234,122,0)" fg:x="1346" fg:w="1"/><text x="16.3543%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (109 samples, 1.30%)</title><rect x="16.4274%" y="517" width="1.3041%" height="15" fill="rgb(207,146,38)" fg:x="1373" fg:w="109"/><text x="16.6774%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (106 samples, 1.27%)</title><rect x="16.4633%" y="501" width="1.2682%" height="15" fill="rgb(207,177,25)" fg:x="1376" fg:w="106"/><text x="16.7133%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (65 samples, 0.78%)</title><rect x="16.9538%" y="485" width="0.7777%" height="15" fill="rgb(211,178,42)" fg:x="1417" fg:w="65"/><text x="17.2038%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (65 samples, 0.78%)</title><rect x="16.9538%" y="469" width="0.7777%" height="15" fill="rgb(230,69,54)" fg:x="1417" fg:w="65"/><text x="17.2038%" y="479.50"></text></g><g><title>core::mem::replace (65 samples, 0.78%)</title><rect x="16.9538%" y="453" width="0.7777%" height="15" fill="rgb(214,135,41)" fg:x="1417" fg:w="65"/><text x="17.2038%" y="463.50"></text></g><g><title>core::ptr::write (65 samples, 0.78%)</title><rect x="16.9538%" y="437" width="0.7777%" height="15" fill="rgb(237,67,25)" fg:x="1417" fg:w="65"/><text x="17.2038%" y="447.50"></text></g><g><title>core::cmp::PartialEq::ne (1,737 samples, 20.78%)</title><rect x="22.8763%" y="501" width="20.7825%" height="15" fill="rgb(222,189,50)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="511.50">core::cmp::PartialEq::ne</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1,737 samples, 20.78%)</title><rect x="22.8763%" y="485" width="20.7825%" height="15" fill="rgb(245,148,34)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="495.50">&lt;alloc::string::String as core::c..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,737 samples, 20.78%)</title><rect x="22.8763%" y="469" width="20.7825%" height="15" fill="rgb(222,29,6)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="479.50">core::str::traits::&lt;impl core::cm..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,737 samples, 20.78%)</title><rect x="22.8763%" y="453" width="20.7825%" height="15" fill="rgb(221,189,43)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="463.50">core::cmp::impls::&lt;impl core::cmp..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,737 samples, 20.78%)</title><rect x="22.8763%" y="437" width="20.7825%" height="15" fill="rgb(207,36,27)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="447.50">core::slice::cmp::&lt;impl core::cmp..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,737 samples, 20.78%)</title><rect x="22.8763%" y="421" width="20.7825%" height="15" fill="rgb(217,90,24)" fg:x="1912" fg:w="1737"/><text x="23.1263%" y="431.50">&lt;[A] as core::slice::cmp::SlicePa..</text></g><g><title>[libc.so.6] (1,657 samples, 19.83%)</title><rect x="23.8335%" y="405" width="19.8253%" height="15" fill="rgb(224,66,35)" fg:x="1992" fg:w="1657"/><text x="24.0835%" y="415.50">[libc.so.6]</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,337 samples, 27.96%)</title><rect x="15.8411%" y="549" width="27.9612%" height="15" fill="rgb(221,13,50)" fg:x="1324" fg:w="2337"/><text x="16.0911%" y="559.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::tr..</text></g><g><title>yt_history::model::Models::find_video::{{closure}} (2,314 samples, 27.69%)</title><rect x="16.1163%" y="533" width="27.6860%" height="15" fill="rgb(236,68,49)" fg:x="1347" fg:w="2314"/><text x="16.3663%" y="543.50">yt_history::model::Models::find_video::{{clo..</text></g><g><title>yt_history::model::WhereVideo::matches (2,179 samples, 26.07%)</title><rect x="17.7315%" y="517" width="26.0708%" height="15" fill="rgb(229,146,28)" fg:x="1482" fg:w="2179"/><text x="17.9815%" y="527.50">yt_history::model::WhereVideo::matches</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (12 samples, 0.14%)</title><rect x="43.6588%" y="501" width="0.1436%" height="15" fill="rgb(225,31,38)" fg:x="3649" fg:w="12"/><text x="43.9088%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.14%)</title><rect x="43.6588%" y="485" width="0.1436%" height="15" fill="rgb(250,208,3)" fg:x="3649" fg:w="12"/><text x="43.9088%" y="495.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (2 samples, 0.02%)</title><rect x="43.7784%" y="469" width="0.0239%" height="15" fill="rgb(246,54,23)" fg:x="3659" fg:w="2"/><text x="44.0284%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="43.7784%" y="453" width="0.0239%" height="15" fill="rgb(243,76,11)" fg:x="3659" fg:w="2"/><text x="44.0284%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="43.7784%" y="437" width="0.0239%" height="15" fill="rgb(245,21,50)" fg:x="3659" fg:w="2"/><text x="44.0284%" y="447.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="43.7784%" y="421" width="0.0239%" height="15" fill="rgb(228,9,43)" fg:x="3659" fg:w="2"/><text x="44.0284%" y="431.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="43.7784%" y="405" width="0.0239%" height="15" fill="rgb(208,100,47)" fg:x="3659" fg:w="2"/><text x="44.0284%" y="415.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="43.8143%" y="421" width="0.0239%" height="15" fill="rgb(232,26,8)" fg:x="3662" fg:w="2"/><text x="44.0643%" y="431.50"></text></g><g><title>yt_history::model::Models::find_video (2,345 samples, 28.06%)</title><rect x="15.8291%" y="565" width="28.0570%" height="15" fill="rgb(216,166,38)" fg:x="1323" fg:w="2345"/><text x="16.0791%" y="575.50">yt_history::model::Models::find_video</text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::WhereVideo&gt; (7 samples, 0.08%)</title><rect x="43.8023%" y="549" width="0.0838%" height="15" fill="rgb(251,202,51)" fg:x="3661" fg:w="7"/><text x="44.0523%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::string::String&gt;&gt; (6 samples, 0.07%)</title><rect x="43.8143%" y="533" width="0.0718%" height="15" fill="rgb(254,216,34)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.07%)</title><rect x="43.8143%" y="517" width="0.0718%" height="15" fill="rgb(251,32,27)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.07%)</title><rect x="43.8143%" y="501" width="0.0718%" height="15" fill="rgb(208,127,28)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.07%)</title><rect x="43.8143%" y="485" width="0.0718%" height="15" fill="rgb(224,137,22)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="495.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="43.8143%" y="469" width="0.0718%" height="15" fill="rgb(254,70,32)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="43.8143%" y="453" width="0.0718%" height="15" fill="rgb(229,75,37)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="463.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="43.8143%" y="437" width="0.0718%" height="15" fill="rgb(252,64,23)" fg:x="3662" fg:w="6"/><text x="44.0643%" y="447.50"></text></g><g><title>cfree (4 samples, 0.05%)</title><rect x="43.8382%" y="421" width="0.0479%" height="15" fill="rgb(232,162,48)" fg:x="3664" fg:w="4"/><text x="44.0882%" y="431.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="43.8502%" y="405" width="0.0359%" height="15" fill="rgb(246,160,12)" fg:x="3665" fg:w="3"/><text x="44.1002%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::new (5 samples, 0.06%)</title><rect x="43.8861%" y="549" width="0.0598%" height="15" fill="rgb(247,166,0)" fg:x="3668" fg:w="5"/><text x="44.1361%" y="559.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="43.9220%" y="533" width="0.0239%" height="15" fill="rgb(249,219,21)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="543.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="43.9220%" y="517" width="0.0239%" height="15" fill="rgb(205,209,3)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="43.9220%" y="501" width="0.0239%" height="15" fill="rgb(243,44,1)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="43.9220%" y="485" width="0.0239%" height="15" fill="rgb(206,159,16)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="495.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="43.9220%" y="469" width="0.0239%" height="15" fill="rgb(244,77,30)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="479.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="43.9220%" y="453" width="0.0239%" height="15" fill="rgb(218,69,12)" fg:x="3671" fg:w="2"/><text x="44.1720%" y="463.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="43.9938%" y="501" width="0.0239%" height="15" fill="rgb(212,87,7)" fg:x="3677" fg:w="2"/><text x="44.2438%" y="511.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (2 samples, 0.02%)</title><rect x="43.9938%" y="485" width="0.0239%" height="15" fill="rgb(245,114,25)" fg:x="3677" fg:w="2"/><text x="44.2438%" y="495.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (105 samples, 1.26%)</title><rect x="43.9459%" y="533" width="1.2563%" height="15" fill="rgb(210,61,42)" fg:x="3673" fg:w="105"/><text x="44.1959%" y="543.50"></text></g><g><title>yt_history::model::Models::find_channel::{{closure}} (102 samples, 1.22%)</title><rect x="43.9818%" y="517" width="1.2204%" height="15" fill="rgb(211,52,33)" fg:x="3676" fg:w="102"/><text x="44.2318%" y="527.50"></text></g><g><title>yt_history::model::WhereChannel::matches (99 samples, 1.18%)</title><rect x="44.0177%" y="501" width="1.1845%" height="15" fill="rgb(234,58,33)" fg:x="3679" fg:w="99"/><text x="44.2677%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (91 samples, 1.09%)</title><rect x="44.1134%" y="485" width="1.0888%" height="15" fill="rgb(220,115,36)" fg:x="3687" fg:w="91"/><text x="44.3634%" y="495.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (91 samples, 1.09%)</title><rect x="44.1134%" y="469" width="1.0888%" height="15" fill="rgb(243,153,54)" fg:x="3687" fg:w="91"/><text x="44.3634%" y="479.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (91 samples, 1.09%)</title><rect x="44.1134%" y="453" width="1.0888%" height="15" fill="rgb(251,47,18)" fg:x="3687" fg:w="91"/><text x="44.3634%" y="463.50"></text></g><g><title>&lt;yt_history::model::Channel as core::cmp::PartialEq&gt;::eq (91 samples, 1.09%)</title><rect x="44.1134%" y="437" width="1.0888%" height="15" fill="rgb(242,102,42)" fg:x="3687" fg:w="91"/><text x="44.3634%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (89 samples, 1.06%)</title><rect x="44.1374%" y="421" width="1.0648%" height="15" fill="rgb(234,31,38)" fg:x="3689" fg:w="89"/><text x="44.3874%" y="431.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (89 samples, 1.06%)</title><rect x="44.1374%" y="405" width="1.0648%" height="15" fill="rgb(221,117,51)" fg:x="3689" fg:w="89"/><text x="44.3874%" y="415.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (89 samples, 1.06%)</title><rect x="44.1374%" y="389" width="1.0648%" height="15" fill="rgb(212,20,18)" fg:x="3689" fg:w="89"/><text x="44.3874%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (89 samples, 1.06%)</title><rect x="44.1374%" y="373" width="1.0648%" height="15" fill="rgb(245,133,36)" fg:x="3689" fg:w="89"/><text x="44.3874%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (89 samples, 1.06%)</title><rect x="44.1374%" y="357" width="1.0648%" height="15" fill="rgb(212,6,19)" fg:x="3689" fg:w="89"/><text x="44.3874%" y="367.50"></text></g><g><title>[libc.so.6] (87 samples, 1.04%)</title><rect x="44.1613%" y="341" width="1.0409%" height="15" fill="rgb(218,1,36)" fg:x="3691" fg:w="87"/><text x="44.4113%" y="351.50"></text></g><g><title>yt_history::model::Models::find_or_create_video (2,617 samples, 31.31%)</title><rect x="13.9028%" y="581" width="31.3113%" height="15" fill="rgb(246,84,54)" fg:x="1162" fg:w="2617"/><text x="14.1528%" y="591.50">yt_history::model::Models::find_or_create_video</text></g><g><title>yt_history::model::Models::insert_video (111 samples, 1.33%)</title><rect x="43.8861%" y="565" width="1.3281%" height="15" fill="rgb(242,110,6)" fg:x="3668" fg:w="111"/><text x="44.1361%" y="575.50"></text></g><g><title>yt_history::model::Models::find_channel (106 samples, 1.27%)</title><rect x="43.9459%" y="549" width="1.2682%" height="15" fill="rgb(214,47,5)" fg:x="3673" fg:w="106"/><text x="44.1959%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;yt_history::model::WhereChannel&gt; (1 samples, 0.01%)</title><rect x="45.2022%" y="533" width="0.0120%" height="15" fill="rgb(218,159,25)" fg:x="3778" fg:w="1"/><text x="45.4522%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="45.2381%" y="565" width="0.0120%" height="15" fill="rgb(215,211,28)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (1 samples, 0.01%)</title><rect x="45.2381%" y="549" width="0.0120%" height="15" fill="rgb(238,59,32)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="45.2381%" y="533" width="0.0120%" height="15" fill="rgb(226,82,3)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="45.2381%" y="517" width="0.0120%" height="15" fill="rgb(240,164,32)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="45.2381%" y="501" width="0.0120%" height="15" fill="rgb(232,46,7)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="511.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="45.2381%" y="485" width="0.0120%" height="15" fill="rgb(229,129,53)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="495.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="45.2381%" y="469" width="0.0120%" height="15" fill="rgb(234,188,29)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="479.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="45.2381%" y="453" width="0.0120%" height="15" fill="rgb(246,141,4)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="45.2381%" y="437" width="0.0120%" height="15" fill="rgb(229,23,39)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="447.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="45.2381%" y="421" width="0.0120%" height="15" fill="rgb(206,12,3)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="431.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.2381%" y="405" width="0.0120%" height="15" fill="rgb(252,226,20)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="415.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.2381%" y="389" width="0.0120%" height="15" fill="rgb(216,123,35)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="399.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="45.2381%" y="373" width="0.0120%" height="15" fill="rgb(212,68,40)" fg:x="3781" fg:w="1"/><text x="45.4881%" y="383.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="45.6808%" y="533" width="0.0120%" height="15" fill="rgb(254,125,32)" fg:x="3818" fg:w="1"/><text x="45.9308%" y="543.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::clone::Clone&gt;::clone (118 samples, 1.41%)</title><rect x="45.9799%" y="517" width="1.4118%" height="15" fill="rgb(253,97,22)" fg:x="3843" fg:w="118"/><text x="46.2299%" y="527.50"></text></g><g><title>alloc::rc::RcInnerPtr::inc_strong (113 samples, 1.35%)</title><rect x="46.0397%" y="501" width="1.3520%" height="15" fill="rgb(241,101,14)" fg:x="3848" fg:w="113"/><text x="46.2897%" y="511.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (82 samples, 0.98%)</title><rect x="46.4106%" y="485" width="0.9811%" height="15" fill="rgb(238,103,29)" fg:x="3879" fg:w="82"/><text x="46.6606%" y="495.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (82 samples, 0.98%)</title><rect x="46.4106%" y="469" width="0.9811%" height="15" fill="rgb(233,195,47)" fg:x="3879" fg:w="82"/><text x="46.6606%" y="479.50"></text></g><g><title>core::mem::replace (82 samples, 0.98%)</title><rect x="46.4106%" y="453" width="0.9811%" height="15" fill="rgb(246,218,30)" fg:x="3879" fg:w="82"/><text x="46.6606%" y="463.50"></text></g><g><title>core::ptr::write (82 samples, 0.98%)</title><rect x="46.4106%" y="437" width="0.9811%" height="15" fill="rgb(219,145,47)" fg:x="3879" fg:w="82"/><text x="46.6606%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="51.9742%" y="405" width="0.0239%" height="15" fill="rgb(243,12,26)" fg:x="4344" fg:w="2"/><text x="52.2242%" y="415.50"></text></g><g><title>alloc::rc::Rc&lt;T&gt;::inner (2 samples, 0.02%)</title><rect x="51.9742%" y="389" width="0.0239%" height="15" fill="rgb(214,87,16)" fg:x="4344" fg:w="2"/><text x="52.2242%" y="399.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="51.9742%" y="373" width="0.0239%" height="15" fill="rgb(208,99,42)" fg:x="4344" fg:w="2"/><text x="52.2242%" y="383.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="51.9742%" y="437" width="0.0718%" height="15" fill="rgb(253,99,2)" fg:x="4344" fg:w="6"/><text x="52.2242%" y="447.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (6 samples, 0.07%)</title><rect x="51.9742%" y="421" width="0.0718%" height="15" fill="rgb(220,168,23)" fg:x="4344" fg:w="6"/><text x="52.2242%" y="431.50"></text></g><g><title>&lt;yt_history::model::Channel as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="51.9981%" y="405" width="0.0479%" height="15" fill="rgb(242,38,24)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="51.9981%" y="389" width="0.0479%" height="15" fill="rgb(225,182,9)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="399.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (4 samples, 0.05%)</title><rect x="51.9981%" y="373" width="0.0479%" height="15" fill="rgb(243,178,37)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="51.9981%" y="357" width="0.0479%" height="15" fill="rgb(232,139,19)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="367.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="51.9981%" y="341" width="0.0479%" height="15" fill="rgb(225,201,24)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="51.9981%" y="325" width="0.0479%" height="15" fill="rgb(221,47,46)" fg:x="4346" fg:w="4"/><text x="52.2481%" y="335.50"></text></g><g><title>[libc.so.6] (3 samples, 0.04%)</title><rect x="52.0101%" y="309" width="0.0359%" height="15" fill="rgb(249,23,13)" fg:x="4347" fg:w="3"/><text x="52.2601%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,881 samples, 22.51%)</title><rect x="51.1007%" y="501" width="22.5054%" height="15" fill="rgb(219,9,5)" fg:x="4271" fg:w="1881"/><text x="51.3507%" y="511.50">core::cmp::impls::&lt;impl core::cmp::P..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1,881 samples, 22.51%)</title><rect x="51.1007%" y="485" width="22.5054%" height="15" fill="rgb(254,171,16)" fg:x="4271" fg:w="1881"/><text x="51.3507%" y="495.50">&lt;alloc::rc::Rc&lt;T&gt; as core::cmp::Part..</text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEqIdent&lt;T&gt;&gt;::eq (1,881 samples, 22.51%)</title><rect x="51.1007%" y="469" width="22.5054%" height="15" fill="rgb(230,171,20)" fg:x="4271" fg:w="1881"/><text x="51.3507%" y="479.50">&lt;alloc::rc::Rc&lt;T&gt; as alloc::rc::RcEq..</text></g><g><title>&lt;yt_history::model::Video as core::cmp::PartialEq&gt;::eq (1,881 samples, 22.51%)</title><rect x="51.1007%" y="453" width="22.5054%" height="15" fill="rgb(210,71,41)" fg:x="4271" fg:w="1881"/><text x="51.3507%" y="463.50">&lt;yt_history::model::Video as core::c..</text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1,802 samples, 21.56%)</title><rect x="52.0459%" y="437" width="21.5602%" height="15" fill="rgb(206,173,20)" fg:x="4350" fg:w="1802"/><text x="52.2959%" y="447.50">&lt;alloc::string::String as core::cm..</text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1,802 samples, 21.56%)</title><rect x="52.0459%" y="421" width="21.5602%" height="15" fill="rgb(233,88,34)" fg:x="4350" fg:w="1802"/><text x="52.2959%" y="431.50">core::str::traits::&lt;impl core::cmp..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,802 samples, 21.56%)</title><rect x="52.0459%" y="405" width="21.5602%" height="15" fill="rgb(223,209,46)" fg:x="4350" fg:w="1802"/><text x="52.2959%" y="415.50">core::cmp::impls::&lt;impl core::cmp:..</text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1,802 samples, 21.56%)</title><rect x="52.0459%" y="389" width="21.5602%" height="15" fill="rgb(250,43,18)" fg:x="4350" fg:w="1802"/><text x="52.2959%" y="399.50">core::slice::cmp::&lt;impl core::cmp:..</text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1,802 samples, 21.56%)</title><rect x="52.0459%" y="373" width="21.5602%" height="15" fill="rgb(208,13,10)" fg:x="4350" fg:w="1802"/><text x="52.2959%" y="383.50">&lt;[A] as core::slice::cmp::SlicePar..</text></g><g><title>[libc.so.6] (1,732 samples, 20.72%)</title><rect x="52.8835%" y="357" width="20.7227%" height="15" fill="rgb(212,200,36)" fg:x="4420" fg:w="1732"/><text x="53.1335%" y="367.50">[libc.so.6]</text></g><g><title>yt_history::model::Models::insert_watched (2,382 samples, 28.50%)</title><rect x="45.2142%" y="581" width="28.4996%" height="15" fill="rgb(225,90,30)" fg:x="3779" fg:w="2382"/><text x="45.4642%" y="591.50">yt_history::model::Models::insert_watched</text></g><g><title>yt_history::model::Models::find_video (2,379 samples, 28.46%)</title><rect x="45.2501%" y="565" width="28.4637%" height="15" fill="rgb(236,182,39)" fg:x="3782" fg:w="2379"/><text x="45.5001%" y="575.50">yt_history::model::Models::find_video</text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,378 samples, 28.45%)</title><rect x="45.2620%" y="549" width="28.4518%" height="15" fill="rgb(212,144,35)" fg:x="3783" fg:w="2378"/><text x="45.5120%" y="559.50">&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::tra..</text></g><g><title>yt_history::model::Models::find_video::{{closure}} (2,342 samples, 28.02%)</title><rect x="45.6927%" y="533" width="28.0211%" height="15" fill="rgb(228,63,44)" fg:x="3819" fg:w="2342"/><text x="45.9427%" y="543.50">yt_history::model::Models::find_video::{{clos..</text></g><g><title>yt_history::model::WhereVideo::matches (2,200 samples, 26.32%)</title><rect x="47.3917%" y="517" width="26.3221%" height="15" fill="rgb(228,109,6)" fg:x="3961" fg:w="2200"/><text x="47.6417%" y="527.50">yt_history::model::WhereVideo::matches</text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;yt_history::model::Video&gt;&gt; (9 samples, 0.11%)</title><rect x="73.6061%" y="501" width="0.1077%" height="15" fill="rgb(238,117,24)" fg:x="6152" fg:w="9"/><text x="73.8561%" y="511.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="73.6061%" y="485" width="0.1077%" height="15" fill="rgb(242,26,26)" fg:x="6152" fg:w="9"/><text x="73.8561%" y="495.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_strong (1 samples, 0.01%)</title><rect x="73.7018%" y="469" width="0.0120%" height="15" fill="rgb(221,92,48)" fg:x="6160" fg:w="1"/><text x="73.9518%" y="479.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="73.7018%" y="453" width="0.0120%" height="15" fill="rgb(209,209,32)" fg:x="6160" fg:w="1"/><text x="73.9518%" y="463.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="73.7018%" y="437" width="0.0120%" height="15" fill="rgb(221,70,22)" fg:x="6160" fg:w="1"/><text x="73.9518%" y="447.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="73.7018%" y="421" width="0.0120%" height="15" fill="rgb(248,145,5)" fg:x="6160" fg:w="1"/><text x="73.9518%" y="431.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="73.7018%" y="405" width="0.0120%" height="15" fill="rgb(226,116,26)" fg:x="6160" fg:w="1"/><text x="73.9518%" y="415.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="73.7976%" y="341" width="0.0120%" height="15" fill="rgb(244,5,17)" fg:x="6168" fg:w="1"/><text x="74.0476%" y="351.50"></text></g><g><title>__rust_alloc (2 samples, 0.02%)</title><rect x="73.8095%" y="341" width="0.0239%" height="15" fill="rgb(252,159,33)" fg:x="6169" fg:w="2"/><text x="74.0595%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="73.7856%" y="437" width="0.1077%" height="15" fill="rgb(206,71,0)" fg:x="6167" fg:w="9"/><text x="74.0356%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (9 samples, 0.11%)</title><rect x="73.7856%" y="421" width="0.1077%" height="15" fill="rgb(233,118,54)" fg:x="6167" fg:w="9"/><text x="74.0356%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (9 samples, 0.11%)</title><rect x="73.7856%" y="405" width="0.1077%" height="15" fill="rgb(234,83,48)" fg:x="6167" fg:w="9"/><text x="74.0356%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (8 samples, 0.10%)</title><rect x="73.7976%" y="389" width="0.0957%" height="15" fill="rgb(228,3,54)" fg:x="6168" fg:w="8"/><text x="74.0476%" y="399.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (8 samples, 0.10%)</title><rect x="73.7976%" y="373" width="0.0957%" height="15" fill="rgb(226,155,13)" fg:x="6168" fg:w="8"/><text x="74.0476%" y="383.50"></text></g><g><title>alloc::alloc::alloc (8 samples, 0.10%)</title><rect x="73.7976%" y="357" width="0.0957%" height="15" fill="rgb(241,28,37)" fg:x="6168" fg:w="8"/><text x="74.0476%" y="367.50"></text></g><g><title>malloc (5 samples, 0.06%)</title><rect x="73.8335%" y="341" width="0.0598%" height="15" fill="rgb(233,93,10)" fg:x="6171" fg:w="5"/><text x="74.0835%" y="351.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.8813%" y="325" width="0.0120%" height="15" fill="rgb(225,113,19)" fg:x="6175" fg:w="1"/><text x="74.1313%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (10 samples, 0.12%)</title><rect x="73.7856%" y="549" width="0.1196%" height="15" fill="rgb(241,2,18)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="559.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (10 samples, 0.12%)</title><rect x="73.7856%" y="533" width="0.1196%" height="15" fill="rgb(228,207,21)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="543.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (10 samples, 0.12%)</title><rect x="73.7856%" y="517" width="0.1196%" height="15" fill="rgb(213,211,35)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="527.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (10 samples, 0.12%)</title><rect x="73.7856%" y="501" width="0.1196%" height="15" fill="rgb(209,83,10)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (10 samples, 0.12%)</title><rect x="73.7856%" y="485" width="0.1196%" height="15" fill="rgb(209,164,1)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="495.50"></text></g><g><title>alloc::slice::hack::to_vec (10 samples, 0.12%)</title><rect x="73.7856%" y="469" width="0.1196%" height="15" fill="rgb(213,184,43)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="479.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (10 samples, 0.12%)</title><rect x="73.7856%" y="453" width="0.1196%" height="15" fill="rgb(231,61,34)" fg:x="6167" fg:w="10"/><text x="74.0356%" y="463.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="73.8933%" y="437" width="0.0120%" height="15" fill="rgb(235,75,3)" fg:x="6176" fg:w="1"/><text x="74.1433%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="73.8933%" y="421" width="0.0120%" height="15" fill="rgb(220,106,47)" fg:x="6176" fg:w="1"/><text x="74.1433%" y="431.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="73.9292%" y="309" width="0.0120%" height="15" fill="rgb(210,196,33)" fg:x="6179" fg:w="1"/><text x="74.1792%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="73.9292%" y="293" width="0.0120%" height="15" fill="rgb(229,154,42)" fg:x="6179" fg:w="1"/><text x="74.1792%" y="303.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (15 samples, 0.18%)</title><rect x="73.7856%" y="565" width="0.1795%" height="15" fill="rgb(228,114,26)" fg:x="6167" fg:w="15"/><text x="74.0356%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;char&gt;&gt;::from (5 samples, 0.06%)</title><rect x="73.9052%" y="549" width="0.0598%" height="15" fill="rgb(208,144,1)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="559.50"></text></g><g><title>&lt;char as alloc::string::ToString&gt;::to_string (5 samples, 0.06%)</title><rect x="73.9052%" y="533" width="0.0598%" height="15" fill="rgb(239,112,37)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;mut str&gt;&gt;::from (5 samples, 0.06%)</title><rect x="73.9052%" y="517" width="0.0598%" height="15" fill="rgb(210,96,50)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="527.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.06%)</title><rect x="73.9052%" y="501" width="0.0598%" height="15" fill="rgb(222,178,2)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="511.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.06%)</title><rect x="73.9052%" y="485" width="0.0598%" height="15" fill="rgb(226,74,18)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="495.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.06%)</title><rect x="73.9052%" y="469" width="0.0598%" height="15" fill="rgb(225,67,54)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="479.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.06%)</title><rect x="73.9052%" y="453" width="0.0598%" height="15" fill="rgb(251,92,32)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="463.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.06%)</title><rect x="73.9052%" y="437" width="0.0598%" height="15" fill="rgb(228,149,22)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="447.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.06%)</title><rect x="73.9052%" y="421" width="0.0598%" height="15" fill="rgb(243,54,13)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="73.9052%" y="405" width="0.0598%" height="15" fill="rgb(243,180,28)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.06%)</title><rect x="73.9052%" y="389" width="0.0598%" height="15" fill="rgb(208,167,24)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.06%)</title><rect x="73.9052%" y="373" width="0.0598%" height="15" fill="rgb(245,73,45)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.06%)</title><rect x="73.9052%" y="357" width="0.0598%" height="15" fill="rgb(237,203,48)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.06%)</title><rect x="73.9052%" y="341" width="0.0598%" height="15" fill="rgb(211,197,16)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="351.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="73.9052%" y="325" width="0.0598%" height="15" fill="rgb(243,99,51)" fg:x="6177" fg:w="5"/><text x="74.1552%" y="335.50"></text></g><g><title>malloc (2 samples, 0.02%)</title><rect x="73.9411%" y="309" width="0.0239%" height="15" fill="rgb(215,123,29)" fg:x="6180" fg:w="2"/><text x="74.1911%" y="319.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9531%" y="293" width="0.0120%" height="15" fill="rgb(239,186,37)" fg:x="6181" fg:w="1"/><text x="74.2031%" y="303.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="73.9531%" y="277" width="0.0120%" height="15" fill="rgb(252,136,39)" fg:x="6181" fg:w="1"/><text x="74.2031%" y="287.50"></text></g><g><title>&lt;yt_history::DataRow as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="73.9651%" y="565" width="0.0120%" height="15" fill="rgb(223,213,32)" fg:x="6182" fg:w="1"/><text x="74.2151%" y="575.50"></text></g><g><title>&lt;core::str::iter::MatchIndices&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.34%)</title><rect x="74.0129%" y="549" width="0.3350%" height="15" fill="rgb(233,115,5)" fg:x="6186" fg:w="28"/><text x="74.2629%" y="559.50"></text></g><g><title>core::str::iter::MatchIndicesInternal&lt;P&gt;::next (28 samples, 0.34%)</title><rect x="74.0129%" y="533" width="0.3350%" height="15" fill="rgb(207,226,44)" fg:x="6186" fg:w="28"/><text x="74.2629%" y="543.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (28 samples, 0.34%)</title><rect x="74.0129%" y="517" width="0.3350%" height="15" fill="rgb(208,126,0)" fg:x="6186" fg:w="28"/><text x="74.2629%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (21 samples, 0.25%)</title><rect x="74.0967%" y="501" width="0.2513%" height="15" fill="rgb(244,66,21)" fg:x="6193" fg:w="21"/><text x="74.3467%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_contains (2 samples, 0.02%)</title><rect x="74.3240%" y="485" width="0.0239%" height="15" fill="rgb(222,97,12)" fg:x="6212" fg:w="2"/><text x="74.5740%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="74.4078%" y="405" width="0.0120%" height="15" fill="rgb(219,213,19)" fg:x="6219" fg:w="1"/><text x="74.6578%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="74.4078%" y="389" width="0.0120%" height="15" fill="rgb(252,169,30)" fg:x="6219" fg:w="1"/><text x="74.6578%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="74.4078%" y="373" width="0.0120%" height="15" fill="rgb(206,32,51)" fg:x="6219" fg:w="1"/><text x="74.6578%" y="383.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="74.4078%" y="357" width="0.0120%" height="15" fill="rgb(250,172,42)" fg:x="6219" fg:w="1"/><text x="74.6578%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="74.4078%" y="341" width="0.0120%" height="15" fill="rgb(209,34,43)" fg:x="6219" fg:w="1"/><text x="74.6578%" y="351.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="74.4197%" y="405" width="0.0239%" height="15" fill="rgb(223,11,35)" fg:x="6220" fg:w="2"/><text x="74.6697%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="74.4197%" y="389" width="0.0239%" height="15" fill="rgb(251,219,26)" fg:x="6220" fg:w="2"/><text x="74.6697%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.14%)</title><rect x="74.3838%" y="421" width="0.1436%" height="15" fill="rgb(231,119,3)" fg:x="6217" fg:w="12"/><text x="74.6338%" y="431.50"></text></g><g><title>malloc (7 samples, 0.08%)</title><rect x="74.4436%" y="405" width="0.0838%" height="15" fill="rgb(216,97,11)" fg:x="6222" fg:w="7"/><text x="74.6936%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.17%)</title><rect x="74.3838%" y="437" width="0.1675%" height="15" fill="rgb(223,59,9)" fg:x="6217" fg:w="14"/><text x="74.6338%" y="447.50"></text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="74.5274%" y="421" width="0.0239%" height="15" fill="rgb(233,93,31)" fg:x="6229" fg:w="2"/><text x="74.7774%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="74.5274%" y="405" width="0.0239%" height="15" fill="rgb(239,81,33)" fg:x="6229" fg:w="2"/><text x="74.7774%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.22%)</title><rect x="74.3479%" y="485" width="0.2154%" height="15" fill="rgb(213,120,34)" fg:x="6214" fg:w="18"/><text x="74.5979%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.22%)</title><rect x="74.3479%" y="469" width="0.2154%" height="15" fill="rgb(243,49,53)" fg:x="6214" fg:w="18"/><text x="74.5979%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.20%)</title><rect x="74.3599%" y="453" width="0.2034%" height="15" fill="rgb(247,216,33)" fg:x="6215" fg:w="17"/><text x="74.6099%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="74.5513%" y="437" width="0.0120%" height="15" fill="rgb(226,26,14)" fg:x="6231" fg:w="1"/><text x="74.8013%" y="447.50"></text></g><g><title>alloc::string::String::push_str (19 samples, 0.23%)</title><rect x="74.3479%" y="549" width="0.2273%" height="15" fill="rgb(215,49,53)" fg:x="6214" fg:w="19"/><text x="74.5979%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (19 samples, 0.23%)</title><rect x="74.3479%" y="533" width="0.2273%" height="15" fill="rgb(245,162,40)" fg:x="6214" fg:w="19"/><text x="74.5979%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (19 samples, 0.23%)</title><rect x="74.3479%" y="517" width="0.2273%" height="15" fill="rgb(229,68,17)" fg:x="6214" fg:w="19"/><text x="74.5979%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (19 samples, 0.23%)</title><rect x="74.3479%" y="501" width="0.2273%" height="15" fill="rgb(213,182,10)" fg:x="6214" fg:w="19"/><text x="74.5979%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="74.5633%" y="485" width="0.0120%" height="15" fill="rgb(245,125,30)" fg:x="6232" fg:w="1"/><text x="74.8133%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="74.5633%" y="469" width="0.0120%" height="15" fill="rgb(232,202,2)" fg:x="6232" fg:w="1"/><text x="74.8133%" y="479.50"></text></g><g><title>core::str::&lt;impl str&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="74.5753%" y="549" width="0.0239%" height="15" fill="rgb(237,140,51)" fg:x="6233" fg:w="2"/><text x="74.8253%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::Range&lt;usize&gt;&gt;::get_unchecked (2 samples, 0.02%)</title><rect x="74.5753%" y="533" width="0.0239%" height="15" fill="rgb(236,157,25)" fg:x="6233" fg:w="2"/><text x="74.8253%" y="543.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="74.5753%" y="517" width="0.0239%" height="15" fill="rgb(219,209,0)" fg:x="6233" fg:w="2"/><text x="74.8253%" y="527.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="74.5753%" y="501" width="0.0239%" height="15" fill="rgb(240,116,54)" fg:x="6233" fg:w="2"/><text x="74.8253%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.05%)</title><rect x="74.6590%" y="485" width="0.0479%" height="15" fill="rgb(216,10,36)" fg:x="6240" fg:w="4"/><text x="74.9090%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.05%)</title><rect x="74.6590%" y="469" width="0.0479%" height="15" fill="rgb(222,72,44)" fg:x="6240" fg:w="4"/><text x="74.9090%" y="479.50"></text></g><g><title>[libc.so.6] (4 samples, 0.05%)</title><rect x="74.6590%" y="453" width="0.0479%" height="15" fill="rgb(232,159,9)" fg:x="6240" fg:w="4"/><text x="74.9090%" y="463.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::replace (62 samples, 0.74%)</title><rect x="73.9770%" y="565" width="0.7418%" height="15" fill="rgb(210,39,32)" fg:x="6183" fg:w="62"/><text x="74.2270%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::match_indices (10 samples, 0.12%)</title><rect x="74.5992%" y="549" width="0.1196%" height="15" fill="rgb(216,194,45)" fg:x="6235" fg:w="10"/><text x="74.8492%" y="559.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::into_searcher (10 samples, 0.12%)</title><rect x="74.5992%" y="533" width="0.1196%" height="15" fill="rgb(218,18,35)" fg:x="6235" fg:w="10"/><text x="74.8492%" y="543.50"></text></g><g><title>core::str::pattern::StrSearcher::new (9 samples, 0.11%)</title><rect x="74.6112%" y="517" width="0.1077%" height="15" fill="rgb(207,83,51)" fg:x="6236" fg:w="9"/><text x="74.8612%" y="527.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::new (5 samples, 0.06%)</title><rect x="74.6590%" y="501" width="0.0598%" height="15" fill="rgb(225,63,43)" fg:x="6240" fg:w="5"/><text x="74.9090%" y="511.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::byteset_create (1 samples, 0.01%)</title><rect x="74.7069%" y="485" width="0.0120%" height="15" fill="rgb(207,57,36)" fg:x="6244" fg:w="1"/><text x="74.9569%" y="495.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="74.7069%" y="469" width="0.0120%" height="15" fill="rgb(216,99,33)" fg:x="6244" fg:w="1"/><text x="74.9569%" y="479.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.7069%" y="453" width="0.0120%" height="15" fill="rgb(225,42,16)" fg:x="6244" fg:w="1"/><text x="74.9569%" y="463.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="74.7188%" y="469" width="0.0120%" height="15" fill="rgb(220,201,45)" fg:x="6245" fg:w="1"/><text x="74.9688%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="74.7188%" y="453" width="0.0120%" height="15" fill="rgb(225,33,4)" fg:x="6245" fg:w="1"/><text x="74.9688%" y="463.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="74.7308%" y="469" width="0.0120%" height="15" fill="rgb(224,33,50)" fg:x="6246" fg:w="1"/><text x="74.9808%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (14 samples, 0.17%)</title><rect x="74.7188%" y="565" width="0.1675%" height="15" fill="rgb(246,198,51)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (14 samples, 0.17%)</title><rect x="74.7188%" y="549" width="0.1675%" height="15" fill="rgb(205,22,4)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (14 samples, 0.17%)</title><rect x="74.7188%" y="533" width="0.1675%" height="15" fill="rgb(206,3,8)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.17%)</title><rect x="74.7188%" y="517" width="0.1675%" height="15" fill="rgb(251,23,15)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (14 samples, 0.17%)</title><rect x="74.7188%" y="501" width="0.1675%" height="15" fill="rgb(252,88,28)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="511.50"></text></g><g><title>alloc::alloc::dealloc (14 samples, 0.17%)</title><rect x="74.7188%" y="485" width="0.1675%" height="15" fill="rgb(212,127,14)" fg:x="6245" fg:w="14"/><text x="74.9688%" y="495.50"></text></g><g><title>cfree (12 samples, 0.14%)</title><rect x="74.7428%" y="469" width="0.1436%" height="15" fill="rgb(247,145,37)" fg:x="6247" fg:w="12"/><text x="74.9928%" y="479.50"></text></g><g><title>[libc.so.6] (8 samples, 0.10%)</title><rect x="74.7906%" y="453" width="0.0957%" height="15" fill="rgb(209,117,53)" fg:x="6251" fg:w="8"/><text x="75.0406%" y="463.50"></text></g><g><title>core::clone::impls::&lt;impl core::clone::Clone for u8&gt;::clone (1 samples, 0.01%)</title><rect x="74.8863%" y="549" width="0.0120%" height="15" fill="rgb(212,90,42)" fg:x="6259" fg:w="1"/><text x="75.1363%" y="559.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.04%)</title><rect x="74.9222%" y="469" width="0.0359%" height="15" fill="rgb(218,164,37)" fg:x="6262" fg:w="3"/><text x="75.1722%" y="479.50"></text></g><g><title>yt_history::peek (8 samples, 0.10%)</title><rect x="74.8863%" y="565" width="0.0957%" height="15" fill="rgb(246,65,34)" fg:x="6259" fg:w="8"/><text x="75.1363%" y="575.50"></text></g><g><title>yt_history::iter_index (7 samples, 0.08%)</title><rect x="74.8983%" y="549" width="0.0838%" height="15" fill="rgb(231,100,33)" fg:x="6260" fg:w="7"/><text x="75.1483%" y="559.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (7 samples, 0.08%)</title><rect x="74.8983%" y="533" width="0.0838%" height="15" fill="rgb(228,126,14)" fg:x="6260" fg:w="7"/><text x="75.1483%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (7 samples, 0.08%)</title><rect x="74.8983%" y="517" width="0.0838%" height="15" fill="rgb(215,173,21)" fg:x="6260" fg:w="7"/><text x="75.1483%" y="527.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (5 samples, 0.06%)</title><rect x="74.9222%" y="501" width="0.0598%" height="15" fill="rgb(210,6,40)" fg:x="6262" fg:w="5"/><text x="75.1722%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="74.9222%" y="485" width="0.0598%" height="15" fill="rgb(212,48,18)" fg:x="6262" fg:w="5"/><text x="75.1722%" y="495.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="74.9581%" y="469" width="0.0239%" height="15" fill="rgb(230,214,11)" fg:x="6265" fg:w="2"/><text x="75.2081%" y="479.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (31 samples, 0.37%)</title><rect x="75.7598%" y="501" width="0.3709%" height="15" fill="rgb(254,105,39)" fg:x="6332" fg:w="31"/><text x="76.0098%" y="511.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="77.3510%" y="469" width="0.0120%" height="15" fill="rgb(245,158,5)" fg:x="6465" fg:w="1"/><text x="77.6010%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (9 samples, 0.11%)</title><rect x="77.3630%" y="469" width="0.1077%" height="15" fill="rgb(249,208,11)" fg:x="6466" fg:w="9"/><text x="77.6130%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (9 samples, 0.11%)</title><rect x="77.3630%" y="453" width="0.1077%" height="15" fill="rgb(210,39,28)" fg:x="6466" fg:w="9"/><text x="77.6130%" y="463.50"></text></g><g><title>core::cmp::min (8 samples, 0.10%)</title><rect x="77.3750%" y="437" width="0.0957%" height="15" fill="rgb(211,56,53)" fg:x="6467" fg:w="8"/><text x="77.6250%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (8 samples, 0.10%)</title><rect x="77.3750%" y="421" width="0.0957%" height="15" fill="rgb(226,201,30)" fg:x="6467" fg:w="8"/><text x="77.6250%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (2 samples, 0.02%)</title><rect x="77.4707%" y="469" width="0.0239%" height="15" fill="rgb(239,101,34)" fg:x="6475" fg:w="2"/><text x="77.7207%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (2 samples, 0.02%)</title><rect x="77.4707%" y="453" width="0.0239%" height="15" fill="rgb(226,209,5)" fg:x="6475" fg:w="2"/><text x="77.7207%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="77.4946%" y="469" width="0.0120%" height="15" fill="rgb(250,105,47)" fg:x="6477" fg:w="1"/><text x="77.7446%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::filled (4 samples, 0.05%)</title><rect x="77.5066%" y="469" width="0.0479%" height="15" fill="rgb(230,72,3)" fg:x="6478" fg:w="4"/><text x="77.7566%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (3 samples, 0.04%)</title><rect x="77.5544%" y="469" width="0.0359%" height="15" fill="rgb(232,218,39)" fg:x="6482" fg:w="3"/><text x="77.8044%" y="479.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (186 samples, 2.23%)</title><rect x="75.5324%" y="517" width="2.2254%" height="15" fill="rgb(248,166,6)" fg:x="6313" fg:w="186"/><text x="75.7824%" y="527.50">&lt;..</text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (136 samples, 1.63%)</title><rect x="76.1307%" y="501" width="1.6272%" height="15" fill="rgb(247,89,20)" fg:x="6363" fg:w="136"/><text x="76.3807%" y="511.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (73 samples, 0.87%)</title><rect x="76.8844%" y="485" width="0.8734%" height="15" fill="rgb(248,130,54)" fg:x="6426" fg:w="73"/><text x="77.1344%" y="495.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (14 samples, 0.17%)</title><rect x="77.5903%" y="469" width="0.1675%" height="15" fill="rgb(234,196,4)" fg:x="6485" fg:w="14"/><text x="77.8403%" y="479.50"></text></g><g><title>core::cmp::min (5 samples, 0.06%)</title><rect x="77.6980%" y="453" width="0.0598%" height="15" fill="rgb(250,143,31)" fg:x="6494" fg:w="5"/><text x="77.9480%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.06%)</title><rect x="77.6980%" y="437" width="0.0598%" height="15" fill="rgb(211,110,34)" fg:x="6494" fg:w="5"/><text x="77.9480%" y="447.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 2.29%)</title><rect x="75.5085%" y="549" width="2.2852%" height="15" fill="rgb(215,124,48)" fg:x="6311" fg:w="191"/><text x="75.7585%" y="559.50">&lt;..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (191 samples, 2.29%)</title><rect x="75.5085%" y="533" width="2.2852%" height="15" fill="rgb(216,46,13)" fg:x="6311" fg:w="191"/><text x="75.7585%" y="543.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::take (3 samples, 0.04%)</title><rect x="77.7578%" y="517" width="0.0359%" height="15" fill="rgb(205,184,25)" fg:x="6499" fg:w="3"/><text x="78.0078%" y="527.50"></text></g><g><title>core::mem::replace (3 samples, 0.04%)</title><rect x="77.7578%" y="501" width="0.0359%" height="15" fill="rgb(228,1,10)" fg:x="6499" fg:w="3"/><text x="78.0078%" y="511.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="77.7698%" y="485" width="0.0239%" height="15" fill="rgb(213,116,27)" fg:x="6500" fg:w="2"/><text x="78.0198%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.02%)</title><rect x="77.7698%" y="469" width="0.0239%" height="15" fill="rgb(241,95,50)" fg:x="6500" fg:w="2"/><text x="78.0198%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (8 samples, 0.10%)</title><rect x="77.7937%" y="549" width="0.0957%" height="15" fill="rgb(238,48,32)" fg:x="6502" fg:w="8"/><text x="78.0437%" y="559.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::nth (9 samples, 0.11%)</title><rect x="77.8894%" y="549" width="0.1077%" height="15" fill="rgb(235,113,49)" fg:x="6510" fg:w="9"/><text x="78.1394%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::nth (9 samples, 0.11%)</title><rect x="77.8894%" y="533" width="0.1077%" height="15" fill="rgb(205,127,43)" fg:x="6510" fg:w="9"/><text x="78.1394%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (9 samples, 0.11%)</title><rect x="77.8894%" y="517" width="0.1077%" height="15" fill="rgb(250,162,2)" fg:x="6510" fg:w="9"/><text x="78.1394%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="77.9971%" y="485" width="0.0239%" height="15" fill="rgb(220,13,41)" fg:x="6519" fg:w="2"/><text x="78.2471%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="78.0091%" y="469" width="0.0120%" height="15" fill="rgb(249,221,25)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="78.0091%" y="453" width="0.0120%" height="15" fill="rgb(215,208,19)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="78.0091%" y="437" width="0.0120%" height="15" fill="rgb(236,175,2)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="447.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="78.0091%" y="421" width="0.0120%" height="15" fill="rgb(241,52,2)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="78.0091%" y="405" width="0.0120%" height="15" fill="rgb(248,140,14)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="78.0091%" y="389" width="0.0120%" height="15" fill="rgb(253,22,42)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="399.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="78.0091%" y="373" width="0.0120%" height="15" fill="rgb(234,61,47)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="383.50"></text></g><g><title>realloc (1 samples, 0.01%)</title><rect x="78.0091%" y="357" width="0.0120%" height="15" fill="rgb(208,226,15)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="367.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="78.0091%" y="341" width="0.0120%" height="15" fill="rgb(217,221,4)" fg:x="6520" fg:w="1"/><text x="78.2591%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="77.9971%" y="533" width="0.0359%" height="15" fill="rgb(212,174,34)" fg:x="6519" fg:w="3"/><text x="78.2471%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="77.9971%" y="517" width="0.0359%" height="15" fill="rgb(253,83,4)" fg:x="6519" fg:w="3"/><text x="78.2471%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="77.9971%" y="501" width="0.0359%" height="15" fill="rgb(250,195,49)" fg:x="6519" fg:w="3"/><text x="78.2471%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="78.0211%" y="485" width="0.0120%" height="15" fill="rgb(241,192,25)" fg:x="6521" fg:w="1"/><text x="78.2711%" y="495.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.06%)</title><rect x="78.3082%" y="485" width="0.0598%" height="15" fill="rgb(208,124,10)" fg:x="6545" fg:w="5"/><text x="78.5582%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr_and_cap (1 samples, 0.01%)</title><rect x="78.3680%" y="485" width="0.0120%" height="15" fill="rgb(222,33,0)" fg:x="6550" fg:w="1"/><text x="78.6180%" y="495.50"></text></g><g><title>__rdl_realloc (4 samples, 0.05%)</title><rect x="78.4039%" y="421" width="0.0479%" height="15" fill="rgb(234,209,28)" fg:x="6553" fg:w="4"/><text x="78.6539%" y="431.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.04%)</title><rect x="78.4159%" y="405" width="0.0359%" height="15" fill="rgb(224,11,23)" fg:x="6554" fg:w="3"/><text x="78.6659%" y="415.50"></text></g><g><title>__rust_realloc (2 samples, 0.02%)</title><rect x="78.4518%" y="421" width="0.0239%" height="15" fill="rgb(232,99,1)" fg:x="6557" fg:w="2"/><text x="78.7018%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (50 samples, 0.60%)</title><rect x="78.3920%" y="469" width="0.5982%" height="15" fill="rgb(237,95,45)" fg:x="6552" fg:w="50"/><text x="78.6420%" y="479.50"></text></g><g><title>alloc::alloc::Global::grow_impl (50 samples, 0.60%)</title><rect x="78.3920%" y="453" width="0.5982%" height="15" fill="rgb(208,109,11)" fg:x="6552" fg:w="50"/><text x="78.6420%" y="463.50"></text></g><g><title>alloc::alloc::realloc (49 samples, 0.59%)</title><rect x="78.4039%" y="437" width="0.5863%" height="15" fill="rgb(216,190,48)" fg:x="6553" fg:w="49"/><text x="78.6539%" y="447.50"></text></g><g><title>realloc (43 samples, 0.51%)</title><rect x="78.4757%" y="421" width="0.5145%" height="15" fill="rgb(251,171,36)" fg:x="6559" fg:w="43"/><text x="78.7257%" y="431.50"></text></g><g><title>[libc.so.6] (34 samples, 0.41%)</title><rect x="78.5834%" y="405" width="0.4068%" height="15" fill="rgb(230,62,22)" fg:x="6568" fg:w="34"/><text x="78.8334%" y="415.50"></text></g><g><title>[libc.so.6] (24 samples, 0.29%)</title><rect x="78.7030%" y="389" width="0.2872%" height="15" fill="rgb(225,114,35)" fg:x="6578" fg:w="24"/><text x="78.9530%" y="399.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="78.9902%" y="469" width="0.0120%" height="15" fill="rgb(215,118,42)" fg:x="6602" fg:w="1"/><text x="79.2402%" y="479.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (2 samples, 0.02%)</title><rect x="79.0022%" y="469" width="0.0239%" height="15" fill="rgb(243,119,21)" fg:x="6603" fg:w="2"/><text x="79.2522%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (58 samples, 0.69%)</title><rect x="78.3800%" y="485" width="0.6939%" height="15" fill="rgb(252,177,53)" fg:x="6551" fg:w="58"/><text x="78.6300%" y="495.50"></text></g><g><title>malloc (4 samples, 0.05%)</title><rect x="79.0261%" y="469" width="0.0479%" height="15" fill="rgb(237,209,29)" fg:x="6605" fg:w="4"/><text x="79.2761%" y="479.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="79.0620%" y="453" width="0.0120%" height="15" fill="rgb(212,65,23)" fg:x="6608" fg:w="1"/><text x="79.3120%" y="463.50"></text></g><g><title>[libc.so.6] (1 samples, 0.01%)</title><rect x="79.0620%" y="437" width="0.0120%" height="15" fill="rgb(230,222,46)" fg:x="6608" fg:w="1"/><text x="79.3120%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_for_push (66 samples, 0.79%)</title><rect x="78.3082%" y="517" width="0.7897%" height="15" fill="rgb(215,135,32)" fg:x="6545" fg:w="66"/><text x="78.5582%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (66 samples, 0.79%)</title><rect x="78.3082%" y="501" width="0.7897%" height="15" fill="rgb(246,101,22)" fg:x="6545" fg:w="66"/><text x="78.5582%" y="511.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="79.0739%" y="485" width="0.0239%" height="15" fill="rgb(206,107,13)" fg:x="6609" fg:w="2"/><text x="79.3239%" y="495.50"></text></g><g><title>core::alloc::layout::Layout::array::inner (2 samples, 0.02%)</title><rect x="79.0739%" y="469" width="0.0239%" height="15" fill="rgb(250,100,44)" fg:x="6609" fg:w="2"/><text x="79.3239%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (93 samples, 1.11%)</title><rect x="78.0330%" y="533" width="1.1127%" height="15" fill="rgb(231,147,38)" fg:x="6522" fg:w="93"/><text x="78.2830%" y="543.50"></text></g><g><title>core::ptr::write (4 samples, 0.05%)</title><rect x="79.0979%" y="517" width="0.0479%" height="15" fill="rgb(229,8,40)" fg:x="6611" fg:w="4"/><text x="79.3479%" y="527.50"></text></g><g><title>alloc::string::String::push (99 samples, 1.18%)</title><rect x="77.9971%" y="549" width="1.1845%" height="15" fill="rgb(221,135,30)" fg:x="6519" fg:w="99"/><text x="78.2471%" y="559.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::len_utf8 (3 samples, 0.04%)</title><rect x="79.1457%" y="533" width="0.0359%" height="15" fill="rgb(249,193,18)" fg:x="6615" fg:w="3"/><text x="79.3957%" y="543.50"></text></g><g><title>core::char::methods::len_utf8 (3 samples, 0.04%)</title><rect x="79.1457%" y="517" width="0.0359%" height="15" fill="rgb(209,133,39)" fg:x="6615" fg:w="3"/><text x="79.3957%" y="527.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="79.1936%" y="453" width="0.0120%" height="15" fill="rgb(232,100,14)" fg:x="6619" fg:w="1"/><text x="79.4436%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.12%)</title><rect x="79.1816%" y="549" width="0.1196%" height="15" fill="rgb(224,185,1)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.12%)</title><rect x="79.1816%" y="533" width="0.1196%" height="15" fill="rgb(223,139,8)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.12%)</title><rect x="79.1816%" y="517" width="0.1196%" height="15" fill="rgb(232,213,38)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.12%)</title><rect x="79.1816%" y="501" width="0.1196%" height="15" fill="rgb(207,94,22)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.12%)</title><rect x="79.1816%" y="485" width="0.1196%" height="15" fill="rgb(219,183,54)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.12%)</title><rect x="79.1816%" y="469" width="0.1196%" height="15" fill="rgb(216,185,54)" fg:x="6618" fg:w="10"/><text x="79.4316%" y="479.50"></text></g><g><title>cfree (8 samples, 0.10%)</title><rect x="79.2056%" y="453" width="0.0957%" height="15" fill="rgb(254,217,39)" fg:x="6620" fg:w="8"/><text x="79.4556%" y="463.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="79.2295%" y="437" width="0.0718%" height="15" fill="rgb(240,178,23)" fg:x="6622" fg:w="6"/><text x="79.4795%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (6 samples, 0.07%)</title><rect x="79.3491%" y="469" width="0.0718%" height="15" fill="rgb(218,11,47)" fg:x="6632" fg:w="6"/><text x="79.5991%" y="479.50"></text></g><g><title>yt_history::read_until (377 samples, 4.51%)</title><rect x="74.9821%" y="565" width="4.5106%" height="15" fill="rgb(218,51,51)" fg:x="6267" fg:w="377"/><text x="75.2321%" y="575.50">yt_hi..</text></g><g><title>yt_history::iter_index (16 samples, 0.19%)</title><rect x="79.3013%" y="549" width="0.1914%" height="15" fill="rgb(238,126,27)" fg:x="6628" fg:w="16"/><text x="79.5513%" y="559.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (15 samples, 0.18%)</title><rect x="79.3132%" y="533" width="0.1795%" height="15" fill="rgb(249,202,22)" fg:x="6629" fg:w="15"/><text x="79.5632%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (15 samples, 0.18%)</title><rect x="79.3132%" y="517" width="0.1795%" height="15" fill="rgb(254,195,49)" fg:x="6629" fg:w="15"/><text x="79.5632%" y="527.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (12 samples, 0.14%)</title><rect x="79.3491%" y="501" width="0.1436%" height="15" fill="rgb(208,123,14)" fg:x="6632" fg:w="12"/><text x="79.5991%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.14%)</title><rect x="79.3491%" y="485" width="0.1436%" height="15" fill="rgb(224,200,8)" fg:x="6632" fg:w="12"/><text x="79.5991%" y="495.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="79.4209%" y="469" width="0.0718%" height="15" fill="rgb(217,61,36)" fg:x="6638" fg:w="6"/><text x="79.6709%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (5 samples, 0.06%)</title><rect x="79.4329%" y="453" width="0.0598%" height="15" fill="rgb(206,35,45)" fg:x="6639" fg:w="5"/><text x="79.6829%" y="463.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (286 samples, 3.42%)</title><rect x="82.5317%" y="501" width="3.4219%" height="15" fill="rgb(217,65,33)" fg:x="6898" fg:w="286"/><text x="82.7817%" y="511.50">&lt;co..</text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.08%)</title><rect x="95.3458%" y="469" width="0.0838%" height="15" fill="rgb(222,158,48)" fg:x="7969" fg:w="7"/><text x="95.5958%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::consume (42 samples, 0.50%)</title><rect x="95.4295%" y="469" width="0.5025%" height="15" fill="rgb(254,2,54)" fg:x="7976" fg:w="42"/><text x="95.6795%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::consume (42 samples, 0.50%)</title><rect x="95.4295%" y="453" width="0.5025%" height="15" fill="rgb(250,143,38)" fg:x="7976" fg:w="42"/><text x="95.6795%" y="463.50"></text></g><g><title>core::cmp::min (36 samples, 0.43%)</title><rect x="95.5013%" y="437" width="0.4307%" height="15" fill="rgb(248,25,0)" fg:x="7982" fg:w="36"/><text x="95.7513%" y="447.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (36 samples, 0.43%)</title><rect x="95.5013%" y="421" width="0.4307%" height="15" fill="rgb(206,152,27)" fg:x="7982" fg:w="36"/><text x="95.7513%" y="431.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::BufRead&gt;::fill_buf (18 samples, 0.22%)</title><rect x="95.9320%" y="469" width="0.2154%" height="15" fill="rgb(240,77,30)" fg:x="8018" fg:w="18"/><text x="96.1820%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::fill_buf (18 samples, 0.22%)</title><rect x="95.9320%" y="453" width="0.2154%" height="15" fill="rgb(231,5,3)" fg:x="8018" fg:w="18"/><text x="96.1820%" y="463.50"></text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;mut R&gt;::read_buf (15 samples, 0.18%)</title><rect x="95.9679%" y="437" width="0.1795%" height="15" fill="rgb(207,226,32)" fg:x="8021" fg:w="15"/><text x="96.2179%" y="447.50"></text></g><g><title>&lt;std::fs::File as std::io::Read&gt;::read_buf (15 samples, 0.18%)</title><rect x="95.9679%" y="421" width="0.1795%" height="15" fill="rgb(222,207,47)" fg:x="8021" fg:w="15"/><text x="96.2179%" y="431.50"></text></g><g><title>std::sys::unix::fs::File::read_buf (15 samples, 0.18%)</title><rect x="95.9679%" y="405" width="0.1795%" height="15" fill="rgb(229,115,45)" fg:x="8021" fg:w="15"/><text x="96.2179%" y="415.50"></text></g><g><title>std::sys::unix::fd::FileDesc::read_buf (15 samples, 0.18%)</title><rect x="95.9679%" y="389" width="0.1795%" height="15" fill="rgb(224,191,6)" fg:x="8021" fg:w="15"/><text x="96.2179%" y="399.50"></text></g><g><title>read (15 samples, 0.18%)</title><rect x="95.9679%" y="373" width="0.1795%" height="15" fill="rgb(230,227,24)" fg:x="8021" fg:w="15"/><text x="96.2179%" y="383.50"></text></g><g><title>[unknown] (14 samples, 0.17%)</title><rect x="95.9799%" y="357" width="0.1675%" height="15" fill="rgb(228,80,19)" fg:x="8022" fg:w="14"/><text x="96.2299%" y="367.50"></text></g><g><title>[unknown] (14 samples, 0.17%)</title><rect x="95.9799%" y="341" width="0.1675%" height="15" fill="rgb(247,229,0)" fg:x="8022" fg:w="14"/><text x="96.2299%" y="351.50"></text></g><g><title>[unknown] (14 samples, 0.17%)</title><rect x="95.9799%" y="325" width="0.1675%" height="15" fill="rgb(237,194,15)" fg:x="8022" fg:w="14"/><text x="96.2299%" y="335.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="96.0038%" y="309" width="0.1436%" height="15" fill="rgb(219,203,20)" fg:x="8024" fg:w="12"/><text x="96.2538%" y="319.50"></text></g><g><title>[unknown] (12 samples, 0.14%)</title><rect x="96.0038%" y="293" width="0.1436%" height="15" fill="rgb(234,128,8)" fg:x="8024" fg:w="12"/><text x="96.2538%" y="303.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="96.0995%" y="277" width="0.0479%" height="15" fill="rgb(248,202,8)" fg:x="8032" fg:w="4"/><text x="96.3495%" y="287.50"></text></g><g><title>[unknown] (4 samples, 0.05%)</title><rect x="96.0995%" y="261" width="0.0479%" height="15" fill="rgb(206,104,37)" fg:x="8032" fg:w="4"/><text x="96.3495%" y="271.50"></text></g><g><title>[unknown] (3 samples, 0.04%)</title><rect x="96.1115%" y="245" width="0.0359%" height="15" fill="rgb(223,8,27)" fg:x="8033" fg:w="3"/><text x="96.3615%" y="255.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1354%" y="229" width="0.0120%" height="15" fill="rgb(216,217,28)" fg:x="8035" fg:w="1"/><text x="96.3854%" y="239.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="96.1354%" y="213" width="0.0120%" height="15" fill="rgb(249,199,1)" fg:x="8035" fg:w="1"/><text x="96.3854%" y="223.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (9 samples, 0.11%)</title><rect x="96.1474%" y="469" width="0.1077%" height="15" fill="rgb(240,85,17)" fg:x="8036" fg:w="9"/><text x="96.3974%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::filled (47 samples, 0.56%)</title><rect x="96.2551%" y="469" width="0.5623%" height="15" fill="rgb(206,108,45)" fg:x="8045" fg:w="47"/><text x="96.5051%" y="479.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (8 samples, 0.10%)</title><rect x="96.8174%" y="469" width="0.0957%" height="15" fill="rgb(245,210,41)" fg:x="8092" fg:w="8"/><text x="97.0674%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (513 samples, 6.14%)</title><rect x="92.3666%" y="485" width="6.1378%" height="15" fill="rgb(206,13,37)" fg:x="7720" fg:w="513"/><text x="92.6166%" y="495.50">&lt;std::io..</text></g><g><title>std::io::impls::&lt;impl std::io::Read for &amp;[u8]&gt;::read (133 samples, 1.59%)</title><rect x="96.9131%" y="469" width="1.5913%" height="15" fill="rgb(250,61,18)" fg:x="8100" fg:w="133"/><text x="97.1631%" y="479.50"></text></g><g><title>core::cmp::min (60 samples, 0.72%)</title><rect x="97.7866%" y="453" width="0.7179%" height="15" fill="rgb(235,172,48)" fg:x="8173" fg:w="60"/><text x="98.0366%" y="463.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (60 samples, 0.72%)</title><rect x="97.7866%" y="437" width="0.7179%" height="15" fill="rgb(249,201,17)" fg:x="8173" fg:w="60"/><text x="98.0366%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,424 samples, 17.04%)</title><rect x="81.4788%" y="517" width="17.0376%" height="15" fill="rgb(219,208,6)" fg:x="6810" fg:w="1424"/><text x="81.7288%" y="527.50">&lt;core::iter::adapters::enu..</text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,050 samples, 12.56%)</title><rect x="85.9536%" y="501" width="12.5628%" height="15" fill="rgb(248,31,23)" fg:x="7184" fg:w="1050"/><text x="86.2036%" y="511.50">&lt;std::io::Bytes&lt;R&gt; ..</text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="98.5044%" y="485" width="0.0120%" height="15" fill="rgb(245,15,42)" fg:x="8233" fg:w="1"/><text x="98.7544%" y="495.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1,428 samples, 17.09%)</title><rect x="81.4429%" y="549" width="17.0854%" height="15" fill="rgb(222,217,39)" fg:x="6807" fg:w="1428"/><text x="81.6929%" y="559.50">&lt;&amp;mut I as core::iter::tra..</text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,428 samples, 17.09%)</title><rect x="81.4429%" y="533" width="17.0854%" height="15" fill="rgb(210,219,27)" fg:x="6807" fg:w="1428"/><text x="81.6929%" y="543.50">&lt;core::iter::adapters::pee..</text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="98.5164%" y="517" width="0.0120%" height="15" fill="rgb(252,166,36)" fg:x="8234" fg:w="1"/><text x="98.7664%" y="527.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="98.5164%" y="501" width="0.0120%" height="15" fill="rgb(245,132,34)" fg:x="8234" fg:w="1"/><text x="98.7664%" y="511.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="98.5164%" y="485" width="0.0120%" height="15" fill="rgb(236,54,3)" fg:x="8234" fg:w="1"/><text x="98.7664%" y="495.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (1 samples, 0.01%)</title><rect x="98.5164%" y="469" width="0.0120%" height="15" fill="rgb(241,173,43)" fg:x="8234" fg:w="1"/><text x="98.7664%" y="479.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (67 samples, 0.80%)</title><rect x="98.5284%" y="549" width="0.8016%" height="15" fill="rgb(215,190,9)" fg:x="8235" fg:w="67"/><text x="98.7784%" y="559.50"></text></g><g><title>&lt;core::str::iter::Bytes as core::iter::traits::iterator::Iterator&gt;::nth (24 samples, 0.29%)</title><rect x="99.3300%" y="549" width="0.2872%" height="15" fill="rgb(242,101,16)" fg:x="8302" fg:w="24"/><text x="99.5800%" y="559.50"></text></g><g><title>&lt;core::iter::adapters::copied::Copied&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::nth (24 samples, 0.29%)</title><rect x="99.3300%" y="533" width="0.2872%" height="15" fill="rgb(223,190,21)" fg:x="8302" fg:w="24"/><text x="99.5800%" y="543.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::nth (24 samples, 0.29%)</title><rect x="99.3300%" y="517" width="0.2872%" height="15" fill="rgb(215,228,25)" fg:x="8302" fg:w="24"/><text x="99.5800%" y="527.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="99.6291%" y="453" width="0.0120%" height="15" fill="rgb(225,36,22)" fg:x="8327" fg:w="1"/><text x="99.8791%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="99.6291%" y="437" width="0.0120%" height="15" fill="rgb(251,106,46)" fg:x="8327" fg:w="1"/><text x="99.8791%" y="447.50"></text></g><g><title>__rust_dealloc (2 samples, 0.02%)</title><rect x="99.6411%" y="453" width="0.0239%" height="15" fill="rgb(208,90,1)" fg:x="8328" fg:w="2"/><text x="99.8911%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (13 samples, 0.16%)</title><rect x="99.6171%" y="549" width="0.1555%" height="15" fill="rgb(243,10,4)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (13 samples, 0.16%)</title><rect x="99.6171%" y="533" width="0.1555%" height="15" fill="rgb(212,137,27)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (13 samples, 0.16%)</title><rect x="99.6171%" y="517" width="0.1555%" height="15" fill="rgb(231,220,49)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="527.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.16%)</title><rect x="99.6171%" y="501" width="0.1555%" height="15" fill="rgb(237,96,20)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.16%)</title><rect x="99.6171%" y="485" width="0.1555%" height="15" fill="rgb(239,229,30)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.16%)</title><rect x="99.6171%" y="469" width="0.1555%" height="15" fill="rgb(219,65,33)" fg:x="8326" fg:w="13"/><text x="99.8671%" y="479.50"></text></g><g><title>cfree (9 samples, 0.11%)</title><rect x="99.6650%" y="453" width="0.1077%" height="15" fill="rgb(243,134,7)" fg:x="8330" fg:w="9"/><text x="99.9150%" y="463.50"></text></g><g><title>[libc.so.6] (6 samples, 0.07%)</title><rect x="99.7009%" y="437" width="0.0718%" height="15" fill="rgb(216,177,54)" fg:x="8333" fg:w="6"/><text x="99.9509%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (7 samples, 0.08%)</title><rect x="99.8086%" y="469" width="0.0838%" height="15" fill="rgb(211,160,20)" fg:x="8342" fg:w="7"/><text x="100.0586%" y="479.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek::{{closure}} (14 samples, 0.17%)</title><rect x="99.8086%" y="501" width="0.1675%" height="15" fill="rgb(239,85,39)" fg:x="8342" fg:w="14"/><text x="100.0586%" y="511.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.17%)</title><rect x="99.8086%" y="485" width="0.1675%" height="15" fill="rgb(232,125,22)" fg:x="8342" fg:w="14"/><text x="100.0586%" y="495.50"></text></g><g><title>&lt;std::io::Bytes&lt;R&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.08%)</title><rect x="99.8923%" y="469" width="0.0838%" height="15" fill="rgb(244,57,34)" fg:x="8349" fg:w="7"/><text x="100.1423%" y="479.50"></text></g><g><title>&lt;std::io::buffered::bufreader::BufReader&lt;R&gt; as std::io::Read&gt;::read (1 samples, 0.01%)</title><rect x="99.9641%" y="453" width="0.0120%" height="15" fill="rgb(214,203,32)" fg:x="8355" fg:w="1"/><text x="100.2141%" y="463.50"></text></g><g><title>std::io::buffered::bufreader::buffer::Buffer::pos (1 samples, 0.01%)</title><rect x="99.9641%" y="437" width="0.0120%" height="15" fill="rgb(207,58,43)" fg:x="8355" fg:w="1"/><text x="100.2141%" y="447.50"></text></g><g><title>all (8,358 samples, 100%)</title><rect x="0.0000%" y="917" width="100.0000%" height="15" fill="rgb(215,193,15)" fg:x="0" fg:w="8358"/><text x="0.2500%" y="927.50"></text></g><g><title>yt-history (8,358 samples, 100.00%)</title><rect x="0.0000%" y="901" width="100.0000%" height="15" fill="rgb(232,15,44)" fg:x="0" fg:w="8358"/><text x="0.2500%" y="911.50">yt-history</text></g><g><title>_start (8,332 samples, 99.69%)</title><rect x="0.3111%" y="885" width="99.6889%" height="15" fill="rgb(212,3,48)" fg:x="26" fg:w="8332"/><text x="0.5611%" y="895.50">_start</text></g><g><title>__libc_start_main (8,332 samples, 99.69%)</title><rect x="0.3111%" y="869" width="99.6889%" height="15" fill="rgb(218,128,7)" fg:x="26" fg:w="8332"/><text x="0.5611%" y="879.50">__libc_start_main</text></g><g><title>[libc.so.6] (8,332 samples, 99.69%)</title><rect x="0.3111%" y="853" width="99.6889%" height="15" fill="rgb(226,216,39)" fg:x="26" fg:w="8332"/><text x="0.5611%" y="863.50">[libc.so.6]</text></g><g><title>main (8,332 samples, 99.69%)</title><rect x="0.3111%" y="837" width="99.6889%" height="15" fill="rgb(243,47,51)" fg:x="26" fg:w="8332"/><text x="0.5611%" y="847.50">main</text></g><g><title>std::rt::lang_start_internal (8,332 samples, 99.69%)</title><rect x="0.3111%" y="821" width="99.6889%" height="15" fill="rgb(241,183,40)" fg:x="26" fg:w="8332"/><text x="0.5611%" y="831.50">std::rt::lang_start_internal</text></g><g><title>std::panic::catch_unwind (8,331 samples, 99.68%)</title><rect x="0.3230%" y="805" width="99.6770%" height="15" fill="rgb(231,217,32)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="815.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,331 samples, 99.68%)</title><rect x="0.3230%" y="789" width="99.6770%" height="15" fill="rgb(229,61,38)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="799.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,331 samples, 99.68%)</title><rect x="0.3230%" y="773" width="99.6770%" height="15" fill="rgb(225,210,5)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="783.50">std::panicking::try::do_call</text></g><g><title>std::rt::lang_start_internal::{{closure}} (8,331 samples, 99.68%)</title><rect x="0.3230%" y="757" width="99.6770%" height="15" fill="rgb(231,79,45)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="767.50">std::rt::lang_start_internal::{{closure}}</text></g><g><title>std::panic::catch_unwind (8,331 samples, 99.68%)</title><rect x="0.3230%" y="741" width="99.6770%" height="15" fill="rgb(224,100,7)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="751.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (8,331 samples, 99.68%)</title><rect x="0.3230%" y="725" width="99.6770%" height="15" fill="rgb(241,198,18)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="735.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (8,331 samples, 99.68%)</title><rect x="0.3230%" y="709" width="99.6770%" height="15" fill="rgb(252,97,53)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="719.50">std::panicking::try::do_call</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (8,331 samples, 99.68%)</title><rect x="0.3230%" y="693" width="99.6770%" height="15" fill="rgb(220,88,7)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="703.50">core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once</text></g><g><title>std::rt::lang_start::{{closure}} (8,331 samples, 99.68%)</title><rect x="0.3230%" y="677" width="99.6770%" height="15" fill="rgb(213,176,14)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="687.50">std::rt::lang_start::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (8,331 samples, 99.68%)</title><rect x="0.3230%" y="661" width="99.6770%" height="15" fill="rgb(246,73,7)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="671.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>core::ops::function::FnOnce::call_once (8,331 samples, 99.68%)</title><rect x="0.3230%" y="645" width="99.6770%" height="15" fill="rgb(245,64,36)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="655.50">core::ops::function::FnOnce::call_once</text></g><g><title>yt_history::main (8,331 samples, 99.68%)</title><rect x="0.3230%" y="629" width="99.6770%" height="15" fill="rgb(245,80,10)" fg:x="27" fg:w="8331"/><text x="0.5730%" y="639.50">yt_history::main</text></g><g><title>yt_history::load_models (8,326 samples, 99.62%)</title><rect x="0.3829%" y="613" width="99.6171%" height="15" fill="rgb(232,107,50)" fg:x="32" fg:w="8326"/><text x="0.6329%" y="623.50">yt_history::load_models</text></g><g><title>yt_history::parse (8,326 samples, 99.62%)</title><rect x="0.3829%" y="597" width="99.6171%" height="15" fill="rgb(253,3,0)" fg:x="32" fg:w="8326"/><text x="0.6329%" y="607.50">yt_history::parse</text></g><g><title>yt_history::read_data_row (2,197 samples, 26.29%)</title><rect x="73.7138%" y="581" width="26.2862%" height="15" fill="rgb(212,99,53)" fg:x="6161" fg:w="2197"/><text x="73.9638%" y="591.50">yt_history::read_data_row</text></g><g><title>yt_history::skip_to (1,714 samples, 20.51%)</title><rect x="79.4927%" y="565" width="20.5073%" height="15" fill="rgb(249,111,54)" fg:x="6644" fg:w="1714"/><text x="79.7427%" y="575.50">yt_history::skip_to</text></g><g><title>yt_history::iter_index (19 samples, 0.23%)</title><rect x="99.7727%" y="549" width="0.2273%" height="15" fill="rgb(249,55,30)" fg:x="8339" fg:w="19"/><text x="100.0227%" y="559.50"></text></g><g><title>core::iter::adapters::peekable::Peekable&lt;I&gt;::peek (19 samples, 0.23%)</title><rect x="99.7727%" y="533" width="0.2273%" height="15" fill="rgb(237,47,42)" fg:x="8339" fg:w="19"/><text x="100.0227%" y="543.50"></text></g><g><title>core::option::Option&lt;T&gt;::get_or_insert_with (19 samples, 0.23%)</title><rect x="99.7727%" y="517" width="0.2273%" height="15" fill="rgb(211,20,18)" fg:x="8339" fg:w="19"/><text x="100.0227%" y="527.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="99.9761%" y="501" width="0.0239%" height="15" fill="rgb(231,203,46)" fg:x="8356" fg:w="2"/><text x="100.2261%" y="511.50"></text></g></svg></svg>